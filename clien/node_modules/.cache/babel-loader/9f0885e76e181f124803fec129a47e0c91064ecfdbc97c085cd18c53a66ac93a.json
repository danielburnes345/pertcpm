{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\pertcpm\\\\client\\\\src\\\\pert.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { AppContext } from './AppContext';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Node {\n  constructor(id) {\n    this.id = id;\n    this.next = [];\n  }\n}\nclass NodeTree {\n  constructor() {\n    this.nodes = {};\n  }\n  append(id, nextIds) {\n    const newNode = new Node(id);\n    nextIds.forEach(nextId => {\n      if (this.nodes[nextId]) {\n        this.nodes[nextId].next.push(newNode);\n      }\n    });\n    this.nodes[id] = newNode;\n  }\n  display() {\n    Object.values(this.nodes).forEach(node => {\n      console.log(`Node ${node.id} has next nodes with ids:`, node.next.map(nextNode => nextNode.id));\n    });\n  }\n}\nfunction Pert() {\n  _s();\n  const tree = new NodeTree();\n  const {\n    tasklist,\n    dispatch,\n    loading\n  } = useContext(AppContext);\n  function generatePert() {\n    tasklist.forEach(task => {\n      tree.append(task.id, [task.preid]);\n    });\n    let aux = tree.nodes[1];\n    console.log(aux);\n    tree.display();\n    const divs = [];\n    while (aux != null) {\n      //aux.next.forEach((link)=>{\n      //divs.push(<div class=\"circulo\">{link.id}</div>);\n      //})\n      aux = aux.next;\n    }\n    return divs;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"contenedor\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this) : generatePert()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Pert, \"e8I/eBtHcHa94Dvg2eMqBRV67xg=\");\n_c = Pert;\nexport default Pert;\nvar _c;\n$RefreshReg$(_c, \"Pert\");","map":{"version":3,"names":["React","useState","useContext","AppContext","jsxDEV","_jsxDEV","Node","constructor","id","next","NodeTree","nodes","append","nextIds","newNode","forEach","nextId","push","display","Object","values","node","console","log","map","nextNode","Pert","_s","tree","tasklist","dispatch","loading","generatePert","task","preid","aux","divs","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/pertcpm/client/src/pert.js"],"sourcesContent":["\r\nimport React, { useState, useContext } from \"react\";\r\nimport { AppContext } from './AppContext';\r\nimport './style.css';\r\nclass Node {\r\n  constructor(id) {\r\n    this.id = id;\r\n    this.next = [];\r\n  }\r\n}\r\n\r\nclass NodeTree {\r\n  constructor() {\r\n    this.nodes = {};\r\n  }\r\n\r\n  append(id, nextIds) {\r\n    const newNode = new Node(id);\r\n    nextIds.forEach(nextId => {\r\n      if (this.nodes[nextId]) {\r\n        this.nodes[nextId].next.push(newNode);\r\n      }\r\n    });\r\n    this.nodes[id] = newNode;\r\n  }\r\n\r\n  display() {\r\n    Object.values(this.nodes).forEach(node => {\r\n      console.log(`Node ${node.id} has next nodes with ids:`, node.next.map(nextNode => nextNode.id));\r\n    });\r\n  }\r\n}\r\nfunction Pert(){\r\nconst tree = new NodeTree();\r\nconst { tasklist, dispatch, loading } = useContext(AppContext);\r\nfunction generatePert(){\r\n  tasklist.forEach((task)=>{\r\n    tree.append(task.id,[task.preid]);\r\n  })\r\n  let aux = tree.nodes[1];\r\n  console.log(aux);\r\n  tree.display();\r\n  const divs = [];\r\n  while(aux!=null){\r\n    //aux.next.forEach((link)=>{\r\n      //divs.push(<div class=\"circulo\">{link.id}</div>);\r\n    //})\r\n    aux = aux.next;\r\n  }\r\n  \r\n  return divs;\r\n}\r\nreturn (\r\n\r\n    <div class=\"contenedor\" >{loading ? (\r\n      <div>Loading...</div>\r\n    ) : (generatePert())}</div>\r\n);\r\n}\r\n\r\nexport default Pert;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrB,MAAMC,IAAI,CAAC;EACTC,WAAWA,CAACC,EAAE,EAAE;IACd,IAAI,CAACA,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,IAAI,GAAG,EAAE;EAChB;AACF;AAEA,MAAMC,QAAQ,CAAC;EACbH,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACI,KAAK,GAAG,CAAC,CAAC;EACjB;EAEAC,MAAMA,CAACJ,EAAE,EAAEK,OAAO,EAAE;IAClB,MAAMC,OAAO,GAAG,IAAIR,IAAI,CAACE,EAAE,CAAC;IAC5BK,OAAO,CAACE,OAAO,CAACC,MAAM,IAAI;MACxB,IAAI,IAAI,CAACL,KAAK,CAACK,MAAM,CAAC,EAAE;QACtB,IAAI,CAACL,KAAK,CAACK,MAAM,CAAC,CAACP,IAAI,CAACQ,IAAI,CAACH,OAAO,CAAC;MACvC;IACF,CAAC,CAAC;IACF,IAAI,CAACH,KAAK,CAACH,EAAE,CAAC,GAAGM,OAAO;EAC1B;EAEAI,OAAOA,CAAA,EAAG;IACRC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACT,KAAK,CAAC,CAACI,OAAO,CAACM,IAAI,IAAI;MACxCC,OAAO,CAACC,GAAG,CAAE,QAAOF,IAAI,CAACb,EAAG,2BAA0B,EAAEa,IAAI,CAACZ,IAAI,CAACe,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACjB,EAAE,CAAC,CAAC;IACjG,CAAC,CAAC;EACJ;AACF;AACA,SAASkB,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAMC,IAAI,GAAG,IAAIlB,QAAQ,CAAC,CAAC;EAC3B,MAAM;IAAEmB,QAAQ;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAG7B,UAAU,CAACC,UAAU,CAAC;EAC9D,SAAS6B,YAAYA,CAAA,EAAE;IACrBH,QAAQ,CAACd,OAAO,CAAEkB,IAAI,IAAG;MACvBL,IAAI,CAAChB,MAAM,CAACqB,IAAI,CAACzB,EAAE,EAAC,CAACyB,IAAI,CAACC,KAAK,CAAC,CAAC;IACnC,CAAC,CAAC;IACF,IAAIC,GAAG,GAAGP,IAAI,CAACjB,KAAK,CAAC,CAAC,CAAC;IACvBW,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC;IAChBP,IAAI,CAACV,OAAO,CAAC,CAAC;IACd,MAAMkB,IAAI,GAAG,EAAE;IACf,OAAMD,GAAG,IAAE,IAAI,EAAC;MACd;MACE;MACF;MACAA,GAAG,GAAGA,GAAG,CAAC1B,IAAI;IAChB;IAEA,OAAO2B,IAAI;EACb;EACA,oBAEI/B,OAAA;IAAKgC,KAAK,EAAC,YAAY;IAAAC,QAAA,EAAGP,OAAO,gBAC/B1B,OAAA;MAAAiC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAClBV,YAAY,CAAC;EAAE;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE/B;AAACf,EAAA,CA1BQD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AA4Bb,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{createContext,useState,useEffect,useReducer}from'react';// Define your context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const AppContext=/*#__PURE__*/createContext();// Define your reducer function\nexport const AppReducer=(state,action)=>{switch(action.type){case'ADD_TASK':return{...state,tasklist:[...state.tasklist,action.payload]};case'DELETE_TASK':return{...state,tasklist:state.tasklist.filter(task=>task.text!==action.payload.text)};case'SET_TASKLIST':state.tasklist=action.payload;state.loading=false;return{...state};default:return state;}};// Create your provider component\nexport const AppProvider=props=>{const[state,dispatch]=useReducer(AppReducer,{tasklist:[],loading:true});useEffect(()=>{const fetchData=async()=>{try{const response=await fetch('http://localhost:5000/task');if(!response.ok){throw new Error('Failed to fetch data');}const data=await response.json();dispatch({type:'SET_TASKLIST',payload:data});}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);return/*#__PURE__*/_jsx(AppContext.Provider,{value:{tasklist:state.tasklist,dispatch,loading:state.loading},children:props.children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useReducer","jsx","_jsx","AppContext","AppReducer","state","action","type","tasklist","payload","filter","task","text","loading","AppProvider","props","dispatch","fetchData","response","fetch","ok","Error","data","json","error","console","Provider","value","children"],"sources":["C:/xampp/htdocs/pertcpm/clien/src/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useReducer } from 'react';\r\n\r\n// Define your context\r\nexport const AppContext = createContext();\r\n\r\n// Define your reducer function\r\nexport const AppReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TASK':\r\n            return {\r\n                ...state,\r\n                tasklist: [...state.tasklist, action.payload]\r\n            };\r\n        case 'DELETE_TASK':\r\n            return {\r\n                ...state,\r\n                tasklist: state.tasklist.filter(task => task.text !== action.payload.text)\r\n            };\r\n        case 'SET_TASKLIST':\r\n            \r\n                state.tasklist = action.payload;\r\n                state.loading = false;\r\n                return {\r\n                    ...state,\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Create your provider component\r\nexport const AppProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AppReducer, { tasklist: [],loading:true });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/task');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch data');\r\n                }\r\n                const data = await response.json();\r\n                dispatch({ type: 'SET_TASKLIST', payload: data });\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n        \r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <AppContext.Provider value={{tasklist:state.tasklist, dispatch, loading:state.loading }}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAE7E;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,UAAU,cAAGN,aAAa,CAAC,CAAC,CAEzC;AACA,MAAO,MAAM,CAAAO,UAAU,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACzC,OAAQA,MAAM,CAACC,IAAI,EACf,IAAK,UAAU,CACX,MAAO,CACH,GAAGF,KAAK,CACRG,QAAQ,CAAE,CAAC,GAAGH,KAAK,CAACG,QAAQ,CAAEF,MAAM,CAACG,OAAO,CAChD,CAAC,CACL,IAAK,aAAa,CACd,MAAO,CACH,GAAGJ,KAAK,CACRG,QAAQ,CAAEH,KAAK,CAACG,QAAQ,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,IAAI,GAAKN,MAAM,CAACG,OAAO,CAACG,IAAI,CAC7E,CAAC,CACL,IAAK,cAAc,CAEXP,KAAK,CAACG,QAAQ,CAAGF,MAAM,CAACG,OAAO,CAC/BJ,KAAK,CAACQ,OAAO,CAAG,KAAK,CACrB,MAAO,CACH,GAAGR,KACP,CAAC,CACT,QACI,MAAO,CAAAA,KAAK,CACpB,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,WAAW,CAAIC,KAAK,EAAK,CAClC,KAAM,CAACV,KAAK,CAAEW,QAAQ,CAAC,CAAGhB,UAAU,CAACI,UAAU,CAAE,CAAEI,QAAQ,CAAE,EAAE,CAACK,OAAO,CAAC,IAAK,CAAC,CAAC,CAE/Ed,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAkB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAC1D,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CAC3C,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCP,QAAQ,CAAC,CAAET,IAAI,CAAE,cAAc,CAAEE,OAAO,CAAEa,IAAK,CAAC,CAAC,CACrD,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CAAC,CAEDP,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIf,IAAA,CAACC,UAAU,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAACnB,QAAQ,CAACH,KAAK,CAACG,QAAQ,CAAEQ,QAAQ,CAAEH,OAAO,CAACR,KAAK,CAACQ,OAAQ,CAAE,CAAAe,QAAA,CACnFb,KAAK,CAACa,QAAQ,CACE,CAAC,CAE9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
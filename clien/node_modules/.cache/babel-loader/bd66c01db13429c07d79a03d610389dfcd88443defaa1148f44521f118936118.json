{"ast":null,"code":"(function (window, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    window.jStat = factory();\n  }\n})(this, function () {\n  var jStat = function (Math, undefined) {\n    console.warn('The npm package jStat is no longer maintained. Instead use jstat (lowercase).');\n    console.warn('Visit https://www.npmjs.com/package/jstat for more information.');\n\n    // For quick reference.\n    var concat = Array.prototype.concat;\n    var slice = Array.prototype.slice;\n    var toString = Object.prototype.toString;\n\n    // Calculate correction for IEEE error\n    // TODO: This calculation can be improved.\n    function calcRdx(n, m) {\n      var val = n > m ? n : m;\n      return Math.pow(10, 17 - ~~(Math.log(val > 0 ? val : -val) * Math.LOG10E));\n    }\n    var isArray = Array.isArray || function isArray(arg) {\n      return toString.call(arg) === '[object Array]';\n    };\n    function isFunction(arg) {\n      return toString.call(arg) === '[object Function]';\n    }\n    function isNumber(arg) {\n      return typeof arg === 'number' && arg === arg;\n    }\n\n    // Converts the jStat matrix to vector.\n    function toVector(arr) {\n      return concat.apply([], arr);\n    }\n\n    // The one and only jStat constructor.\n    function jStat() {\n      return new jStat._init(arguments);\n    }\n\n    // TODO: Remove after all references in src files have been removed.\n    jStat.fn = jStat.prototype;\n\n    // By separating the initializer from the constructor it's easier to handle\n    // always returning a new instance whether \"new\" was used or not.\n    jStat._init = function _init(args) {\n      // If first argument is an array, must be vector or matrix.\n      if (isArray(args[0])) {\n        // Check if matrix.\n        if (isArray(args[0][0])) {\n          // See if a mapping function was also passed.\n          if (isFunction(args[1])) args[0] = jStat.map(args[0], args[1]);\n          // Iterate over each is faster than this.push.apply(this, args[0].\n          for (var i = 0; i < args[0].length; i++) this[i] = args[0][i];\n          this.length = args[0].length;\n\n          // Otherwise must be a vector.\n        } else {\n          this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n          this.length = 1;\n        }\n\n        // If first argument is number, assume creation of sequence.\n      } else if (isNumber(args[0])) {\n        this[0] = jStat.seq.apply(null, args);\n        this.length = 1;\n\n        // Handle case when jStat object is passed to jStat.\n      } else if (args[0] instanceof jStat) {\n        // Duplicate the object and pass it back.\n        return jStat(args[0].toArray());\n\n        // Unexpected argument value, return empty jStat object.\n        // TODO: This is strange behavior. Shouldn't this throw or some such to let\n        // the user know they had bad arguments?\n      } else {\n        this[0] = [];\n        this.length = 1;\n      }\n      return this;\n    };\n    jStat._init.prototype = jStat.prototype;\n    jStat._init.constructor = jStat;\n\n    // Utility functions.\n    // TODO: for internal use only?\n    jStat.utils = {\n      calcRdx: calcRdx,\n      isArray: isArray,\n      isFunction: isFunction,\n      isNumber: isNumber,\n      toVector: toVector\n    };\n    jStat._random_fn = Math.random;\n    jStat.setRandom = function setRandom(fn) {\n      if (typeof fn !== 'function') throw new TypeError('fn is not a function');\n      jStat._random_fn = fn;\n    };\n\n    // Easily extend the jStat object.\n    // TODO: is this seriously necessary?\n    jStat.extend = function extend(obj) {\n      var i, j;\n      if (arguments.length === 1) {\n        for (j in obj) jStat[j] = obj[j];\n        return this;\n      }\n      for (i = 1; i < arguments.length; i++) {\n        for (j in arguments[i]) obj[j] = arguments[i][j];\n      }\n      return obj;\n    };\n\n    // Returns the number of rows in the matrix.\n    jStat.rows = function rows(arr) {\n      return arr.length || 1;\n    };\n\n    // Returns the number of columns in the matrix.\n    jStat.cols = function cols(arr) {\n      return arr[0].length || 1;\n    };\n\n    // Returns the dimensions of the object { rows: i, cols: j }\n    jStat.dimensions = function dimensions(arr) {\n      return {\n        rows: jStat.rows(arr),\n        cols: jStat.cols(arr)\n      };\n    };\n\n    // Returns a specified row as a vector or return a sub matrix by pick some rows\n    jStat.row = function row(arr, index) {\n      if (isArray(index)) {\n        return index.map(function (i) {\n          return jStat.row(arr, i);\n        });\n      }\n      return arr[index];\n    };\n\n    // return row as array\n    // rowa([[1,2],[3,4]],0) -> [1,2]\n    jStat.rowa = function rowa(arr, i) {\n      return jStat.row(arr, i);\n    };\n\n    // Returns the specified column as a vector or return a sub matrix by pick some\n    // columns\n    jStat.col = function col(arr, index) {\n      if (isArray(index)) {\n        var submat = jStat.arange(arr.length).map(function () {\n          return new Array(index.length);\n        });\n        index.forEach(function (ind, i) {\n          jStat.arange(arr.length).forEach(function (j) {\n            submat[j][i] = arr[j][ind];\n          });\n        });\n        return submat;\n      }\n      var column = new Array(arr.length);\n      for (var i = 0; i < arr.length; i++) column[i] = [arr[i][index]];\n      return column;\n    };\n\n    // return column as array\n    // cola([[1,2],[3,4]],0) -> [1,3]\n    jStat.cola = function cola(arr, i) {\n      return jStat.col(arr, i).map(function (a) {\n        return a[0];\n      });\n    };\n\n    // Returns the diagonal of the matrix\n    jStat.diag = function diag(arr) {\n      var nrow = jStat.rows(arr);\n      var res = new Array(nrow);\n      for (var row = 0; row < nrow; row++) res[row] = [arr[row][row]];\n      return res;\n    };\n\n    // Returns the anti-diagonal of the matrix\n    jStat.antidiag = function antidiag(arr) {\n      var nrow = jStat.rows(arr) - 1;\n      var res = new Array(nrow);\n      for (var i = 0; nrow >= 0; nrow--, i++) res[i] = [arr[i][nrow]];\n      return res;\n    };\n\n    // Transpose a matrix or array.\n    jStat.transpose = function transpose(arr) {\n      var obj = [];\n      var objArr, rows, cols, j, i;\n\n      // Make sure arr is in matrix format.\n      if (!isArray(arr[0])) arr = [arr];\n      rows = arr.length;\n      cols = arr[0].length;\n      for (i = 0; i < cols; i++) {\n        objArr = new Array(rows);\n        for (j = 0; j < rows; j++) objArr[j] = arr[j][i];\n        obj.push(objArr);\n      }\n\n      // If obj is vector, return only single array.\n      return obj.length === 1 ? obj[0] : obj;\n    };\n\n    // Map a function to an array or array of arrays.\n    // \"toAlter\" is an internal variable.\n    jStat.map = function map(arr, func, toAlter) {\n      var row, nrow, ncol, res, col;\n      if (!isArray(arr[0])) arr = [arr];\n      nrow = arr.length;\n      ncol = arr[0].length;\n      res = toAlter ? arr : new Array(nrow);\n      for (row = 0; row < nrow; row++) {\n        // if the row doesn't exist, create it\n        if (!res[row]) res[row] = new Array(ncol);\n        for (col = 0; col < ncol; col++) res[row][col] = func(arr[row][col], row, col);\n      }\n      return res.length === 1 ? res[0] : res;\n    };\n\n    // Cumulatively combine the elements of an array or array of arrays using a function.\n    jStat.cumreduce = function cumreduce(arr, func, toAlter) {\n      var row, nrow, ncol, res, col;\n      if (!isArray(arr[0])) arr = [arr];\n      nrow = arr.length;\n      ncol = arr[0].length;\n      res = toAlter ? arr : new Array(nrow);\n      for (row = 0; row < nrow; row++) {\n        // if the row doesn't exist, create it\n        if (!res[row]) res[row] = new Array(ncol);\n        if (ncol > 0) res[row][0] = arr[row][0];\n        for (col = 1; col < ncol; col++) res[row][col] = func(res[row][col - 1], arr[row][col]);\n      }\n      return res.length === 1 ? res[0] : res;\n    };\n\n    // Destructively alter an array.\n    jStat.alter = function alter(arr, func) {\n      return jStat.map(arr, func, true);\n    };\n\n    // Generate a rows x cols matrix according to the supplied function.\n    jStat.create = function create(rows, cols, func) {\n      var res = new Array(rows);\n      var i, j;\n      if (isFunction(cols)) {\n        func = cols;\n        cols = rows;\n      }\n      for (i = 0; i < rows; i++) {\n        res[i] = new Array(cols);\n        for (j = 0; j < cols; j++) res[i][j] = func(i, j);\n      }\n      return res;\n    };\n    function retZero() {\n      return 0;\n    }\n\n    // Generate a rows x cols matrix of zeros.\n    jStat.zeros = function zeros(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, retZero);\n    };\n    function retOne() {\n      return 1;\n    }\n\n    // Generate a rows x cols matrix of ones.\n    jStat.ones = function ones(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, retOne);\n    };\n\n    // Generate a rows x cols matrix of uniformly random numbers.\n    jStat.rand = function rand(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, jStat._random_fn);\n    };\n    function retIdent(i, j) {\n      return i === j ? 1 : 0;\n    }\n\n    // Generate an identity matrix of size row x cols.\n    jStat.identity = function identity(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, retIdent);\n    };\n\n    // Tests whether a matrix is symmetric\n    jStat.symmetric = function symmetric(arr) {\n      var size = arr.length;\n      var row, col;\n      if (arr.length !== arr[0].length) return false;\n      for (row = 0; row < size; row++) {\n        for (col = 0; col < size; col++) if (arr[col][row] !== arr[row][col]) return false;\n      }\n      return true;\n    };\n\n    // Set all values to zero.\n    jStat.clear = function clear(arr) {\n      return jStat.alter(arr, retZero);\n    };\n\n    // Generate sequence.\n    jStat.seq = function seq(min, max, length, func) {\n      if (!isFunction(func)) func = false;\n      var arr = [];\n      var hival = calcRdx(min, max);\n      var step = (max * hival - min * hival) / ((length - 1) * hival);\n      var current = min;\n      var cnt;\n\n      // Current is assigned using a technique to compensate for IEEE error.\n      // TODO: Needs better implementation.\n      for (cnt = 0; current <= max && cnt < length; cnt++, current = (min * hival + step * hival * cnt) / hival) {\n        arr.push(func ? func(current, cnt) : current);\n      }\n      return arr;\n    };\n\n    // arange(5) -> [0,1,2,3,4]\n    // arange(1,5) -> [1,2,3,4]\n    // arange(5,1,-1) -> [5,4,3,2]\n    jStat.arange = function arange(start, end, step) {\n      var rl = [];\n      var i;\n      step = step || 1;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      }\n      if (start === end || step === 0) {\n        return [];\n      }\n      if (start < end && step < 0) {\n        return [];\n      }\n      if (start > end && step > 0) {\n        return [];\n      }\n      if (step > 0) {\n        for (i = start; i < end; i += step) {\n          rl.push(i);\n        }\n      } else {\n        for (i = start; i > end; i += step) {\n          rl.push(i);\n        }\n      }\n      return rl;\n    };\n\n    // A=[[1,2,3],[4,5,6],[7,8,9]]\n    // slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n    // slice(A,1,{start:1}) -> [5,6]\n    // as numpy code A[:2,1:]\n    jStat.slice = function () {\n      function _slice(list, start, end, step) {\n        // note it's not equal to range.map mode it's a bug\n        var i;\n        var rl = [];\n        var length = list.length;\n        if (start === undefined && end === undefined && step === undefined) {\n          return jStat.copy(list);\n        }\n        start = start || 0;\n        end = end || list.length;\n        start = start >= 0 ? start : length + start;\n        end = end >= 0 ? end : length + end;\n        step = step || 1;\n        if (start === end || step === 0) {\n          return [];\n        }\n        if (start < end && step < 0) {\n          return [];\n        }\n        if (start > end && step > 0) {\n          return [];\n        }\n        if (step > 0) {\n          for (i = start; i < end; i += step) {\n            rl.push(list[i]);\n          }\n        } else {\n          for (i = start; i > end; i += step) {\n            rl.push(list[i]);\n          }\n        }\n        return rl;\n      }\n      function slice(list, rcSlice) {\n        var colSlice, rowSlice;\n        rcSlice = rcSlice || {};\n        if (isNumber(rcSlice.row)) {\n          if (isNumber(rcSlice.col)) return list[rcSlice.row][rcSlice.col];\n          var row = jStat.rowa(list, rcSlice.row);\n          colSlice = rcSlice.col || {};\n          return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n        }\n        if (isNumber(rcSlice.col)) {\n          var col = jStat.cola(list, rcSlice.col);\n          rowSlice = rcSlice.row || {};\n          return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n        }\n        rowSlice = rcSlice.row || {};\n        colSlice = rcSlice.col || {};\n        var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n        return rows.map(function (row) {\n          return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n        });\n      }\n      return slice;\n    }();\n\n    // A=[[1,2,3],[4,5,6],[7,8,9]]\n    // sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n    // A=[[1,2,3],[4,0,0],[7,0,0]]\n    jStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n      var nl, ml;\n      if (isNumber(rcSlice.row)) {\n        if (isNumber(rcSlice.col)) return A[rcSlice.row][rcSlice.col] = B;\n        rcSlice.col = rcSlice.col || {};\n        rcSlice.col.start = rcSlice.col.start || 0;\n        rcSlice.col.end = rcSlice.col.end || A[0].length;\n        rcSlice.col.step = rcSlice.col.step || 1;\n        nl = jStat.arange(rcSlice.col.start, Math.min(A.length, rcSlice.col.end), rcSlice.col.step);\n        var m = rcSlice.row;\n        nl.forEach(function (n, i) {\n          A[m][n] = B[i];\n        });\n        return A;\n      }\n      if (isNumber(rcSlice.col)) {\n        rcSlice.row = rcSlice.row || {};\n        rcSlice.row.start = rcSlice.row.start || 0;\n        rcSlice.row.end = rcSlice.row.end || A.length;\n        rcSlice.row.step = rcSlice.row.step || 1;\n        ml = jStat.arange(rcSlice.row.start, Math.min(A[0].length, rcSlice.row.end), rcSlice.row.step);\n        var n = rcSlice.col;\n        ml.forEach(function (m, j) {\n          A[m][n] = B[j];\n        });\n        return A;\n      }\n      if (B[0].length === undefined) {\n        B = [B];\n      }\n      rcSlice.row.start = rcSlice.row.start || 0;\n      rcSlice.row.end = rcSlice.row.end || A.length;\n      rcSlice.row.step = rcSlice.row.step || 1;\n      rcSlice.col.start = rcSlice.col.start || 0;\n      rcSlice.col.end = rcSlice.col.end || A[0].length;\n      rcSlice.col.step = rcSlice.col.step || 1;\n      ml = jStat.arange(rcSlice.row.start, Math.min(A.length, rcSlice.row.end), rcSlice.row.step);\n      nl = jStat.arange(rcSlice.col.start, Math.min(A[0].length, rcSlice.col.end), rcSlice.col.step);\n      ml.forEach(function (m, i) {\n        nl.forEach(function (n, j) {\n          A[m][n] = B[i][j];\n        });\n      });\n      return A;\n    };\n\n    // [1,2,3] ->\n    // [[1,0,0],[0,2,0],[0,0,3]]\n    jStat.diagonal = function diagonal(diagArray) {\n      var mat = jStat.zeros(diagArray.length, diagArray.length);\n      diagArray.forEach(function (t, i) {\n        mat[i][i] = t;\n      });\n      return mat;\n    };\n\n    // return copy of A\n    jStat.copy = function copy(A) {\n      return A.map(function (row) {\n        if (isNumber(row)) return row;\n        return row.map(function (t) {\n          return t;\n        });\n      });\n    };\n\n    // TODO: Go over this entire implementation. Seems a tragic waste of resources\n    // doing all this work. Instead, and while ugly, use new Function() to generate\n    // a custom function for each static method.\n\n    // Quick reference.\n    var jProto = jStat.prototype;\n\n    // Default length.\n    jProto.length = 0;\n\n    // For internal use only.\n    // TODO: Check if they're actually used, and if they are then rename them\n    // to _*\n    jProto.push = Array.prototype.push;\n    jProto.sort = Array.prototype.sort;\n    jProto.splice = Array.prototype.splice;\n    jProto.slice = Array.prototype.slice;\n\n    // Return a clean array.\n    jProto.toArray = function toArray() {\n      return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n    };\n\n    // Map a function to a matrix or vector.\n    jProto.map = function map(func, toAlter) {\n      return jStat(jStat.map(this, func, toAlter));\n    };\n\n    // Cumulatively combine the elements of a matrix or vector using a function.\n    jProto.cumreduce = function cumreduce(func, toAlter) {\n      return jStat(jStat.cumreduce(this, func, toAlter));\n    };\n\n    // Destructively alter an array.\n    jProto.alter = function alter(func) {\n      jStat.alter(this, func);\n      return this;\n    };\n\n    // Extend prototype with methods that have no argument.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function (func) {\n          var self = this,\n            results;\n          // Check for callback.\n          if (func) {\n            setTimeout(function () {\n              func.call(self, jProto[passfunc].call(self));\n            });\n            return this;\n          }\n          results = jStat[passfunc](this);\n          return isArray(results) ? jStat(results) : results;\n        };\n      })(funcs[i]);\n    })('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n    // Extend prototype with methods that have one argument.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function (index, func) {\n          var self = this;\n          // check for callback\n          if (func) {\n            setTimeout(function () {\n              func.call(self, jProto[passfunc].call(self, index));\n            });\n            return this;\n          }\n          return jStat(jStat[passfunc](this, index));\n        };\n      })(funcs[i]);\n    })('row col'.split(' '));\n\n    // Extend prototype with simple shortcut methods.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function () {\n          return jStat(jStat[passfunc].apply(null, arguments));\n        };\n      })(funcs[i]);\n    })('create zeros ones rand identity'.split(' '));\n\n    // Exposing jStat.\n    return jStat;\n  }(Math);\n  (function (jStat, Math) {\n    var isFunction = jStat.utils.isFunction;\n\n    // Ascending functions for sort\n    function ascNum(a, b) {\n      return a - b;\n    }\n    function clip(arg, min, max) {\n      return Math.max(min, Math.min(arg, max));\n    }\n\n    // sum of an array\n    jStat.sum = function sum(arr) {\n      var sum = 0;\n      var i = arr.length;\n      while (--i >= 0) sum += arr[i];\n      return sum;\n    };\n\n    // sum squared\n    jStat.sumsqrd = function sumsqrd(arr) {\n      var sum = 0;\n      var i = arr.length;\n      while (--i >= 0) sum += arr[i] * arr[i];\n      return sum;\n    };\n\n    // sum of squared errors of prediction (SSE)\n    jStat.sumsqerr = function sumsqerr(arr) {\n      var mean = jStat.mean(arr);\n      var sum = 0;\n      var i = arr.length;\n      var tmp;\n      while (--i >= 0) {\n        tmp = arr[i] - mean;\n        sum += tmp * tmp;\n      }\n      return sum;\n    };\n\n    // sum of an array in each row\n    jStat.sumrow = function sumrow(arr) {\n      var sum = 0;\n      var i = arr.length;\n      while (--i >= 0) sum += arr[i];\n      return sum;\n    };\n\n    // product of an array\n    jStat.product = function product(arr) {\n      var prod = 1;\n      var i = arr.length;\n      while (--i >= 0) prod *= arr[i];\n      return prod;\n    };\n\n    // minimum value of an array\n    jStat.min = function min(arr) {\n      var low = arr[0];\n      var i = 0;\n      while (++i < arr.length) if (arr[i] < low) low = arr[i];\n      return low;\n    };\n\n    // maximum value of an array\n    jStat.max = function max(arr) {\n      var high = arr[0];\n      var i = 0;\n      while (++i < arr.length) if (arr[i] > high) high = arr[i];\n      return high;\n    };\n\n    // unique values of an array\n    jStat.unique = function unique(arr) {\n      var hash = {},\n        _arr = [];\n      for (var i = 0; i < arr.length; i++) {\n        if (!hash[arr[i]]) {\n          hash[arr[i]] = true;\n          _arr.push(arr[i]);\n        }\n      }\n      return _arr;\n    };\n\n    // mean value of an array\n    jStat.mean = function mean(arr) {\n      return jStat.sum(arr) / arr.length;\n    };\n\n    // mean squared error (MSE)\n    jStat.meansqerr = function meansqerr(arr) {\n      return jStat.sumsqerr(arr) / arr.length;\n    };\n\n    // geometric mean of an array\n    jStat.geomean = function geomean(arr) {\n      return Math.pow(jStat.product(arr), 1 / arr.length);\n    };\n\n    // median of an array\n    jStat.median = function median(arr) {\n      var arrlen = arr.length;\n      var _arr = arr.slice().sort(ascNum);\n      // check if array is even or odd, then return the appropriate\n      return !(arrlen & 1) ? (_arr[arrlen / 2 - 1] + _arr[arrlen / 2]) / 2 : _arr[arrlen / 2 | 0];\n    };\n\n    // cumulative sum of an array\n    jStat.cumsum = function cumsum(arr) {\n      return jStat.cumreduce(arr, function (a, b) {\n        return a + b;\n      });\n    };\n\n    // cumulative product of an array\n    jStat.cumprod = function cumprod(arr) {\n      return jStat.cumreduce(arr, function (a, b) {\n        return a * b;\n      });\n    };\n\n    // successive differences of a sequence\n    jStat.diff = function diff(arr) {\n      var diffs = [];\n      var arrLen = arr.length;\n      var i;\n      for (i = 1; i < arrLen; i++) diffs.push(arr[i] - arr[i - 1]);\n      return diffs;\n    };\n\n    // ranks of an array\n    jStat.rank = function (arr) {\n      var arrlen = arr.length;\n      var sorted = arr.slice().sort(ascNum);\n      var ranks = new Array(arrlen);\n      var val;\n      for (var i = 0; i < arrlen; i++) {\n        var first = sorted.indexOf(arr[i]);\n        var last = sorted.lastIndexOf(arr[i]);\n        if (first === last) {\n          val = first;\n        } else {\n          val = (first + last) / 2;\n        }\n        ranks[i] = val + 1;\n      }\n      return ranks;\n    };\n\n    // mode of an array\n    // if there are multiple modes of an array, return all of them\n    // is this the appropriate way of handling it?\n    jStat.mode = function mode(arr) {\n      var arrLen = arr.length;\n      var _arr = arr.slice().sort(ascNum);\n      var count = 1;\n      var maxCount = 0;\n      var numMaxCount = 0;\n      var mode_arr = [];\n      var i;\n      for (i = 0; i < arrLen; i++) {\n        if (_arr[i] === _arr[i + 1]) {\n          count++;\n        } else {\n          if (count > maxCount) {\n            mode_arr = [_arr[i]];\n            maxCount = count;\n            numMaxCount = 0;\n          }\n          // are there multiple max counts\n          else if (count === maxCount) {\n            mode_arr.push(_arr[i]);\n            numMaxCount++;\n          }\n          // resetting count for new value in array\n          count = 1;\n        }\n      }\n      return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n    };\n\n    // range of an array\n    jStat.range = function range(arr) {\n      return jStat.max(arr) - jStat.min(arr);\n    };\n\n    // variance of an array\n    // flag = true indicates sample instead of population\n    jStat.variance = function variance(arr, flag) {\n      return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n    };\n\n    // pooled variance of an array of arrays\n    jStat.pooledvariance = function pooledvariance(arr) {\n      var sumsqerr = arr.reduce(function (a, samples) {\n        return a + jStat.sumsqerr(samples);\n      }, 0);\n      var count = arr.reduce(function (a, samples) {\n        return a + samples.length;\n      }, 0);\n      return sumsqerr / (count - arr.length);\n    };\n\n    // deviation of an array\n    jStat.deviation = function (arr) {\n      var mean = jStat.mean(arr);\n      var arrlen = arr.length;\n      var dev = new Array(arrlen);\n      for (var i = 0; i < arrlen; i++) {\n        dev[i] = arr[i] - mean;\n      }\n      return dev;\n    };\n\n    // standard deviation of an array\n    // flag = true indicates sample instead of population\n    jStat.stdev = function stdev(arr, flag) {\n      return Math.sqrt(jStat.variance(arr, flag));\n    };\n\n    // pooled standard deviation of an array of arrays\n    jStat.pooledstdev = function pooledstdev(arr) {\n      return Math.sqrt(jStat.pooledvariance(arr));\n    };\n\n    // mean deviation (mean absolute deviation) of an array\n    jStat.meandev = function meandev(arr) {\n      var mean = jStat.mean(arr);\n      var a = [];\n      for (var i = arr.length - 1; i >= 0; i--) {\n        a.push(Math.abs(arr[i] - mean));\n      }\n      return jStat.mean(a);\n    };\n\n    // median deviation (median absolute deviation) of an array\n    jStat.meddev = function meddev(arr) {\n      var median = jStat.median(arr);\n      var a = [];\n      for (var i = arr.length - 1; i >= 0; i--) {\n        a.push(Math.abs(arr[i] - median));\n      }\n      return jStat.median(a);\n    };\n\n    // coefficient of variation\n    jStat.coeffvar = function coeffvar(arr) {\n      return jStat.stdev(arr) / jStat.mean(arr);\n    };\n\n    // quartiles of an array\n    jStat.quartiles = function quartiles(arr) {\n      var arrlen = arr.length;\n      var _arr = arr.slice().sort(ascNum);\n      return [_arr[Math.round(arrlen / 4) - 1], _arr[Math.round(arrlen / 2) - 1], _arr[Math.round(arrlen * 3 / 4) - 1]];\n    };\n\n    // Arbitary quantiles of an array. Direct port of the scipy.stats\n    // implementation by Pierre GF Gerard-Marchant.\n    jStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n      var sortedArray = arr.slice().sort(ascNum);\n      var quantileVals = [quantilesArray.length];\n      var n = arr.length;\n      var i, p, m, aleph, k, gamma;\n      if (typeof alphap === 'undefined') alphap = 3 / 8;\n      if (typeof betap === 'undefined') betap = 3 / 8;\n      for (i = 0; i < quantilesArray.length; i++) {\n        p = quantilesArray[i];\n        m = alphap + p * (1 - alphap - betap);\n        aleph = n * p + m;\n        k = Math.floor(clip(aleph, 1, n - 1));\n        gamma = clip(aleph - k, 0, 1);\n        quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n      }\n      return quantileVals;\n    };\n\n    // Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n    // Passing true for the exclusive parameter excludes both endpoints of the range.\n    jStat.percentile = function percentile(arr, k, exclusive) {\n      var _arr = arr.slice().sort(ascNum);\n      var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n      var index = parseInt(realIndex);\n      var frac = realIndex - index;\n      if (index + 1 < _arr.length) {\n        return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n      } else {\n        return _arr[index - 1];\n      }\n    };\n\n    // The percentile rank of score in a given array. Returns the percentage\n    // of all values in the input array that are less than (kind='strict') or\n    // less or equal than (kind='weak') score. Default is weak.\n    jStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n      var counter = 0;\n      var len = arr.length;\n      var strict = false;\n      var value, i;\n      if (kind === 'strict') strict = true;\n      for (i = 0; i < len; i++) {\n        value = arr[i];\n        if (strict && value < score || !strict && value <= score) {\n          counter++;\n        }\n      }\n      return counter / len;\n    };\n\n    // Histogram (bin count) data\n    jStat.histogram = function histogram(arr, binCnt) {\n      binCnt = binCnt || 4;\n      var first = jStat.min(arr);\n      var binWidth = (jStat.max(arr) - first) / binCnt;\n      var len = arr.length;\n      var bins = [];\n      var i;\n      for (i = 0; i < binCnt; i++) bins[i] = 0;\n      for (i = 0; i < len; i++) bins[Math.min(Math.floor((arr[i] - first) / binWidth), binCnt - 1)] += 1;\n      return bins;\n    };\n\n    // covariance of two arrays\n    jStat.covariance = function covariance(arr1, arr2) {\n      var u = jStat.mean(arr1);\n      var v = jStat.mean(arr2);\n      var arr1Len = arr1.length;\n      var sq_dev = new Array(arr1Len);\n      var i;\n      for (i = 0; i < arr1Len; i++) sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n      return jStat.sum(sq_dev) / (arr1Len - 1);\n    };\n\n    // (pearson's) population correlation coefficient, rho\n    jStat.corrcoeff = function corrcoeff(arr1, arr2) {\n      return jStat.covariance(arr1, arr2) / jStat.stdev(arr1, 1) / jStat.stdev(arr2, 1);\n    };\n\n    // (spearman's) rank correlation coefficient, sp\n    jStat.spearmancoeff = function (arr1, arr2) {\n      arr1 = jStat.rank(arr1);\n      arr2 = jStat.rank(arr2);\n      //return pearson's correlation of the ranks:\n      return jStat.corrcoeff(arr1, arr2);\n    };\n\n    // statistical standardized moments (general form of skew/kurt)\n    jStat.stanMoment = function stanMoment(arr, n) {\n      var mu = jStat.mean(arr);\n      var sigma = jStat.stdev(arr);\n      var len = arr.length;\n      var skewSum = 0;\n      for (var i = 0; i < len; i++) skewSum += Math.pow((arr[i] - mu) / sigma, n);\n      return skewSum / arr.length;\n    };\n\n    // (pearson's) moment coefficient of skewness\n    jStat.skewness = function skewness(arr) {\n      return jStat.stanMoment(arr, 3);\n    };\n\n    // (pearson's) (excess) kurtosis\n    jStat.kurtosis = function kurtosis(arr) {\n      return jStat.stanMoment(arr, 4) - 3;\n    };\n    var jProto = jStat.prototype;\n\n    // Extend jProto with method for calculating cumulative sums and products.\n    // This differs from the similar extension below as cumsum and cumprod should\n    // not be run again in the case fullbool === true.\n    // If a matrix is passed, automatically assume operation should be done on the\n    // columns.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        // If a matrix is passed, automatically assume operation should be done on\n        // the columns.\n        jProto[passfunc] = function (fullbool, func) {\n          var arr = [];\n          var i = 0;\n          var tmpthis = this;\n          // Assignment reassignation depending on how parameters were passed in.\n          if (isFunction(fullbool)) {\n            func = fullbool;\n            fullbool = false;\n          }\n          // Check if a callback was passed with the function.\n          if (func) {\n            setTimeout(function () {\n              func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n            });\n            return this;\n          }\n          // Check if matrix and run calculations.\n          if (this.length > 1) {\n            tmpthis = fullbool === true ? this : this.transpose();\n            for (; i < tmpthis.length; i++) arr[i] = jStat[passfunc](tmpthis[i]);\n            return arr;\n          }\n          // Pass fullbool if only vector, not a matrix. for variance and stdev.\n          return jStat[passfunc](this[0], fullbool);\n        };\n      })(funcs[i]);\n    })('cumsum cumprod'.split(' '));\n\n    // Extend jProto with methods which don't require arguments and work on columns.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        // If a matrix is passed, automatically assume operation should be done on\n        // the columns.\n        jProto[passfunc] = function (fullbool, func) {\n          var arr = [];\n          var i = 0;\n          var tmpthis = this;\n          // Assignment reassignation depending on how parameters were passed in.\n          if (isFunction(fullbool)) {\n            func = fullbool;\n            fullbool = false;\n          }\n          // Check if a callback was passed with the function.\n          if (func) {\n            setTimeout(function () {\n              func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n            });\n            return this;\n          }\n          // Check if matrix and run calculations.\n          if (this.length > 1) {\n            if (passfunc !== 'sumrow') tmpthis = fullbool === true ? this : this.transpose();\n            for (; i < tmpthis.length; i++) arr[i] = jStat[passfunc](tmpthis[i]);\n            return fullbool === true ? jStat[passfunc](jStat.utils.toVector(arr)) : arr;\n          }\n          // Pass fullbool if only vector, not a matrix. for variance and stdev.\n          return jStat[passfunc](this[0], fullbool);\n        };\n      })(funcs[i]);\n    })(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' + 'geomean median diff rank mode range variance deviation stdev meandev ' + 'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n    // Extend jProto with functions that take arguments. Operations on matrices are\n    // done on columns.\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function () {\n          var arr = [];\n          var i = 0;\n          var tmpthis = this;\n          var args = Array.prototype.slice.call(arguments);\n          var callbackFunction;\n\n          // If the last argument is a function, we assume it's a callback; we\n          // strip the callback out and call the function again.\n          if (isFunction(args[args.length - 1])) {\n            callbackFunction = args[args.length - 1];\n            var argsToPass = args.slice(0, args.length - 1);\n            setTimeout(function () {\n              callbackFunction.call(tmpthis, jProto[passfunc].apply(tmpthis, argsToPass));\n            });\n            return this;\n\n            // Otherwise we curry the function args and call normally.\n          } else {\n            callbackFunction = undefined;\n            var curriedFunction = function curriedFunction(vector) {\n              return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n            };\n          }\n\n          // If this is a matrix, run column-by-column.\n          if (this.length > 1) {\n            tmpthis = tmpthis.transpose();\n            for (; i < tmpthis.length; i++) arr[i] = curriedFunction(tmpthis[i]);\n            return arr;\n          }\n\n          // Otherwise run on the vector.\n          return curriedFunction(this[0]);\n        };\n      })(funcs[i]);\n    })('quantiles percentileOfScore'.split(' '));\n  })(jStat, Math);\n  // Special functions //\n  (function (jStat, Math) {\n    // Log-gamma function\n    jStat.gammaln = function gammaln(x) {\n      var j = 0;\n      var cof = [76.18009172947146, -86.50532032941677, 24.01409824083091, -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5];\n      var ser = 1.000000000190015;\n      var xx, y, tmp;\n      tmp = (y = xx = x) + 5.5;\n      tmp -= (xx + 0.5) * Math.log(tmp);\n      for (; j < 6; j++) ser += cof[j] / ++y;\n      return Math.log(2.5066282746310005 * ser / xx) - tmp;\n    };\n\n    // gamma of x\n    jStat.gammafn = function gammafn(x) {\n      var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563, 629.3311553128184, 866.9662027904133, -31451.272968848367, -36144.413418691176, 66456.14382024054];\n      var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192, -3107.771671572311, 22538.118420980151, 4755.8462775278811, -134659.9598649693, -115132.2596755535];\n      var fact = false;\n      var n = 0;\n      var xden = 0;\n      var xnum = 0;\n      var y = x;\n      var i, z, yi, res;\n      if (y <= 0) {\n        res = y % 1 + 3.6e-16;\n        if (res) {\n          fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n          y = 1 - y;\n        } else {\n          return Infinity;\n        }\n      }\n      yi = y;\n      if (y < 1) {\n        z = y++;\n      } else {\n        z = (y -= n = (y | 0) - 1) - 1;\n      }\n      for (i = 0; i < 8; ++i) {\n        xnum = (xnum + p[i]) * z;\n        xden = xden * z + q[i];\n      }\n      res = xnum / xden + 1;\n      if (yi < y) {\n        res /= yi;\n      } else if (yi > y) {\n        for (i = 0; i < n; ++i) {\n          res *= y;\n          y++;\n        }\n      }\n      if (fact) {\n        res = fact / res;\n      }\n      return res;\n    };\n\n    // lower incomplete gamma function, which is usually typeset with a\n    // lower-case greek gamma as the function symbol\n    jStat.gammap = function gammap(a, x) {\n      return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n    };\n\n    // The lower regularized incomplete gamma function, usually written P(a,x)\n    jStat.lowRegGamma = function lowRegGamma(a, x) {\n      var aln = jStat.gammaln(a);\n      var ap = a;\n      var sum = 1 / a;\n      var del = sum;\n      var b = x + 1 - a;\n      var c = 1 / 1.0e-30;\n      var d = 1 / b;\n      var h = d;\n      var i = 1;\n      // calculate maximum number of itterations required for a\n      var ITMAX = -~(Math.log(a >= 1 ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n      var an;\n      if (x < 0 || a <= 0) {\n        return NaN;\n      } else if (x < a + 1) {\n        for (; i <= ITMAX; i++) {\n          sum += del *= x / ++ap;\n        }\n        return sum * Math.exp(-x + a * Math.log(x) - aln);\n      }\n      for (; i <= ITMAX; i++) {\n        an = -i * (i - a);\n        b += 2;\n        d = an * d + b;\n        c = b + an / c;\n        d = 1 / d;\n        h *= d * c;\n      }\n      return 1 - h * Math.exp(-x + a * Math.log(x) - aln);\n    };\n\n    // natural log factorial of n\n    jStat.factorialln = function factorialln(n) {\n      return n < 0 ? NaN : jStat.gammaln(n + 1);\n    };\n\n    // factorial of n\n    jStat.factorial = function factorial(n) {\n      return n < 0 ? NaN : jStat.gammafn(n + 1);\n    };\n\n    // combinations of n, m\n    jStat.combination = function combination(n, m) {\n      // make sure n or m don't exceed the upper limit of usable values\n      return n > 170 || m > 170 ? Math.exp(jStat.combinationln(n, m)) : jStat.factorial(n) / jStat.factorial(m) / jStat.factorial(n - m);\n    };\n    jStat.combinationln = function combinationln(n, m) {\n      return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n    };\n\n    // permutations of n, m\n    jStat.permutation = function permutation(n, m) {\n      return jStat.factorial(n) / jStat.factorial(n - m);\n    };\n\n    // beta function\n    jStat.betafn = function betafn(x, y) {\n      // ensure arguments are positive\n      if (x <= 0 || y <= 0) return undefined;\n      // make sure x + y doesn't exceed the upper limit of usable values\n      return x + y > 170 ? Math.exp(jStat.betaln(x, y)) : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n    };\n\n    // natural logarithm of beta function\n    jStat.betaln = function betaln(x, y) {\n      return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n    };\n\n    // Evaluates the continued fraction for incomplete beta function by modified\n    // Lentz's method.\n    jStat.betacf = function betacf(x, a, b) {\n      var fpmin = 1e-30;\n      var m = 1;\n      var qab = a + b;\n      var qap = a + 1;\n      var qam = a - 1;\n      var c = 1;\n      var d = 1 - qab * x / qap;\n      var m2, aa, del, h;\n\n      // These q's will be used in factors that occur in the coefficients\n      if (Math.abs(d) < fpmin) d = fpmin;\n      d = 1 / d;\n      h = d;\n      for (; m <= 100; m++) {\n        m2 = 2 * m;\n        aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n        // One step (the even one) of the recurrence\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin) d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin) c = fpmin;\n        d = 1 / d;\n        h *= d * c;\n        aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n        // Next step of the recurrence (the odd one)\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin) d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin) c = fpmin;\n        d = 1 / d;\n        del = d * c;\n        h *= del;\n        if (Math.abs(del - 1.0) < 3e-7) break;\n      }\n      return h;\n    };\n\n    // Returns the inverse of the lower regularized inomplete gamma function\n    jStat.gammapinv = function gammapinv(p, a) {\n      var j = 0;\n      var a1 = a - 1;\n      var EPS = 1e-8;\n      var gln = jStat.gammaln(a);\n      var x, err, t, u, pp, lna1, afac;\n      if (p >= 1) return Math.max(100, a + 100 * Math.sqrt(a));\n      if (p <= 0) return 0;\n      if (a > 1) {\n        lna1 = Math.log(a1);\n        afac = Math.exp(a1 * (lna1 - 1) - gln);\n        pp = p < 0.5 ? p : 1 - p;\n        t = Math.sqrt(-2 * Math.log(pp));\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n        if (p < 0.5) x = -x;\n        x = Math.max(1e-3, a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n      } else {\n        t = 1 - a * (0.253 + a * 0.12);\n        if (p < t) x = Math.pow(p / t, 1 / a);else x = 1 - Math.log(1 - (p - t) / (1 - t));\n      }\n      for (; j < 12; j++) {\n        if (x <= 0) return 0;\n        err = jStat.lowRegGamma(a, x) - p;\n        if (a > 1) t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));else t = Math.exp(-x + a1 * Math.log(x) - gln);\n        u = err / t;\n        x -= t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1)));\n        if (x <= 0) x = 0.5 * (x + t);\n        if (Math.abs(t) < EPS * x) break;\n      }\n      return x;\n    };\n\n    // Returns the error function erf(x)\n    jStat.erf = function erf(x) {\n      var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2, -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4, 4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6, 1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8, 6.529054439e-9, 5.059343495e-9, -9.91364156e-10, -2.27365122e-10, 9.6467911e-11, 2.394038e-12, -6.886027e-12, 8.94487e-13, 3.13092e-13, -1.12708e-13, 3.81e-16, 7.106e-15, -1.523e-15, -9.4e-17, 1.21e-16, -2.8e-17];\n      var j = cof.length - 1;\n      var isneg = false;\n      var d = 0;\n      var dd = 0;\n      var t, ty, tmp, res;\n      if (x < 0) {\n        x = -x;\n        isneg = true;\n      }\n      t = 2 / (2 + x);\n      ty = 4 * t - 2;\n      for (; j > 0; j--) {\n        tmp = d;\n        d = ty * d - dd + cof[j];\n        dd = tmp;\n      }\n      res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n      return isneg ? res - 1 : 1 - res;\n    };\n\n    // Returns the complmentary error function erfc(x)\n    jStat.erfc = function erfc(x) {\n      return 1 - jStat.erf(x);\n    };\n\n    // Returns the inverse of the complementary error function\n    jStat.erfcinv = function erfcinv(p) {\n      var j = 0;\n      var x, err, t, pp;\n      if (p >= 2) return -100;\n      if (p <= 0) return 100;\n      pp = p < 1 ? p : 2 - p;\n      t = Math.sqrt(-2 * Math.log(pp / 2));\n      x = -0.70711 * ((2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t);\n      for (; j < 2; j++) {\n        err = jStat.erfc(x) - pp;\n        x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n      }\n      return p < 1 ? x : -x;\n    };\n\n    // Returns the inverse of the incomplete beta function\n    jStat.ibetainv = function ibetainv(p, a, b) {\n      var EPS = 1e-8;\n      var a1 = a - 1;\n      var b1 = b - 1;\n      var j = 0;\n      var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n      if (p <= 0) return 0;\n      if (p >= 1) return 1;\n      if (a >= 1 && b >= 1) {\n        pp = p < 0.5 ? p : 1 - p;\n        t = Math.sqrt(-2 * Math.log(pp));\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n        if (p < 0.5) x = -x;\n        al = (x * x - 3) / 6;\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\n        w = x * Math.sqrt(al + h) / h - (1 / (2 * b - 1) - 1 / (2 * a - 1)) * (al + 5 / 6 - 2 / (3 * h));\n        x = a / (a + b * Math.exp(2 * w));\n      } else {\n        lna = Math.log(a / (a + b));\n        lnb = Math.log(b / (a + b));\n        t = Math.exp(a * lna) / a;\n        u = Math.exp(b * lnb) / b;\n        w = t + u;\n        if (p < t / w) x = Math.pow(a * w * p, 1 / a);else x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n      }\n      afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n      for (; j < 10; j++) {\n        if (x === 0 || x === 1) return x;\n        err = jStat.ibeta(x, a, b) - p;\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n        u = err / t;\n        x -= t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x))));\n        if (x <= 0) x = 0.5 * (x + t);\n        if (x >= 1) x = 0.5 * (x + t + 1);\n        if (Math.abs(t) < EPS * x && j > 0) break;\n      }\n      return x;\n    };\n\n    // Returns the incomplete beta function I_x(a,b)\n    jStat.ibeta = function ibeta(x, a, b) {\n      // Factors in front of the continued fraction.\n      var bt = x === 0 || x === 1 ? 0 : Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) - jStat.gammaln(b) + a * Math.log(x) + b * Math.log(1 - x));\n      if (x < 0 || x > 1) return false;\n      if (x < (a + 1) / (a + b + 2))\n        // Use continued fraction directly.\n        return bt * jStat.betacf(x, a, b) / a;\n      // else use continued fraction after making the symmetry transformation.\n      return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n    };\n\n    // Returns a normal deviate (mu=0, sigma=1).\n    // If n and m are specified it returns a object of normal deviates.\n    jStat.randn = function randn(n, m) {\n      var u, v, x, y, q;\n      if (!m) m = n;\n      if (n) return jStat.create(n, m, function () {\n        return jStat.randn();\n      });\n      do {\n        u = jStat._random_fn();\n        v = 1.7156 * (jStat._random_fn() - 0.5);\n        x = u - 0.449871;\n        y = Math.abs(v) + 0.386595;\n        q = x * x + y * (0.19600 * y - 0.25472 * x);\n      } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n      return v / u;\n    };\n\n    // Returns a gamma deviate by the method of Marsaglia and Tsang.\n    jStat.randg = function randg(shape, n, m) {\n      var oalph = shape;\n      var a1, a2, u, v, x, mat;\n      if (!m) m = n;\n      if (!shape) shape = 1;\n      if (n) {\n        mat = jStat.zeros(n, m);\n        mat.alter(function () {\n          return jStat.randg(shape);\n        });\n        return mat;\n      }\n      if (shape < 1) shape += 1;\n      a1 = shape - 1 / 3;\n      a2 = 1 / Math.sqrt(9 * a1);\n      do {\n        do {\n          x = jStat.randn();\n          v = 1 + a2 * x;\n        } while (v <= 0);\n        v = v * v * v;\n        u = jStat._random_fn();\n      } while (u > 1 - 0.331 * Math.pow(x, 4) && Math.log(u) > 0.5 * x * x + a1 * (1 - v + Math.log(v)));\n      // alpha > 1\n      if (shape == oalph) return a1 * v;\n      // alpha < 1\n      do {\n        u = jStat._random_fn();\n      } while (u === 0);\n      return Math.pow(u, 1 / oalph) * a1 * v;\n    };\n\n    // making use of static methods on the instance\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jStat.fn[passfunc] = function () {\n          return jStat(jStat.map(this, function (value) {\n            return jStat[passfunc](value);\n          }));\n        };\n      })(funcs[i]);\n    })('gammaln gammafn factorial factorialln'.split(' '));\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jStat.fn[passfunc] = function () {\n          return jStat(jStat[passfunc].apply(null, arguments));\n        };\n      })(funcs[i]);\n    })('randn'.split(' '));\n  })(jStat, Math);\n  (function (jStat, Math) {\n    // generate all distribution instance methods\n    (function (list) {\n      for (var i = 0; i < list.length; i++) (function (func) {\n        // distribution instance method\n        jStat[func] = function (a, b, c) {\n          if (!(this instanceof arguments.callee)) return new arguments.callee(a, b, c);\n          this._a = a;\n          this._b = b;\n          this._c = c;\n          return this;\n        };\n        // distribution method to be used on a jStat instance\n        jStat.fn[func] = function (a, b, c) {\n          var newthis = jStat[func](a, b, c);\n          newthis.data = this;\n          return newthis;\n        };\n        // sample instance method\n        jStat[func].prototype.sample = function (arr) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (arr) return jStat.alter(arr, function () {\n            return jStat[func].sample(a, b, c);\n          });else return jStat[func].sample(a, b, c);\n        };\n        // generate the pdf, cdf and inv instance methods\n        (function (vals) {\n          for (var i = 0; i < vals.length; i++) (function (fnfunc) {\n            jStat[func].prototype[fnfunc] = function (x) {\n              var a = this._a;\n              var b = this._b;\n              var c = this._c;\n              if (!x && x !== 0) x = this.data;\n              if (typeof x !== 'number') {\n                return jStat.fn.map.call(x, function (x) {\n                  return jStat[func][fnfunc](x, a, b, c);\n                });\n              }\n              return jStat[func][fnfunc](x, a, b, c);\n            };\n          })(vals[i]);\n        })('pdf cdf inv'.split(' '));\n        // generate the mean, median, mode and variance instance methods\n        (function (vals) {\n          for (var i = 0; i < vals.length; i++) (function (fnfunc) {\n            jStat[func].prototype[fnfunc] = function () {\n              return jStat[func][fnfunc](this._a, this._b, this._c);\n            };\n          })(vals[i]);\n        })('mean median mode variance'.split(' '));\n      })(list[i]);\n    })(('beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' + 'laplace lognormal noncentralt normal pareto studentt weibull uniform ' + 'binomial negbin hypgeom poisson triangular tukey arcsine').split(' '));\n\n    // extend beta function with static methods\n    jStat.extend(jStat.beta, {\n      pdf: function pdf(x, alpha, beta) {\n        // PDF is zero outside the support\n        if (x > 1 || x < 0) return 0;\n        // PDF is one for the uniform case\n        if (alpha == 1 && beta == 1) return 1;\n        if (alpha < 512 && beta < 512) {\n          return Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1) / jStat.betafn(alpha, beta);\n        } else {\n          return Math.exp((alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - x) - jStat.betaln(alpha, beta));\n        }\n      },\n      cdf: function cdf(x, alpha, beta) {\n        return x > 1 || x < 0 ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n      },\n      inv: function inv(x, alpha, beta) {\n        return jStat.ibetainv(x, alpha, beta);\n      },\n      mean: function mean(alpha, beta) {\n        return alpha / (alpha + beta);\n      },\n      median: function median(alpha, beta) {\n        return jStat.ibetainv(0.5, alpha, beta);\n      },\n      mode: function mode(alpha, beta) {\n        return (alpha - 1) / (alpha + beta - 2);\n      },\n      // return a random sample\n      sample: function sample(alpha, beta) {\n        var u = jStat.randg(alpha);\n        return u / (u + jStat.randg(beta));\n      },\n      variance: function variance(alpha, beta) {\n        return alpha * beta / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n      }\n    });\n\n    // extend F function with static methods\n    jStat.extend(jStat.centralF, {\n      // This implementation of the pdf function avoids float overflow\n      // See the way that R calculates this value:\n      // https://svn.r-project.org/R/trunk/src/nmath/df.c\n      pdf: function pdf(x, df1, df2) {\n        var p, q, f;\n        if (x < 0) return 0;\n        if (df1 <= 2) {\n          if (x === 0 && df1 < 2) {\n            return Infinity;\n          }\n          if (x === 0 && df1 === 2) {\n            return 1;\n          }\n          return 1 / jStat.betafn(df1 / 2, df2 / 2) * Math.pow(df1 / df2, df1 / 2) * Math.pow(x, df1 / 2 - 1) * Math.pow(1 + df1 / df2 * x, -(df1 + df2) / 2);\n        }\n        p = df1 * x / (df2 + x * df1);\n        q = df2 / (df2 + x * df1);\n        f = df1 * q / 2.0;\n        return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n      },\n      cdf: function cdf(x, df1, df2) {\n        if (x < 0) return 0;\n        return jStat.ibeta(df1 * x / (df1 * x + df2), df1 / 2, df2 / 2);\n      },\n      inv: function inv(x, df1, df2) {\n        return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n      },\n      mean: function mean(df1, df2) {\n        return df2 > 2 ? df2 / (df2 - 2) : undefined;\n      },\n      mode: function mode(df1, df2) {\n        return df1 > 2 ? df2 * (df1 - 2) / (df1 * (df2 + 2)) : undefined;\n      },\n      // return a random sample\n      sample: function sample(df1, df2) {\n        var x1 = jStat.randg(df1 / 2) * 2;\n        var x2 = jStat.randg(df2 / 2) * 2;\n        return x1 / df1 / (x2 / df2);\n      },\n      variance: function variance(df1, df2) {\n        if (df2 <= 4) return undefined;\n        return 2 * df2 * df2 * (df1 + df2 - 2) / (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n      }\n    });\n\n    // extend cauchy function with static methods\n    jStat.extend(jStat.cauchy, {\n      pdf: function pdf(x, local, scale) {\n        if (scale < 0) {\n          return 0;\n        }\n        return scale / (Math.pow(x - local, 2) + Math.pow(scale, 2)) / Math.PI;\n      },\n      cdf: function cdf(x, local, scale) {\n        return Math.atan((x - local) / scale) / Math.PI + 0.5;\n      },\n      inv: function (p, local, scale) {\n        return local + scale * Math.tan(Math.PI * (p - 0.5));\n      },\n      median: function median(local /*, scale*/) {\n        return local;\n      },\n      mode: function mode(local /*, scale*/) {\n        return local;\n      },\n      sample: function sample(local, scale) {\n        return jStat.randn() * Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n      }\n    });\n\n    // extend chisquare function with static methods\n    jStat.extend(jStat.chisquare, {\n      pdf: function pdf(x, dof) {\n        if (x < 0) return 0;\n        return x === 0 && dof === 2 ? 0.5 : Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - dof / 2 * Math.log(2) - jStat.gammaln(dof / 2));\n      },\n      cdf: function cdf(x, dof) {\n        if (x < 0) return 0;\n        return jStat.lowRegGamma(dof / 2, x / 2);\n      },\n      inv: function (p, dof) {\n        return 2 * jStat.gammapinv(p, 0.5 * dof);\n      },\n      mean: function (dof) {\n        return dof;\n      },\n      // TODO: this is an approximation (is there a better way?)\n      median: function median(dof) {\n        return dof * Math.pow(1 - 2 / (9 * dof), 3);\n      },\n      mode: function mode(dof) {\n        return dof - 2 > 0 ? dof - 2 : 0;\n      },\n      sample: function sample(dof) {\n        return jStat.randg(dof / 2) * 2;\n      },\n      variance: function variance(dof) {\n        return 2 * dof;\n      }\n    });\n\n    // extend exponential function with static methods\n    jStat.extend(jStat.exponential, {\n      pdf: function pdf(x, rate) {\n        return x < 0 ? 0 : rate * Math.exp(-rate * x);\n      },\n      cdf: function cdf(x, rate) {\n        return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n      },\n      inv: function (p, rate) {\n        return -Math.log(1 - p) / rate;\n      },\n      mean: function (rate) {\n        return 1 / rate;\n      },\n      median: function (rate) {\n        return 1 / rate * Math.log(2);\n      },\n      mode: function mode( /*rate*/\n      ) {\n        return 0;\n      },\n      sample: function sample(rate) {\n        return -1 / rate * Math.log(jStat._random_fn());\n      },\n      variance: function (rate) {\n        return Math.pow(rate, -2);\n      }\n    });\n\n    // extend gamma function with static methods\n    jStat.extend(jStat.gamma, {\n      pdf: function pdf(x, shape, scale) {\n        if (x < 0) return 0;\n        return x === 0 && shape === 1 ? 1 / scale : Math.exp((shape - 1) * Math.log(x) - x / scale - jStat.gammaln(shape) - shape * Math.log(scale));\n      },\n      cdf: function cdf(x, shape, scale) {\n        if (x < 0) return 0;\n        return jStat.lowRegGamma(shape, x / scale);\n      },\n      inv: function (p, shape, scale) {\n        return jStat.gammapinv(p, shape) * scale;\n      },\n      mean: function (shape, scale) {\n        return shape * scale;\n      },\n      mode: function mode(shape, scale) {\n        if (shape > 1) return (shape - 1) * scale;\n        return undefined;\n      },\n      sample: function sample(shape, scale) {\n        return jStat.randg(shape) * scale;\n      },\n      variance: function variance(shape, scale) {\n        return shape * scale * scale;\n      }\n    });\n\n    // extend inverse gamma function with static methods\n    jStat.extend(jStat.invgamma, {\n      pdf: function pdf(x, shape, scale) {\n        if (x <= 0) return 0;\n        return Math.exp(-(shape + 1) * Math.log(x) - scale / x - jStat.gammaln(shape) + shape * Math.log(scale));\n      },\n      cdf: function cdf(x, shape, scale) {\n        if (x <= 0) return 0;\n        return 1 - jStat.lowRegGamma(shape, scale / x);\n      },\n      inv: function (p, shape, scale) {\n        return scale / jStat.gammapinv(1 - p, shape);\n      },\n      mean: function (shape, scale) {\n        return shape > 1 ? scale / (shape - 1) : undefined;\n      },\n      mode: function mode(shape, scale) {\n        return scale / (shape + 1);\n      },\n      sample: function sample(shape, scale) {\n        return scale / jStat.randg(shape);\n      },\n      variance: function variance(shape, scale) {\n        if (shape <= 2) return undefined;\n        return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n      }\n    });\n\n    // extend kumaraswamy function with static methods\n    jStat.extend(jStat.kumaraswamy, {\n      pdf: function pdf(x, alpha, beta) {\n        if (x === 0 && alpha === 1) return beta;else if (x === 1 && beta === 1) return alpha;\n        return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - Math.pow(x, alpha)));\n      },\n      cdf: function cdf(x, alpha, beta) {\n        if (x < 0) return 0;else if (x > 1) return 1;\n        return 1 - Math.pow(1 - Math.pow(x, alpha), beta);\n      },\n      inv: function inv(p, alpha, beta) {\n        return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n      },\n      mean: function (alpha, beta) {\n        return beta * jStat.gammafn(1 + 1 / alpha) * jStat.gammafn(beta) / jStat.gammafn(1 + 1 / alpha + beta);\n      },\n      median: function median(alpha, beta) {\n        return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n      },\n      mode: function mode(alpha, beta) {\n        if (!(alpha >= 1 && beta >= 1 && alpha !== 1 && beta !== 1)) return undefined;\n        return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n      },\n      variance: function variance( /*alpha, beta*/\n      ) {\n        throw new Error('variance not yet implemented');\n        // TODO: complete this\n      }\n    });\n\n    // extend lognormal function with static methods\n    jStat.extend(jStat.lognormal, {\n      pdf: function pdf(x, mu, sigma) {\n        if (x <= 0) return 0;\n        return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) - Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) / (2 * sigma * sigma));\n      },\n      cdf: function cdf(x, mu, sigma) {\n        if (x < 0) return 0;\n        return 0.5 + 0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma));\n      },\n      inv: function (p, mu, sigma) {\n        return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n      },\n      mean: function mean(mu, sigma) {\n        return Math.exp(mu + sigma * sigma / 2);\n      },\n      median: function median(mu /*, sigma*/) {\n        return Math.exp(mu);\n      },\n      mode: function mode(mu, sigma) {\n        return Math.exp(mu - sigma * sigma);\n      },\n      sample: function sample(mu, sigma) {\n        return Math.exp(jStat.randn() * sigma + mu);\n      },\n      variance: function variance(mu, sigma) {\n        return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n      }\n    });\n\n    // extend noncentralt function with static methods\n    jStat.extend(jStat.noncentralt, {\n      pdf: function pdf(x, dof, ncp) {\n        var tol = 1e-14;\n        if (Math.abs(ncp) < tol)\n          // ncp approx 0; use student-t\n          return jStat.studentt.pdf(x, dof);\n        if (Math.abs(x) < tol) {\n          // different formula for x == 0\n          return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 - 0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n        }\n\n        // formula for x != 0\n        return dof / x * (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof + 2, ncp) - jStat.noncentralt.cdf(x, dof, ncp));\n      },\n      cdf: function cdf(x, dof, ncp) {\n        var tol = 1e-14;\n        var min_iterations = 200;\n        if (Math.abs(ncp) < tol)\n          // ncp approx 0; use student-t\n          return jStat.studentt.cdf(x, dof);\n\n        // turn negative x into positive and flip result afterwards\n        var flip = false;\n        if (x < 0) {\n          flip = true;\n          ncp = -ncp;\n        }\n        var prob = jStat.normal.cdf(-ncp, 0, 1);\n        var value = tol + 1;\n        // use value at last two steps to determine convergence\n        var lastvalue = value;\n        var y = x * x / (x * x + dof);\n        var j = 0;\n        var p = Math.exp(-ncp * ncp / 2);\n        var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) - jStat.gammaln(3 / 2)) * ncp;\n        while (j < min_iterations || lastvalue > tol || value > tol) {\n          lastvalue = value;\n          if (j > 0) {\n            p *= ncp * ncp / (2 * j);\n            q *= ncp * ncp / (2 * (j + 1 / 2));\n          }\n          value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) + q * jStat.beta.cdf(y, j + 1, dof / 2);\n          prob += 0.5 * value;\n          j++;\n        }\n        return flip ? 1 - prob : prob;\n      }\n    });\n\n    // extend normal function with static methods\n    jStat.extend(jStat.normal, {\n      pdf: function pdf(x, mean, std) {\n        return Math.exp(-0.5 * Math.log(2 * Math.PI) - Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n      },\n      cdf: function cdf(x, mean, std) {\n        return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n      },\n      inv: function (p, mean, std) {\n        return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n      },\n      mean: function (mean /*, std*/) {\n        return mean;\n      },\n      median: function median(mean /*, std*/) {\n        return mean;\n      },\n      mode: function (mean /*, std*/) {\n        return mean;\n      },\n      sample: function sample(mean, std) {\n        return jStat.randn() * std + mean;\n      },\n      variance: function (mean, std) {\n        return std * std;\n      }\n    });\n\n    // extend pareto function with static methods\n    jStat.extend(jStat.pareto, {\n      pdf: function pdf(x, scale, shape) {\n        if (x < scale) return 0;\n        return shape * Math.pow(scale, shape) / Math.pow(x, shape + 1);\n      },\n      cdf: function cdf(x, scale, shape) {\n        if (x < scale) return 0;\n        return 1 - Math.pow(scale / x, shape);\n      },\n      inv: function inv(p, scale, shape) {\n        return scale / Math.pow(1 - p, 1 / shape);\n      },\n      mean: function mean(scale, shape) {\n        if (shape <= 1) return undefined;\n        return shape * Math.pow(scale, shape) / (shape - 1);\n      },\n      median: function median(scale, shape) {\n        return scale * (shape * Math.SQRT2);\n      },\n      mode: function mode(scale /*, shape*/) {\n        return scale;\n      },\n      variance: function (scale, shape) {\n        if (shape <= 2) return undefined;\n        return scale * scale * shape / (Math.pow(shape - 1, 2) * (shape - 2));\n      }\n    });\n\n    // extend studentt function with static methods\n    jStat.extend(jStat.studentt, {\n      pdf: function pdf(x, dof) {\n        dof = dof > 1e100 ? 1e100 : dof;\n        return 1 / (Math.sqrt(dof) * jStat.betafn(0.5, dof / 2)) * Math.pow(1 + x * x / dof, -((dof + 1) / 2));\n      },\n      cdf: function cdf(x, dof) {\n        var dof2 = dof / 2;\n        return jStat.ibeta((x + Math.sqrt(x * x + dof)) / (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n      },\n      inv: function (p, dof) {\n        var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n        x = Math.sqrt(dof * (1 - x) / x);\n        return p > 0.5 ? x : -x;\n      },\n      mean: function mean(dof) {\n        return dof > 1 ? 0 : undefined;\n      },\n      median: function median( /*dof*/\n      ) {\n        return 0;\n      },\n      mode: function mode( /*dof*/\n      ) {\n        return 0;\n      },\n      sample: function sample(dof) {\n        return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n      },\n      variance: function variance(dof) {\n        return dof > 2 ? dof / (dof - 2) : dof > 1 ? Infinity : undefined;\n      }\n    });\n\n    // extend weibull function with static methods\n    jStat.extend(jStat.weibull, {\n      pdf: function pdf(x, scale, shape) {\n        if (x < 0 || scale < 0 || shape < 0) return 0;\n        return shape / scale * Math.pow(x / scale, shape - 1) * Math.exp(-Math.pow(x / scale, shape));\n      },\n      cdf: function cdf(x, scale, shape) {\n        return x < 0 ? 0 : 1 - Math.exp(-Math.pow(x / scale, shape));\n      },\n      inv: function (p, scale, shape) {\n        return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n      },\n      mean: function (scale, shape) {\n        return scale * jStat.gammafn(1 + 1 / shape);\n      },\n      median: function median(scale, shape) {\n        return scale * Math.pow(Math.log(2), 1 / shape);\n      },\n      mode: function mode(scale, shape) {\n        if (shape <= 1) return 0;\n        return scale * Math.pow((shape - 1) / shape, 1 / shape);\n      },\n      sample: function sample(scale, shape) {\n        return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n      },\n      variance: function variance(scale, shape) {\n        return scale * scale * jStat.gammafn(1 + 2 / shape) - Math.pow(jStat.weibull.mean(scale, shape), 2);\n      }\n    });\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.uniform, {\n      pdf: function pdf(x, a, b) {\n        return x < a || x > b ? 0 : 1 / (b - a);\n      },\n      cdf: function cdf(x, a, b) {\n        if (x < a) return 0;else if (x < b) return (x - a) / (b - a);\n        return 1;\n      },\n      inv: function (p, a, b) {\n        return a + p * (b - a);\n      },\n      mean: function mean(a, b) {\n        return 0.5 * (a + b);\n      },\n      median: function median(a, b) {\n        return jStat.mean(a, b);\n      },\n      mode: function mode( /*a, b*/\n      ) {\n        throw new Error('mode is not yet implemented');\n      },\n      sample: function sample(a, b) {\n        return a / 2 + b / 2 + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n      },\n      variance: function variance(a, b) {\n        return Math.pow(b - a, 2) / 12;\n      }\n    });\n\n    // Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\n    function betinc(x, a, b, eps) {\n      var a0 = 0;\n      var b0 = 1;\n      var a1 = 1;\n      var b1 = 1;\n      var m9 = 0;\n      var a2 = 0;\n      var c9;\n      while (Math.abs((a1 - a2) / a1) > eps) {\n        a2 = a1;\n        c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n        a0 = a1 + c9 * a0;\n        b0 = b1 + c9 * b0;\n        m9 = m9 + 1;\n        c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n        a1 = a0 + c9 * a1;\n        b1 = b0 + c9 * b1;\n        a0 = a0 / b1;\n        b0 = b0 / b1;\n        a1 = a1 / b1;\n        b1 = 1;\n      }\n      return a1 / a;\n    }\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.binomial, {\n      pdf: function pdf(k, n, p) {\n        return p === 0 || p === 1 ? n * p === k ? 1 : 0 : jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n      },\n      cdf: function cdf(x, n, p) {\n        var betacdf;\n        var eps = 1e-10;\n        if (x < 0) return 0;\n        if (x >= n) return 1;\n        if (p < 0 || p > 1 || n <= 0) return NaN;\n        x = Math.floor(x);\n        var z = p;\n        var a = x + 1;\n        var b = n - x;\n        var s = a + b;\n        var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) - jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n        if (z < (a + 1) / (s + 2)) betacdf = bt * betinc(z, a, b, eps);else betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n        return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n      }\n    });\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.negbin, {\n      pdf: function pdf(k, r, p) {\n        if (k !== k >>> 0) return false;\n        if (k < 0) return 0;\n        return jStat.combination(k + r - 1, r - 1) * Math.pow(1 - p, k) * Math.pow(p, r);\n      },\n      cdf: function cdf(x, r, p) {\n        var sum = 0,\n          k = 0;\n        if (x < 0) return 0;\n        for (; k <= x; k++) {\n          sum += jStat.negbin.pdf(k, r, p);\n        }\n        return sum;\n      }\n    });\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.hypgeom, {\n      pdf: function pdf(k, N, m, n) {\n        // Hypergeometric PDF.\n\n        // A simplification of the CDF algorithm below.\n\n        // k = number of successes drawn\n        // N = population size\n        // m = number of successes in population\n        // n = number of items drawn from population\n\n        if (k !== k | 0) {\n          return false;\n        } else if (k < 0 || k < m - (N - n)) {\n          // It's impossible to have this few successes drawn.\n          return 0;\n        } else if (k > n || k > m) {\n          // It's impossible to have this many successes drawn.\n          return 0;\n        } else if (m * 2 > N) {\n          // More than half the population is successes.\n\n          if (n * 2 > N) {\n            // More than half the population is sampled.\n\n            return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n);\n          } else {\n            // Half or less of the population is sampled.\n\n            return jStat.hypgeom.pdf(n - k, N, N - m, n);\n          }\n        } else if (n * 2 > N) {\n          // Half or less is successes.\n\n          return jStat.hypgeom.pdf(m - k, N, m, N - n);\n        } else if (m < n) {\n          // We want to have the number of things sampled to be less than the\n          // successes available. So swap the definitions of successful and sampled.\n          return jStat.hypgeom.pdf(k, N, n, m);\n        } else {\n          // If we get here, half or less of the population was sampled, half or\n          // less of it was successes, and we had fewer sampled things than\n          // successes. Now we can do this complicated iterative algorithm in an\n          // efficient way.\n\n          // The basic premise of the algorithm is that we partially normalize our\n          // intermediate product to keep it in a numerically good region, and then\n          // finish the normalization at the end.\n\n          // This variable holds the scaled probability of the current number of\n          // successes.\n          var scaledPDF = 1;\n\n          // This keeps track of how much we have normalized.\n          var samplesDone = 0;\n          for (var i = 0; i < k; i++) {\n            // For every possible number of successes up to that observed...\n\n            while (scaledPDF > 1 && samplesDone < n) {\n              // Intermediate result is growing too big. Apply some of the\n              // normalization to shrink everything.\n\n              scaledPDF *= 1 - m / (N - samplesDone);\n\n              // Say we've normalized by this sample already.\n              samplesDone++;\n            }\n\n            // Work out the partially-normalized hypergeometric PDF for the next\n            // number of successes\n            scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n          }\n          for (; samplesDone < n; samplesDone++) {\n            // Apply all the rest of the normalization\n            scaledPDF *= 1 - m / (N - samplesDone);\n          }\n\n          // Bound answer sanely before returning.\n          return Math.min(1, Math.max(0, scaledPDF));\n        }\n      },\n      cdf: function cdf(x, N, m, n) {\n        // Hypergeometric CDF.\n\n        // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n        // and comes from his hypergeometric test calculator at\n        // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n        // x = number of successes drawn\n        // N = population size\n        // m = number of successes in population\n        // n = number of items drawn from population\n\n        if (x < 0 || x < m - (N - n)) {\n          // It's impossible to have this few successes drawn or fewer.\n          return 0;\n        } else if (x >= n || x >= m) {\n          // We will always have this many successes or fewer.\n          return 1;\n        } else if (m * 2 > N) {\n          // More than half the population is successes.\n\n          if (n * 2 > N) {\n            // More than half the population is sampled.\n\n            return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n);\n          } else {\n            // Half or less of the population is sampled.\n\n            return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n          }\n        } else if (n * 2 > N) {\n          // Half or less is successes.\n\n          return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n        } else if (m < n) {\n          // We want to have the number of things sampled to be less than the\n          // successes available. So swap the definitions of successful and sampled.\n          return jStat.hypgeom.cdf(x, N, n, m);\n        } else {\n          // If we get here, half or less of the population was sampled, half or\n          // less of it was successes, and we had fewer sampled things than\n          // successes. Now we can do this complicated iterative algorithm in an\n          // efficient way.\n\n          // The basic premise of the algorithm is that we partially normalize our\n          // intermediate sum to keep it in a numerically good region, and then\n          // finish the normalization at the end.\n\n          // Holds the intermediate, scaled total CDF.\n          var scaledCDF = 1;\n\n          // This variable holds the scaled probability of the current number of\n          // successes.\n          var scaledPDF = 1;\n\n          // This keeps track of how much we have normalized.\n          var samplesDone = 0;\n          for (var i = 0; i < x; i++) {\n            // For every possible number of successes up to that observed...\n\n            while (scaledCDF > 1 && samplesDone < n) {\n              // Intermediate result is growing too big. Apply some of the\n              // normalization to shrink everything.\n\n              var factor = 1 - m / (N - samplesDone);\n              scaledPDF *= factor;\n              scaledCDF *= factor;\n\n              // Say we've normalized by this sample already.\n              samplesDone++;\n            }\n\n            // Work out the partially-normalized hypergeometric PDF for the next\n            // number of successes\n            scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n            // Add to the CDF answer.\n            scaledCDF += scaledPDF;\n          }\n          for (; samplesDone < n; samplesDone++) {\n            // Apply all the rest of the normalization\n            scaledCDF *= 1 - m / (N - samplesDone);\n          }\n\n          // Bound answer sanely before returning.\n          return Math.min(1, Math.max(0, scaledCDF));\n        }\n      }\n    });\n\n    // extend uniform function with static methods\n    jStat.extend(jStat.poisson, {\n      pdf: function pdf(k, l) {\n        if (l < 0 || k % 1 !== 0 || k < 0) {\n          return 0;\n        }\n        return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n      },\n      cdf: function cdf(x, l) {\n        var sumarr = [],\n          k = 0;\n        if (x < 0) return 0;\n        for (; k <= x; k++) {\n          sumarr.push(jStat.poisson.pdf(k, l));\n        }\n        return jStat.sum(sumarr);\n      },\n      mean: function (l) {\n        return l;\n      },\n      variance: function (l) {\n        return l;\n      },\n      sample: function sample(l) {\n        var p = 1,\n          k = 0,\n          L = Math.exp(-l);\n        do {\n          k++;\n          p *= jStat._random_fn();\n        } while (p > L);\n        return k - 1;\n      }\n    });\n\n    // extend triangular function with static methods\n    jStat.extend(jStat.triangular, {\n      pdf: function pdf(x, a, b, c) {\n        if (b <= a || c < a || c > b) {\n          return NaN;\n        } else {\n          if (x < a || x > b) {\n            return 0;\n          } else if (x < c) {\n            return 2 * (x - a) / ((b - a) * (c - a));\n          } else if (x === c) {\n            return 2 / (b - a);\n          } else {\n            // x > c\n            return 2 * (b - x) / ((b - a) * (b - c));\n          }\n        }\n      },\n      cdf: function cdf(x, a, b, c) {\n        if (b <= a || c < a || c > b) return NaN;\n        if (x <= a) return 0;else if (x >= b) return 1;\n        if (x <= c) return Math.pow(x - a, 2) / ((b - a) * (c - a));else\n          // x > c\n          return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n      },\n      inv: function inv(p, a, b, c) {\n        if (b <= a || c < a || c > b) {\n          return NaN;\n        } else {\n          if (p <= (c - a) / (b - a)) {\n            return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n          } else {\n            // p > ((c - a) / (b - a))\n            return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - (c - a) / (b - a))));\n          }\n        }\n      },\n      mean: function mean(a, b, c) {\n        return (a + b + c) / 3;\n      },\n      median: function median(a, b, c) {\n        if (c <= (a + b) / 2) {\n          return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n        } else if (c > (a + b) / 2) {\n          return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n        }\n      },\n      mode: function mode(a, b, c) {\n        return c;\n      },\n      sample: function sample(a, b, c) {\n        var u = jStat._random_fn();\n        if (u < (c - a) / (b - a)) return a + Math.sqrt(u * (b - a) * (c - a));\n        return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n      },\n      variance: function variance(a, b, c) {\n        return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n      }\n    });\n\n    // extend arcsine function with static methods\n    jStat.extend(jStat.arcsine, {\n      pdf: function pdf(x, a, b) {\n        if (b <= a) return NaN;\n        return x <= a || x >= b ? 0 : 2 / Math.PI * Math.pow(Math.pow(b - a, 2) - Math.pow(2 * x - a - b, 2), -0.5);\n      },\n      cdf: function cdf(x, a, b) {\n        if (x < a) return 0;else if (x < b) return 2 / Math.PI * Math.asin(Math.sqrt((x - a) / (b - a)));\n        return 1;\n      },\n      inv: function (p, a, b) {\n        return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n      },\n      mean: function mean(a, b) {\n        if (b <= a) return NaN;\n        return (a + b) / 2;\n      },\n      median: function median(a, b) {\n        if (b <= a) return NaN;\n        return (a + b) / 2;\n      },\n      mode: function mode( /*a, b*/\n      ) {\n        throw new Error('mode is not yet implemented');\n      },\n      sample: function sample(a, b) {\n        return (a + b) / 2 + (b - a) / 2 * Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n      },\n      variance: function variance(a, b) {\n        if (b <= a) return NaN;\n        return Math.pow(b - a, 2) / 8;\n      }\n    });\n    function laplaceSign(x) {\n      return x / Math.abs(x);\n    }\n    jStat.extend(jStat.laplace, {\n      pdf: function pdf(x, mu, b) {\n        return b <= 0 ? 0 : Math.exp(-Math.abs(x - mu) / b) / (2 * b);\n      },\n      cdf: function cdf(x, mu, b) {\n        if (b <= 0) {\n          return 0;\n        }\n        if (x < mu) {\n          return 0.5 * Math.exp((x - mu) / b);\n        } else {\n          return 1 - 0.5 * Math.exp(-(x - mu) / b);\n        }\n      },\n      mean: function (mu /*, b*/) {\n        return mu;\n      },\n      median: function (mu /*, b*/) {\n        return mu;\n      },\n      mode: function (mu /*, b*/) {\n        return mu;\n      },\n      variance: function (mu, b) {\n        return 2 * b * b;\n      },\n      sample: function sample(mu, b) {\n        var u = jStat._random_fn() - 0.5;\n        return mu - b * laplaceSign(u) * Math.log(1 - 2 * Math.abs(u));\n      }\n    });\n    function tukeyWprob(w, rr, cc) {\n      var nleg = 12;\n      var ihalf = 6;\n      var C1 = -30;\n      var C2 = -50;\n      var C3 = 60;\n      var bb = 8;\n      var wlar = 3;\n      var wincr1 = 2;\n      var wincr2 = 3;\n      var xleg = [0.981560634246719250690549090149, 0.904117256370474856678465866119, 0.769902674194304687036893833213, 0.587317954286617447296702418941, 0.367831498998180193752691536644, 0.125233408511468915472441369464];\n      var aleg = [0.047175336386511827194615961485, 0.106939325995318430960254718194, 0.160078328543346226334652529543, 0.203167426723065921749064455810, 0.233492536538354808760849898925, 0.249147045813402785000562436043];\n      var qsqz = w * 0.5;\n\n      // if w >= 16 then the integral lower bound (occurs for c=20)\n      // is 0.99999999999995 so return a value of 1.\n\n      if (qsqz >= bb) return 1.0;\n\n      // find (f(w/2) - 1) ^ cc\n      // (first term in integral of hartley's form).\n\n      var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n      // if pr_w ^ cc < 2e-22 then set pr_w = 0\n      if (pr_w >= Math.exp(C2 / cc)) pr_w = Math.pow(pr_w, cc);else pr_w = 0.0;\n\n      // if w is large then the second component of the\n      // integral is small, so fewer intervals are needed.\n\n      var wincr;\n      if (w > wlar) wincr = wincr1;else wincr = wincr2;\n\n      // find the integral of second term of hartley's form\n      // for the integral of the range for equal-length\n      // intervals using legendre quadrature.  limits of\n      // integration are from (w/2, 8).  two or three\n      // equal-length intervals are used.\n\n      // blb and bub are lower and upper limits of integration.\n\n      var blb = qsqz;\n      var binc = (bb - qsqz) / wincr;\n      var bub = blb + binc;\n      var einsum = 0.0;\n\n      // integrate over each interval\n\n      var cc1 = cc - 1.0;\n      for (var wi = 1; wi <= wincr; wi++) {\n        var elsum = 0.0;\n        var a = 0.5 * (bub + blb);\n\n        // legendre quadrature with order = nleg\n\n        var b = 0.5 * (bub - blb);\n        for (var jj = 1; jj <= nleg; jj++) {\n          var j, xx;\n          if (ihalf < jj) {\n            j = nleg - jj + 1;\n            xx = xleg[j - 1];\n          } else {\n            j = jj;\n            xx = -xleg[j - 1];\n          }\n          var c = b * xx;\n          var ac = a + c;\n\n          // if exp(-qexpo/2) < 9e-14,\n          // then doesn't contribute to integral\n\n          var qexpo = ac * ac;\n          if (qexpo > C3) break;\n          var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n          var pminus = 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n          // if rinsum ^ (cc-1) < 9e-14,\n          // then doesn't contribute to integral\n\n          var rinsum = pplus * 0.5 - pminus * 0.5;\n          if (rinsum >= Math.exp(C1 / cc1)) {\n            rinsum = aleg[j - 1] * Math.exp(-(0.5 * qexpo)) * Math.pow(rinsum, cc1);\n            elsum += rinsum;\n          }\n        }\n        elsum *= 2.0 * b * cc / Math.sqrt(2 * Math.PI);\n        einsum += elsum;\n        blb = bub;\n        bub += binc;\n      }\n\n      // if pr_w ^ rr < 9e-14, then return 0\n      pr_w += einsum;\n      if (pr_w <= Math.exp(C1 / rr)) return 0;\n      pr_w = Math.pow(pr_w, rr);\n      if (pr_w >= 1)\n        // 1 was iMax was eps\n        return 1;\n      return pr_w;\n    }\n    function tukeyQinv(p, c, v) {\n      var p0 = 0.322232421088;\n      var q0 = 0.993484626060e-01;\n      var p1 = -1.0;\n      var q1 = 0.588581570495;\n      var p2 = -0.342242088547;\n      var q2 = 0.531103462366;\n      var p3 = -0.204231210125;\n      var q3 = 0.103537752850;\n      var p4 = -0.453642210148e-04;\n      var q4 = 0.38560700634e-02;\n      var c1 = 0.8832;\n      var c2 = 0.2368;\n      var c3 = 1.214;\n      var c4 = 1.208;\n      var c5 = 1.4142;\n      var vmax = 120.0;\n      var ps = 0.5 - 0.5 * p;\n      var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n      var t = yi + ((((yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0) / ((((yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n      if (v < vmax) t += (t * t * t + t) / v / 4.0;\n      var q = c1 - c2 * t;\n      if (v < vmax) q += -c3 / v + c4 * t / v;\n      return t * (q * Math.log(c - 1.0) + c5);\n    }\n    jStat.extend(jStat.tukey, {\n      cdf: function cdf(q, nmeans, df) {\n        // Identical implementation as the R ptukey() function as of commit 68947\n        var rr = 1;\n        var cc = nmeans;\n        var nlegq = 16;\n        var ihalfq = 8;\n        var eps1 = -30.0;\n        var eps2 = 1.0e-14;\n        var dhaf = 100.0;\n        var dquar = 800.0;\n        var deigh = 5000.0;\n        var dlarg = 25000.0;\n        var ulen1 = 1.0;\n        var ulen2 = 0.5;\n        var ulen3 = 0.25;\n        var ulen4 = 0.125;\n        var xlegq = [0.989400934991649932596154173450, 0.944575023073232576077988415535, 0.865631202387831743880467897712, 0.755404408355003033895101194847, 0.617876244402643748446671764049, 0.458016777657227386342419442984, 0.281603550779258913230460501460, 0.950125098376374401853193354250e-1];\n        var alegq = [0.271524594117540948517805724560e-1, 0.622535239386478928628438369944e-1, 0.951585116824927848099251076022e-1, 0.124628971255533872052476282192, 0.149595988816576732081501730547, 0.169156519395002538189312079030, 0.182603415044923588866763667969, 0.189450610455068496285396723208];\n        if (q <= 0) return 0;\n\n        // df must be > 1\n        // there must be at least two values\n\n        if (df < 2 || rr < 1 || cc < 2) return NaN;\n        if (!Number.isFinite(q)) return 1;\n        if (df > dlarg) return tukeyWprob(q, rr, cc);\n\n        // calculate leading constant\n\n        var f2 = df * 0.5;\n        var f2lf = f2 * Math.log(df) - df * Math.log(2) - jStat.gammaln(f2);\n        var f21 = f2 - 1.0;\n\n        // integral is divided into unit, half-unit, quarter-unit, or\n        // eighth-unit length intervals depending on the value of the\n        // degrees of freedom.\n\n        var ff4 = df * 0.25;\n        var ulen;\n        if (df <= dhaf) ulen = ulen1;else if (df <= dquar) ulen = ulen2;else if (df <= deigh) ulen = ulen3;else ulen = ulen4;\n        f2lf += Math.log(ulen);\n\n        // integrate over each subinterval\n\n        var ans = 0.0;\n        for (var i = 1; i <= 50; i++) {\n          var otsum = 0.0;\n\n          // legendre quadrature with order = nlegq\n          // nodes (stored in xlegq) are symmetric around zero.\n\n          var twa1 = (2 * i - 1) * ulen;\n          for (var jj = 1; jj <= nlegq; jj++) {\n            var j, t1;\n            if (ihalfq < jj) {\n              j = jj - ihalfq - 1;\n              t1 = f2lf + f21 * Math.log(twa1 + xlegq[j] * ulen) - (xlegq[j] * ulen + twa1) * ff4;\n            } else {\n              j = jj - 1;\n              t1 = f2lf + f21 * Math.log(twa1 - xlegq[j] * ulen) + (xlegq[j] * ulen - twa1) * ff4;\n            }\n\n            // if exp(t1) < 9e-14, then doesn't contribute to integral\n            var qsqz;\n            if (t1 >= eps1) {\n              if (ihalfq < jj) {\n                qsqz = q * Math.sqrt((xlegq[j] * ulen + twa1) * 0.5);\n              } else {\n                qsqz = q * Math.sqrt((-(xlegq[j] * ulen) + twa1) * 0.5);\n              }\n\n              // call wprob to find integral of range portion\n\n              var wprb = tukeyWprob(qsqz, rr, cc);\n              var rotsum = wprb * alegq[j] * Math.exp(t1);\n              otsum += rotsum;\n            }\n            // end legendre integral for interval i\n            // L200:\n          }\n\n          // if integral for interval i < 1e-14, then stop.\n          // However, in order to avoid small area under left tail,\n          // at least  1 / ulen  intervals are calculated.\n          if (i * ulen >= 1.0 && otsum <= eps2) break;\n\n          // end of interval i\n          // L330:\n\n          ans += otsum;\n        }\n        if (otsum > eps2) {\n          // not converged\n          throw new Error('tukey.cdf failed to converge');\n        }\n        if (ans > 1) ans = 1;\n        return ans;\n      },\n      inv: function (p, nmeans, df) {\n        // Identical implementation as the R qtukey() function as of commit 68947\n        var rr = 1;\n        var cc = nmeans;\n        var eps = 0.0001;\n        var maxiter = 50;\n\n        // df must be > 1 ; there must be at least two values\n        if (df < 2 || rr < 1 || cc < 2) return NaN;\n        if (p < 0 || p > 1) return NaN;\n        if (p === 0) return 0;\n        if (p === 1) return Infinity;\n\n        // Initial value\n\n        var x0 = tukeyQinv(p, cc, df);\n\n        // Find prob(value < x0)\n\n        var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n        // Find the second iterate and prob(value < x1).\n        // If the first iterate has probability value\n        // exceeding p then second iterate is 1 less than\n        // first iterate; otherwise it is 1 greater.\n\n        var x1;\n        if (valx0 > 0.0) x1 = Math.max(0.0, x0 - 1.0);else x1 = x0 + 1.0;\n        var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n        // Find new iterate\n\n        var ans;\n        for (var iter = 1; iter < maxiter; iter++) {\n          ans = x1 - valx1 * (x1 - x0) / (valx1 - valx0);\n          valx0 = valx1;\n\n          // New iterate must be >= 0\n\n          x0 = x1;\n          if (ans < 0.0) {\n            ans = 0.0;\n            valx1 = -p;\n          }\n          // Find prob(value < new iterate)\n\n          valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n          x1 = ans;\n\n          // If the difference between two successive\n          // iterates is less than eps, stop\n\n          var xabs = Math.abs(x1 - x0);\n          if (xabs < eps) return ans;\n        }\n        throw new Error('tukey.inv failed to converge');\n      }\n    });\n  })(jStat, Math);\n  /* Provides functions for the solution of linear system of equations, integration, extrapolation,\n   * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n  (function (jStat, Math) {\n    var push = Array.prototype.push;\n    var isArray = jStat.utils.isArray;\n    function isUsable(arg) {\n      return isArray(arg) || arg instanceof jStat;\n    }\n    jStat.extend({\n      // add a vector/matrix to a vector/matrix or scalar\n      add: function add(arr, arg) {\n        // check if arg is a vector or scalar\n        if (isUsable(arg)) {\n          if (!isUsable(arg[0])) arg = [arg];\n          return jStat.map(arr, function (value, row, col) {\n            return value + arg[row][col];\n          });\n        }\n        return jStat.map(arr, function (value) {\n          return value + arg;\n        });\n      },\n      // subtract a vector or scalar from the vector\n      subtract: function subtract(arr, arg) {\n        // check if arg is a vector or scalar\n        if (isUsable(arg)) {\n          if (!isUsable(arg[0])) arg = [arg];\n          return jStat.map(arr, function (value, row, col) {\n            return value - arg[row][col] || 0;\n          });\n        }\n        return jStat.map(arr, function (value) {\n          return value - arg;\n        });\n      },\n      // matrix division\n      divide: function divide(arr, arg) {\n        if (isUsable(arg)) {\n          if (!isUsable(arg[0])) arg = [arg];\n          return jStat.multiply(arr, jStat.inv(arg));\n        }\n        return jStat.map(arr, function (value) {\n          return value / arg;\n        });\n      },\n      // matrix multiplication\n      multiply: function multiply(arr, arg) {\n        var row, col, nrescols, sum, nrow, ncol, res, rescols;\n        // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n        if (arr.length === undefined && arg.length === undefined) {\n          return arr * arg;\n        }\n        nrow = arr.length, ncol = arr[0].length, res = jStat.zeros(nrow, nrescols = isUsable(arg) ? arg[0].length : ncol), rescols = 0;\n        if (isUsable(arg)) {\n          for (; rescols < nrescols; rescols++) {\n            for (row = 0; row < nrow; row++) {\n              sum = 0;\n              for (col = 0; col < ncol; col++) sum += arr[row][col] * arg[col][rescols];\n              res[row][rescols] = sum;\n            }\n          }\n          return nrow === 1 && rescols === 1 ? res[0][0] : res;\n        }\n        return jStat.map(arr, function (value) {\n          return value * arg;\n        });\n      },\n      // outer([1,2,3],[4,5,6])\n      // ===\n      // [[1],[2],[3]] times [[4,5,6]]\n      // ->\n      // [[4,5,6],[8,10,12],[12,15,18]]\n      outer: function outer(A, B) {\n        return jStat.multiply(A.map(function (t) {\n          return [t];\n        }), [B]);\n      },\n      // Returns the dot product of two matricies\n      dot: function dot(arr, arg) {\n        if (!isUsable(arr[0])) arr = [arr];\n        if (!isUsable(arg[0])) arg = [arg];\n        // convert column to row vector\n        var left = arr[0].length === 1 && arr.length !== 1 ? jStat.transpose(arr) : arr,\n          right = arg[0].length === 1 && arg.length !== 1 ? jStat.transpose(arg) : arg,\n          res = [],\n          row = 0,\n          nrow = left.length,\n          ncol = left[0].length,\n          sum,\n          col;\n        for (; row < nrow; row++) {\n          res[row] = [];\n          sum = 0;\n          for (col = 0; col < ncol; col++) sum += left[row][col] * right[row][col];\n          res[row] = sum;\n        }\n        return res.length === 1 ? res[0] : res;\n      },\n      // raise every element by a scalar\n      pow: function pow(arr, arg) {\n        return jStat.map(arr, function (value) {\n          return Math.pow(value, arg);\n        });\n      },\n      // exponentiate every element\n      exp: function exp(arr) {\n        return jStat.map(arr, function (value) {\n          return Math.exp(value);\n        });\n      },\n      // generate the natural log of every element\n      log: function exp(arr) {\n        return jStat.map(arr, function (value) {\n          return Math.log(value);\n        });\n      },\n      // generate the absolute values of the vector\n      abs: function abs(arr) {\n        return jStat.map(arr, function (value) {\n          return Math.abs(value);\n        });\n      },\n      // computes the p-norm of the vector\n      // In the case that a matrix is passed, uses the first row as the vector\n      norm: function norm(arr, p) {\n        var nnorm = 0,\n          i = 0;\n        // check the p-value of the norm, and set for most common case\n        if (isNaN(p)) p = 2;\n        // check if multi-dimensional array, and make vector correction\n        if (isUsable(arr[0])) arr = arr[0];\n        // vector norm\n        for (; i < arr.length; i++) {\n          nnorm += Math.pow(Math.abs(arr[i]), p);\n        }\n        return Math.pow(nnorm, 1 / p);\n      },\n      // computes the angle between two vectors in rads\n      // In case a matrix is passed, this uses the first row as the vector\n      angle: function angle(arr, arg) {\n        return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n      },\n      // augment one matrix by another\n      // Note: this function returns a matrix, not a jStat object\n      aug: function aug(a, b) {\n        var newarr = [];\n        var i;\n        for (i = 0; i < a.length; i++) {\n          newarr.push(a[i].slice());\n        }\n        for (i = 0; i < newarr.length; i++) {\n          push.apply(newarr[i], b[i]);\n        }\n        return newarr;\n      },\n      // The inv() function calculates the inverse of a matrix\n      // Create the inverse by augmenting the matrix by the identity matrix of the\n      // appropriate size, and then use G-J elimination on the augmented matrix.\n      inv: function inv(a) {\n        var rows = a.length;\n        var cols = a[0].length;\n        var b = jStat.identity(rows, cols);\n        var c = jStat.gauss_jordan(a, b);\n        var result = [];\n        var i = 0;\n        var j;\n\n        //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n        for (; i < rows; i++) {\n          result[i] = [];\n          for (j = cols; j < c[0].length; j++) result[i][j - cols] = c[i][j];\n        }\n        return result;\n      },\n      // calculate the determinant of a matrix\n      det: function det(a) {\n        var alen = a.length,\n          alend = alen * 2,\n          vals = new Array(alend),\n          rowshift = alen - 1,\n          colshift = alend - 1,\n          mrow = rowshift - alen + 1,\n          mcol = colshift,\n          i = 0,\n          result = 0,\n          j;\n        // check for special 2x2 case\n        if (alen === 2) {\n          return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n        }\n        for (; i < alend; i++) {\n          vals[i] = 1;\n        }\n        for (i = 0; i < alen; i++) {\n          for (j = 0; j < alen; j++) {\n            vals[mrow < 0 ? mrow + alen : mrow] *= a[i][j];\n            vals[mcol < alen ? mcol + alen : mcol] *= a[i][j];\n            mrow++;\n            mcol--;\n          }\n          mrow = --rowshift - alen + 1;\n          mcol = --colshift;\n        }\n        for (i = 0; i < alen; i++) {\n          result += vals[i];\n        }\n        for (; i < alend; i++) {\n          result -= vals[i];\n        }\n        return result;\n      },\n      gauss_elimination: function gauss_elimination(a, b) {\n        var i = 0,\n          j = 0,\n          n = a.length,\n          m = a[0].length,\n          factor = 1,\n          sum = 0,\n          x = [],\n          maug,\n          pivot,\n          temp,\n          k;\n        a = jStat.aug(a, b);\n        maug = a[0].length;\n        for (i = 0; i < n; i++) {\n          pivot = a[i][i];\n          j = i;\n          for (k = i + 1; k < m; k++) {\n            if (pivot < Math.abs(a[k][i])) {\n              pivot = a[k][i];\n              j = k;\n            }\n          }\n          if (j != i) {\n            for (k = 0; k < maug; k++) {\n              temp = a[i][k];\n              a[i][k] = a[j][k];\n              a[j][k] = temp;\n            }\n          }\n          for (j = i + 1; j < n; j++) {\n            factor = a[j][i] / a[i][i];\n            for (k = i; k < maug; k++) {\n              a[j][k] = a[j][k] - factor * a[i][k];\n            }\n          }\n        }\n        for (i = n - 1; i >= 0; i--) {\n          sum = 0;\n          for (j = i + 1; j <= n - 1; j++) {\n            sum = sum + x[j] * a[i][j];\n          }\n          x[i] = (a[i][maug - 1] - sum) / a[i][i];\n        }\n        return x;\n      },\n      gauss_jordan: function gauss_jordan(a, b) {\n        var m = jStat.aug(a, b);\n        var h = m.length;\n        var w = m[0].length;\n        var c = 0;\n        var x, y, y2;\n        // find max pivot\n        for (y = 0; y < h; y++) {\n          var maxrow = y;\n          for (y2 = y + 1; y2 < h; y2++) {\n            if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y])) maxrow = y2;\n          }\n          var tmp = m[y];\n          m[y] = m[maxrow];\n          m[maxrow] = tmp;\n          for (y2 = y + 1; y2 < h; y2++) {\n            c = m[y2][y] / m[y][y];\n            for (x = y; x < w; x++) {\n              m[y2][x] -= m[y][x] * c;\n            }\n          }\n        }\n        // backsubstitute\n        for (y = h - 1; y >= 0; y--) {\n          c = m[y][y];\n          for (y2 = 0; y2 < y; y2++) {\n            for (x = w - 1; x > y - 1; x--) {\n              m[y2][x] -= m[y][x] * m[y2][y] / c;\n            }\n          }\n          m[y][y] /= c;\n          for (x = h; x < w; x++) {\n            m[y][x] /= c;\n          }\n        }\n        return m;\n      },\n      // solve equation\n      // Ax=b\n      // A is upper triangular matrix\n      // A=[[1,2,3],[0,4,5],[0,6,7]]\n      // b=[1,2,3]\n      // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n      // if you use matrix style\n      // A=[[1,2,3],[0,4,5],[0,6,7]]\n      // b=[[1],[2],[3]]\n      // will return [[2.666],[0.1666],[1.666]]\n      triaUpSolve: function triaUpSolve(A, b) {\n        var size = A[0].length;\n        var x = jStat.zeros(1, size)[0];\n        var parts;\n        var matrix_mode = false;\n        if (b[0].length != undefined) {\n          b = b.map(function (i) {\n            return i[0];\n          });\n          matrix_mode = true;\n        }\n        jStat.arange(size - 1, -1, -1).forEach(function (i) {\n          parts = jStat.arange(i + 1, size).map(function (j) {\n            return x[j] * A[i][j];\n          });\n          x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n        });\n        if (matrix_mode) return x.map(function (i) {\n          return [i];\n        });\n        return x;\n      },\n      triaLowSolve: function triaLowSolve(A, b) {\n        // like to triaUpSolve but A is lower triangular matrix\n        var size = A[0].length;\n        var x = jStat.zeros(1, size)[0];\n        var parts;\n        var matrix_mode = false;\n        if (b[0].length != undefined) {\n          b = b.map(function (i) {\n            return i[0];\n          });\n          matrix_mode = true;\n        }\n        jStat.arange(size).forEach(function (i) {\n          parts = jStat.arange(i).map(function (j) {\n            return A[i][j] * x[j];\n          });\n          x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n        });\n        if (matrix_mode) return x.map(function (i) {\n          return [i];\n        });\n        return x;\n      },\n      // A -> [L,U]\n      // A=LU\n      // L is lower triangular matrix\n      // U is upper triangular matrix\n      lu: function lu(A) {\n        var size = A.length;\n        //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n        var L = jStat.identity(size);\n        var R = jStat.zeros(A.length, A[0].length);\n        var parts;\n        jStat.arange(size).forEach(function (t) {\n          R[0][t] = A[0][t];\n        });\n        jStat.arange(1, size).forEach(function (l) {\n          jStat.arange(l).forEach(function (i) {\n            parts = jStat.arange(i).map(function (jj) {\n              return L[l][jj] * R[jj][i];\n            });\n            L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n          });\n          jStat.arange(l, size).forEach(function (j) {\n            parts = jStat.arange(l).map(function (jj) {\n              return L[l][jj] * R[jj][j];\n            });\n            R[l][j] = A[parts.length][j] - jStat.sum(parts);\n          });\n        });\n        return [L, R];\n      },\n      // A -> T\n      // A=TT'\n      // T is lower triangular matrix\n      cholesky: function cholesky(A) {\n        var size = A.length;\n        var T = jStat.zeros(A.length, A[0].length);\n        var parts;\n        jStat.arange(size).forEach(function (i) {\n          parts = jStat.arange(i).map(function (t) {\n            return Math.pow(T[i][t], 2);\n          });\n          T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n          jStat.arange(i + 1, size).forEach(function (j) {\n            parts = jStat.arange(i).map(function (t) {\n              return T[i][t] * T[j][t];\n            });\n            T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n          });\n        });\n        return T;\n      },\n      gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n        var i = 0;\n        var j = 0;\n        var n = a.length;\n        var l = [];\n        var u = [];\n        var d = [];\n        var xv, c, h, xk;\n        for (; i < n; i++) {\n          l[i] = [];\n          u[i] = [];\n          d[i] = [];\n          for (j = 0; j < n; j++) {\n            if (i > j) {\n              l[i][j] = a[i][j];\n              u[i][j] = d[i][j] = 0;\n            } else if (i < j) {\n              u[i][j] = a[i][j];\n              l[i][j] = d[i][j] = 0;\n            } else {\n              d[i][j] = a[i][j];\n              l[i][j] = u[i][j] = 0;\n            }\n          }\n        }\n        h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n        c = jStat.multiply(jStat.inv(d), b);\n        xv = x;\n        xk = jStat.add(jStat.multiply(h, x), c);\n        i = 2;\n        while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n          xv = xk;\n          xk = jStat.add(jStat.multiply(h, xv), c);\n          i++;\n        }\n        return xk;\n      },\n      gauss_seidel: function gauss_seidel(a, b, x, r) {\n        var i = 0;\n        var n = a.length;\n        var l = [];\n        var u = [];\n        var d = [];\n        var j, xv, c, h, xk;\n        for (; i < n; i++) {\n          l[i] = [];\n          u[i] = [];\n          d[i] = [];\n          for (j = 0; j < n; j++) {\n            if (i > j) {\n              l[i][j] = a[i][j];\n              u[i][j] = d[i][j] = 0;\n            } else if (i < j) {\n              u[i][j] = a[i][j];\n              l[i][j] = d[i][j] = 0;\n            } else {\n              d[i][j] = a[i][j];\n              l[i][j] = u[i][j] = 0;\n            }\n          }\n        }\n        h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n        c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n        xv = x;\n        xk = jStat.add(jStat.multiply(h, x), c);\n        i = 2;\n        while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n          xv = xk;\n          xk = jStat.add(jStat.multiply(h, xv), c);\n          i = i + 1;\n        }\n        return xk;\n      },\n      SOR: function SOR(a, b, x, r, w) {\n        var i = 0;\n        var n = a.length;\n        var l = [];\n        var u = [];\n        var d = [];\n        var j, xv, c, h, xk;\n        for (; i < n; i++) {\n          l[i] = [];\n          u[i] = [];\n          d[i] = [];\n          for (j = 0; j < n; j++) {\n            if (i > j) {\n              l[i][j] = a[i][j];\n              u[i][j] = d[i][j] = 0;\n            } else if (i < j) {\n              u[i][j] = a[i][j];\n              l[i][j] = d[i][j] = 0;\n            } else {\n              d[i][j] = a[i][j];\n              l[i][j] = u[i][j] = 0;\n            }\n          }\n        }\n        h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))), jStat.subtract(jStat.multiply(d, 1 - w), jStat.multiply(u, w)));\n        c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))), b), w);\n        xv = x;\n        xk = jStat.add(jStat.multiply(h, x), c);\n        i = 2;\n        while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n          xv = xk;\n          xk = jStat.add(jStat.multiply(h, xv), c);\n          i++;\n        }\n        return xk;\n      },\n      householder: function householder(a) {\n        var m = a.length;\n        var n = a[0].length;\n        var i = 0;\n        var w = [];\n        var p = [];\n        var alpha, r, k, j, factor;\n        for (; i < m - 1; i++) {\n          alpha = 0;\n          for (j = i + 1; j < n; j++) alpha += a[j][i] * a[j][i];\n          factor = a[i + 1][i] > 0 ? -1 : 1;\n          alpha = factor * Math.sqrt(alpha);\n          r = Math.sqrt((alpha * alpha - a[i + 1][i] * alpha) / 2);\n          w = jStat.zeros(m, 1);\n          w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n          for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n          p = jStat.subtract(jStat.identity(m, n), jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n          a = jStat.multiply(p, jStat.multiply(a, p));\n        }\n        return a;\n      },\n      // A -> [Q,R]\n      // Q is orthogonal matrix\n      // R is upper triangular\n      QR: function () {\n        // x -> Q\n        // find a orthogonal matrix Q st.\n        // Qx=y\n        // y is [||x||,0,0,...]\n\n        // quick ref\n        var sum = jStat.sum;\n        var range = jStat.arange;\n        function qr2(x) {\n          // quick impletation\n          // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n          var n = x.length;\n          var p = x[0].length;\n          var r = jStat.zeros(p, p);\n          x = jStat.copy(x);\n          var i, j, k;\n          for (j = 0; j < p; j++) {\n            r[j][j] = Math.sqrt(sum(range(n).map(function (i) {\n              return x[i][j] * x[i][j];\n            })));\n            for (i = 0; i < n; i++) {\n              x[i][j] = x[i][j] / r[j][j];\n            }\n            for (k = j + 1; k < p; k++) {\n              r[j][k] = sum(range(n).map(function (i) {\n                return x[i][j] * x[i][k];\n              }));\n              for (i = 0; i < n; i++) {\n                x[i][k] = x[i][k] - x[i][j] * r[j][k];\n              }\n            }\n          }\n          return [x, r];\n        }\n        return qr2;\n      }(),\n      lstsq: function () {\n        // solve least squard problem for Ax=b as QR decomposition way if b is\n        // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n        // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n        function R_I(A) {\n          A = jStat.copy(A);\n          var size = A.length;\n          var I = jStat.identity(size);\n          jStat.arange(size - 1, -1, -1).forEach(function (i) {\n            jStat.sliceAssign(I, {\n              row: i\n            }, jStat.divide(jStat.slice(I, {\n              row: i\n            }), A[i][i]));\n            jStat.sliceAssign(A, {\n              row: i\n            }, jStat.divide(jStat.slice(A, {\n              row: i\n            }), A[i][i]));\n            jStat.arange(i).forEach(function (j) {\n              var c = jStat.multiply(A[j][i], -1);\n              var Aj = jStat.slice(A, {\n                row: j\n              });\n              var cAi = jStat.multiply(jStat.slice(A, {\n                row: i\n              }), c);\n              jStat.sliceAssign(A, {\n                row: j\n              }, jStat.add(Aj, cAi));\n              var Ij = jStat.slice(I, {\n                row: j\n              });\n              var cIi = jStat.multiply(jStat.slice(I, {\n                row: i\n              }), c);\n              jStat.sliceAssign(I, {\n                row: j\n              }, jStat.add(Ij, cIi));\n            });\n          });\n          return I;\n        }\n        function qr_solve(A, b) {\n          var array_mode = false;\n          if (b[0].length === undefined) {\n            // [c1,c2,c3] mode\n            b = b.map(function (x) {\n              return [x];\n            });\n            array_mode = true;\n          }\n          var QR = jStat.QR(A);\n          var Q = QR[0];\n          var R = QR[1];\n          var attrs = A[0].length;\n          var Q1 = jStat.slice(Q, {\n            col: {\n              end: attrs\n            }\n          });\n          var R1 = jStat.slice(R, {\n            row: {\n              end: attrs\n            }\n          });\n          var RI = R_I(R1);\n          var Q2 = jStat.transpose(Q1);\n          if (Q2[0].length === undefined) {\n            Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n          }\n          var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n          if (x.length === undefined) {\n            x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n          }\n          if (array_mode) return x.map(function (i) {\n            return i[0];\n          });\n          return x;\n        }\n        return qr_solve;\n      }(),\n      jacobi: function jacobi(a) {\n        var condition = 1;\n        var n = a.length;\n        var e = jStat.identity(n, n);\n        var ev = [];\n        var b, i, j, p, q, maxim, theta, s;\n        // condition === 1 only if tolerance is not reached\n        while (condition === 1) {\n          maxim = a[0][1];\n          p = 0;\n          q = 1;\n          for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n              if (i != j) {\n                if (maxim < Math.abs(a[i][j])) {\n                  maxim = Math.abs(a[i][j]);\n                  p = i;\n                  q = j;\n                }\n              }\n            }\n          }\n          if (a[p][p] === a[q][q]) theta = a[p][q] > 0 ? Math.PI / 4 : -Math.PI / 4;else theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n          s = jStat.identity(n, n);\n          s[p][p] = Math.cos(theta);\n          s[p][q] = -Math.sin(theta);\n          s[q][p] = Math.sin(theta);\n          s[q][q] = Math.cos(theta);\n          // eigen vector matrix\n          e = jStat.multiply(e, s);\n          b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n          a = b;\n          condition = 0;\n          for (i = 1; i < n; i++) {\n            for (j = 1; j < n; j++) {\n              if (i != j && Math.abs(a[i][j]) > 0.001) {\n                condition = 1;\n              }\n            }\n          }\n        }\n        for (i = 0; i < n; i++) ev.push(a[i][i]);\n        //returns both the eigenvalue and eigenmatrix\n        return [e, ev];\n      },\n      rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n        var k1, k2, u_j1, k3, k4;\n        if (order === 2) {\n          while (t_j <= p) {\n            k1 = h * f(t_j, u_j);\n            k2 = h * f(t_j + h, u_j + k1);\n            u_j1 = u_j + (k1 + k2) / 2;\n            u_j = u_j1;\n            t_j = t_j + h;\n          }\n        }\n        if (order === 4) {\n          while (t_j <= p) {\n            k1 = h * f(t_j, u_j);\n            k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n            k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n            k4 = h * f(t_j + h, u_j + k3);\n            u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n            u_j = u_j1;\n            t_j = t_j + h;\n          }\n        }\n        return u_j;\n      },\n      romberg: function romberg(f, a, b, order) {\n        var i = 0;\n        var h = (b - a) / 2;\n        var x = [];\n        var h1 = [];\n        var g = [];\n        var m, a1, j, k, I;\n        while (i < order / 2) {\n          I = f(a);\n          for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n          m = x.length;\n          for (j = 1; j < m - 1; j++) {\n            I += (j % 2 !== 0 ? 4 : 2) * f(x[j]);\n          }\n          I = h / 3 * (I + f(b));\n          g[i] = I;\n          h /= 2;\n          i++;\n        }\n        a1 = g.length;\n        m = 1;\n        while (a1 !== 1) {\n          for (j = 0; j < a1 - 1; j++) h1[j] = (Math.pow(4, m) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n          a1 = h1.length;\n          g = h1;\n          h1 = [];\n          m++;\n        }\n        return g;\n      },\n      richardson: function richardson(X, f, x, h) {\n        function pos(X, x) {\n          var i = 0;\n          var n = X.length;\n          var p;\n          for (; i < n; i++) if (X[i] === x) p = i;\n          return p;\n        }\n        var h_min = Math.abs(x - X[pos(X, x) + 1]);\n        var i = 0;\n        var g = [];\n        var h1 = [];\n        var y1, y2, m, a, j;\n        while (h >= h_min) {\n          y1 = pos(X, x + h);\n          y2 = pos(X, x);\n          g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n          h /= 2;\n          i++;\n        }\n        a = g.length;\n        m = 1;\n        while (a != 1) {\n          for (j = 0; j < a - 1; j++) h1[j] = (Math.pow(4, m) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n          a = h1.length;\n          g = h1;\n          h1 = [];\n          m++;\n        }\n        return g;\n      },\n      simpson: function simpson(f, a, b, n) {\n        var h = (b - a) / n;\n        var I = f(a);\n        var x = [];\n        var j = a;\n        var k = 0;\n        var i = 1;\n        var m;\n        for (; j <= b; j = j + h, k++) x[k] = j;\n        m = x.length;\n        for (; i < m - 1; i++) {\n          I += (i % 2 !== 0 ? 4 : 2) * f(x[i]);\n        }\n        return h / 3 * (I + f(b));\n      },\n      hermite: function hermite(X, F, dF, value) {\n        var n = X.length;\n        var p = 0;\n        var i = 0;\n        var l = [];\n        var dl = [];\n        var A = [];\n        var B = [];\n        var j;\n        for (; i < n; i++) {\n          l[i] = 1;\n          for (j = 0; j < n; j++) {\n            if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n          }\n          dl[i] = 0;\n          for (j = 0; j < n; j++) {\n            if (i != j) dl[i] += 1 / (X[i] - X[j]);\n          }\n          A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n          B[i] = (value - X[i]) * (l[i] * l[i]);\n          p += A[i] * F[i] + B[i] * dF[i];\n        }\n        return p;\n      },\n      lagrange: function lagrange(X, F, value) {\n        var p = 0;\n        var i = 0;\n        var j, l;\n        var n = X.length;\n        for (; i < n; i++) {\n          l = F[i];\n          for (j = 0; j < n; j++) {\n            // calculating the lagrange polynomial L_i\n            if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n          }\n          // adding the lagrange polynomials found above\n          p += l;\n        }\n        return p;\n      },\n      cubic_spline: function cubic_spline(X, F, value) {\n        var n = X.length;\n        var i = 0,\n          j;\n        var A = [];\n        var B = [];\n        var alpha = [];\n        var c = [];\n        var h = [];\n        var b = [];\n        var d = [];\n        for (; i < n - 1; i++) h[i] = X[i + 1] - X[i];\n        alpha[0] = 0;\n        for (i = 1; i < n - 1; i++) {\n          alpha[i] = 3 / h[i] * (F[i + 1] - F[i]) - 3 / h[i - 1] * (F[i] - F[i - 1]);\n        }\n        for (i = 1; i < n - 1; i++) {\n          A[i] = [];\n          B[i] = [];\n          A[i][i - 1] = h[i - 1];\n          A[i][i] = 2 * (h[i - 1] + h[i]);\n          A[i][i + 1] = h[i];\n          B[i][0] = alpha[i];\n        }\n        c = jStat.multiply(jStat.inv(A), B);\n        for (j = 0; j < n - 1; j++) {\n          b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n          d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n        }\n        for (j = 0; j < n; j++) {\n          if (X[j] > value) break;\n        }\n        j -= 1;\n        return F[j] + (value - X[j]) * b[j] + jStat.sq(value - X[j]) * c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n      },\n      gauss_quadrature: function gauss_quadrature() {\n        throw new Error('gauss_quadrature not yet implemented');\n      },\n      PCA: function PCA(X) {\n        var m = X.length;\n        var n = X[0].length;\n        var i = 0;\n        var j, temp1;\n        var u = [];\n        var D = [];\n        var result = [];\n        var temp2 = [];\n        var Y = [];\n        var Bt = [];\n        var B = [];\n        var C = [];\n        var V = [];\n        var Vt = [];\n        for (i = 0; i < m; i++) {\n          u[i] = jStat.sum(X[i]) / n;\n        }\n        for (i = 0; i < n; i++) {\n          B[i] = [];\n          for (j = 0; j < m; j++) {\n            B[i][j] = X[j][i] - u[j];\n          }\n        }\n        B = jStat.transpose(B);\n        for (i = 0; i < m; i++) {\n          C[i] = [];\n          for (j = 0; j < m; j++) {\n            C[i][j] = jStat.dot([B[i]], [B[j]]) / (n - 1);\n          }\n        }\n        result = jStat.jacobi(C);\n        V = result[0];\n        D = result[1];\n        Vt = jStat.transpose(V);\n        for (i = 0; i < D.length; i++) {\n          for (j = i; j < D.length; j++) {\n            if (D[i] < D[j]) {\n              temp1 = D[i];\n              D[i] = D[j];\n              D[j] = temp1;\n              temp2 = Vt[i];\n              Vt[i] = Vt[j];\n              Vt[j] = temp2;\n            }\n          }\n        }\n        Bt = jStat.transpose(B);\n        for (i = 0; i < m; i++) {\n          Y[i] = [];\n          for (j = 0; j < Bt.length; j++) {\n            Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n          }\n        }\n        return [X, D, Vt, Y];\n      }\n    });\n\n    // extend jStat.fn with methods that require one argument\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jStat.fn[passfunc] = function (arg, func) {\n          var tmpthis = this;\n          // check for callback\n          if (func) {\n            setTimeout(function () {\n              func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n            }, 15);\n            return this;\n          }\n          if (typeof jStat[passfunc](this, arg) === 'number') return jStat[passfunc](this, arg);else return jStat(jStat[passfunc](this, arg));\n        };\n      })(funcs[i]);\n    })('add divide multiply subtract dot pow exp log abs norm angle'.split(' '));\n  })(jStat, Math);\n  (function (jStat, Math) {\n    var slice = [].slice;\n    var isNumber = jStat.utils.isNumber;\n    var isArray = jStat.utils.isArray;\n\n    // flag==true denotes use of sample standard deviation\n    // Z Statistics\n    jStat.extend({\n      // 2 different parameter lists:\n      // (value, mean, sd)\n      // (value, array, flag)\n      zscore: function zscore() {\n        var args = slice.call(arguments);\n        if (isNumber(args[1])) {\n          return (args[0] - args[1]) / args[2];\n        }\n        return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n      },\n      // 3 different paramter lists:\n      // (value, mean, sd, sides)\n      // (zscore, sides)\n      // (value, array, sides, flag)\n      ztest: function ztest() {\n        var args = slice.call(arguments);\n        var z;\n        if (isArray(args[1])) {\n          // (value, array, sides, flag)\n          z = jStat.zscore(args[0], args[1], args[3]);\n          return args[2] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n        } else {\n          if (args.length > 2) {\n            // (value, mean, sd, sides)\n            z = jStat.zscore(args[0], args[1], args[2]);\n            return args[3] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n          } else {\n            // (zscore, sides)\n            z = args[0];\n            return args[1] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n          }\n        }\n      }\n    });\n    jStat.extend(jStat.fn, {\n      zscore: function zscore(value, flag) {\n        return (value - this.mean()) / this.stdev(flag);\n      },\n      ztest: function ztest(value, sides, flag) {\n        var zscore = Math.abs(this.zscore(value, flag));\n        return sides === 1 ? jStat.normal.cdf(-zscore, 0, 1) : jStat.normal.cdf(-zscore, 0, 1) * 2;\n      }\n    });\n\n    // T Statistics\n    jStat.extend({\n      // 2 parameter lists\n      // (value, mean, sd, n)\n      // (value, array)\n      tscore: function tscore() {\n        var args = slice.call(arguments);\n        return args.length === 4 ? (args[0] - args[1]) / (args[2] / Math.sqrt(args[3])) : (args[0] - jStat.mean(args[1])) / (jStat.stdev(args[1], true) / Math.sqrt(args[1].length));\n      },\n      // 3 different paramter lists:\n      // (value, mean, sd, n, sides)\n      // (tscore, n, sides)\n      // (value, array, sides)\n      ttest: function ttest() {\n        var args = slice.call(arguments);\n        var tscore;\n        if (args.length === 5) {\n          tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n          return args[4] === 1 ? jStat.studentt.cdf(-tscore, args[3] - 1) : jStat.studentt.cdf(-tscore, args[3] - 1) * 2;\n        }\n        if (isNumber(args[1])) {\n          tscore = Math.abs(args[0]);\n          return args[2] == 1 ? jStat.studentt.cdf(-tscore, args[1] - 1) : jStat.studentt.cdf(-tscore, args[1] - 1) * 2;\n        }\n        tscore = Math.abs(jStat.tscore(args[0], args[1]));\n        return args[2] == 1 ? jStat.studentt.cdf(-tscore, args[1].length - 1) : jStat.studentt.cdf(-tscore, args[1].length - 1) * 2;\n      }\n    });\n    jStat.extend(jStat.fn, {\n      tscore: function tscore(value) {\n        return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n      },\n      ttest: function ttest(value, sides) {\n        return sides === 1 ? 1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols() - 1) : jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols() - 1) * 2;\n      }\n    });\n\n    // F Statistics\n    jStat.extend({\n      // Paramter list is as follows:\n      // (array1, array2, array3, ...)\n      // or it is an array of arrays\n      // array of arrays conversion\n      anovafscore: function anovafscore() {\n        var args = slice.call(arguments),\n          expVar,\n          sample,\n          sampMean,\n          sampSampMean,\n          tmpargs,\n          unexpVar,\n          i,\n          j;\n        if (args.length === 1) {\n          tmpargs = new Array(args[0].length);\n          for (i = 0; i < args[0].length; i++) {\n            tmpargs[i] = args[0][i];\n          }\n          args = tmpargs;\n        }\n        // Builds sample array\n        sample = new Array();\n        for (i = 0; i < args.length; i++) {\n          sample = sample.concat(args[i]);\n        }\n        sampMean = jStat.mean(sample);\n        // Computes the explained variance\n        expVar = 0;\n        for (i = 0; i < args.length; i++) {\n          expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n        }\n        expVar /= args.length - 1;\n        // Computes unexplained variance\n        unexpVar = 0;\n        for (i = 0; i < args.length; i++) {\n          sampSampMean = jStat.mean(args[i]);\n          for (j = 0; j < args[i].length; j++) {\n            unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n          }\n        }\n        unexpVar /= sample.length - args.length;\n        return expVar / unexpVar;\n      },\n      // 2 different paramter setups\n      // (array1, array2, array3, ...)\n      // (anovafscore, df1, df2)\n      anovaftest: function anovaftest() {\n        var args = slice.call(arguments),\n          df1,\n          df2,\n          n,\n          i;\n        if (isNumber(args[0])) {\n          return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n        }\n        var anovafscore = jStat.anovafscore(args);\n        df1 = args.length - 1;\n        n = 0;\n        for (i = 0; i < args.length; i++) {\n          n = n + args[i].length;\n        }\n        df2 = n - df1 - 1;\n        return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n      },\n      ftest: function ftest(fscore, df1, df2) {\n        return 1 - jStat.centralF.cdf(fscore, df1, df2);\n      }\n    });\n    jStat.extend(jStat.fn, {\n      anovafscore: function anovafscore() {\n        return jStat.anovafscore(this.toArray());\n      },\n      anovaftes: function anovaftes() {\n        var n = 0;\n        var i;\n        for (i = 0; i < this.length; i++) {\n          n = n + this[i].length;\n        }\n        return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n      }\n    });\n\n    // Tukey's range test\n    jStat.extend({\n      // 2 parameter lists\n      // (mean1, mean2, n1, n2, sd)\n      // (array1, array2, sd)\n      qscore: function qscore() {\n        var args = slice.call(arguments);\n        var mean1, mean2, n1, n2, sd;\n        if (isNumber(args[0])) {\n          mean1 = args[0];\n          mean2 = args[1];\n          n1 = args[2];\n          n2 = args[3];\n          sd = args[4];\n        } else {\n          mean1 = jStat.mean(args[0]);\n          mean2 = jStat.mean(args[1]);\n          n1 = args[0].length;\n          n2 = args[1].length;\n          sd = args[2];\n        }\n        return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n      },\n      // 3 different parameter lists:\n      // (qscore, n, k)\n      // (mean1, mean2, n1, n2, sd, n, k)\n      // (array1, array2, sd, n, k)\n      qtest: function qtest() {\n        var args = slice.call(arguments);\n        var qscore;\n        if (args.length === 3) {\n          qscore = args[0];\n          args = args.slice(1);\n        } else if (args.length === 7) {\n          qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n          args = args.slice(5);\n        } else {\n          qscore = jStat.qscore(args[0], args[1], args[2]);\n          args = args.slice(3);\n        }\n        var n = args[0];\n        var k = args[1];\n        return 1 - jStat.tukey.cdf(qscore, k, n - k);\n      },\n      tukeyhsd: function tukeyhsd(arrays) {\n        var sd = jStat.pooledstdev(arrays);\n        var means = arrays.map(function (arr) {\n          return jStat.mean(arr);\n        });\n        var n = arrays.reduce(function (n, arr) {\n          return n + arr.length;\n        }, 0);\n        var results = [];\n        for (var i = 0; i < arrays.length; ++i) {\n          for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n          }\n        }\n        return results;\n      }\n    });\n\n    // Error Bounds\n    jStat.extend({\n      // 2 different parameter setups\n      // (value, alpha, sd, n)\n      // (value, alpha, array)\n      normalci: function normalci() {\n        var args = slice.call(arguments),\n          ans = new Array(2),\n          change;\n        if (args.length === 4) {\n          change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) * args[2] / Math.sqrt(args[3]));\n        } else {\n          change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) * jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n        }\n        ans[0] = args[0] - change;\n        ans[1] = args[0] + change;\n        return ans;\n      },\n      // 2 different parameter setups\n      // (value, alpha, sd, n)\n      // (value, alpha, array)\n      tci: function tci() {\n        var args = slice.call(arguments),\n          ans = new Array(2),\n          change;\n        if (args.length === 4) {\n          change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) * args[2] / Math.sqrt(args[3]));\n        } else {\n          change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) * jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n        }\n        ans[0] = args[0] - change;\n        ans[1] = args[0] + change;\n        return ans;\n      },\n      significant: function significant(pvalue, alpha) {\n        return pvalue < alpha;\n      }\n    });\n    jStat.extend(jStat.fn, {\n      normalci: function normalci(value, alpha) {\n        return jStat.normalci(value, alpha, this.toArray());\n      },\n      tci: function tci(value, alpha) {\n        return jStat.tci(value, alpha, this.toArray());\n      }\n    });\n\n    // internal method for calculating the z-score for a difference of proportions test\n    function differenceOfProportions(p1, n1, p2, n2) {\n      if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n        throw new Error(\"Proportions should be greater than 0 and less than 1\");\n      }\n      var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n      var se = Math.sqrt(pooled * (1 - pooled) * (1 / n1 + 1 / n2));\n      return (p1 - p2) / se;\n    }\n\n    // Difference of Proportions\n    jStat.extend(jStat.fn, {\n      oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n        var z = differenceOfProportions(p1, n1, p2, n2);\n        return jStat.ztest(z, 1);\n      },\n      twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n        var z = differenceOfProportions(p1, n1, p2, n2);\n        return jStat.ztest(z, 2);\n      }\n    });\n  })(jStat, Math);\n  jStat.models = function () {\n    function sub_regress(exog) {\n      var var_count = exog[0].length;\n      var modelList = jStat.arange(var_count).map(function (endog_index) {\n        var exog_index = jStat.arange(var_count).filter(function (i) {\n          return i !== endog_index;\n        });\n        return ols(jStat.col(exog, endog_index).map(function (x) {\n          return x[0];\n        }), jStat.col(exog, exog_index));\n      });\n      return modelList;\n    }\n\n    // do OLS model regress\n    // exog have include const columns ,it will not generate it .In fact, exog is\n    // \"design matrix\" look at\n    //https://en.wikipedia.org/wiki/Design_matrix\n    function ols(endog, exog) {\n      var nobs = endog.length;\n      var df_model = exog[0].length - 1;\n      var df_resid = nobs - df_model - 1;\n      var coef = jStat.lstsq(exog, endog);\n      var predict = jStat.multiply(exog, coef.map(function (x) {\n        return [x];\n      })).map(function (p) {\n        return p[0];\n      });\n      var resid = jStat.subtract(endog, predict);\n      var ybar = jStat.mean(endog);\n      // constant cause problem\n      // var SST = jStat.sum(endog.map(function(y) {\n      //   return Math.pow(y-ybar,2);\n      // }));\n      var SSE = jStat.sum(predict.map(function (f) {\n        return Math.pow(f - ybar, 2);\n      }));\n      var SSR = jStat.sum(endog.map(function (y, i) {\n        return Math.pow(y - predict[i], 2);\n      }));\n      var SST = SSE + SSR;\n      var R2 = SSE / SST;\n      return {\n        exog: exog,\n        endog: endog,\n        nobs: nobs,\n        df_model: df_model,\n        df_resid: df_resid,\n        coef: coef,\n        predict: predict,\n        resid: resid,\n        ybar: ybar,\n        SST: SST,\n        SSE: SSE,\n        SSR: SSR,\n        R2: R2\n      };\n    }\n\n    // H0: b_I=0\n    // H1: b_I!=0\n    function t_test(model) {\n      var subModelList = sub_regress(model.exog);\n      //var sigmaHat=jStat.stdev(model.resid);\n      var sigmaHat = Math.sqrt(model.SSR / model.df_resid);\n      var seBetaHat = subModelList.map(function (mod) {\n        var SST = mod.SST;\n        var R2 = mod.R2;\n        return sigmaHat / Math.sqrt(SST * (1 - R2));\n      });\n      var tStatistic = model.coef.map(function (coef, i) {\n        return (coef - 0) / seBetaHat[i];\n      });\n      var pValue = tStatistic.map(function (t) {\n        var leftppf = jStat.studentt.cdf(t, model.df_resid);\n        return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n      });\n      var c = jStat.studentt.inv(0.975, model.df_resid);\n      var interval95 = model.coef.map(function (coef, i) {\n        var d = c * seBetaHat[i];\n        return [coef - d, coef + d];\n      });\n      return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n      };\n    }\n    function F_test(model) {\n      var F_statistic = model.R2 / model.df_model / ((1 - model.R2) / model.df_resid);\n      var fcdf = function (x, n1, n2) {\n        return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2);\n      };\n      var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n      return {\n        F_statistic: F_statistic,\n        pvalue: pvalue\n      };\n    }\n    function ols_wrap(endog, exog) {\n      var model = ols(endog, exog);\n      var ttest = t_test(model);\n      var ftest = F_test(model);\n      // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n      // Which matches the 'adjusted R^2' provided by R's lm package\n      var adjust_R2 = 1 - (1 - model.R2) * ((model.nobs - 1) / model.df_resid);\n      model.t = ttest;\n      model.f = ftest;\n      model.adjust_R2 = adjust_R2;\n      return model;\n    }\n    return {\n      ols: ols_wrap\n    };\n  }();\n  //To regress, simply build X matrix\n  //(append column of 1's) using\n  //buildxmatrix and build the Y\n  //matrix using buildymatrix\n  //(simply the transpose)\n  //and run regress.\n\n  //Regressions\n\n  jStat.extend({\n    buildxmatrix: function buildxmatrix() {\n      //Parameters will be passed in as such\n      //(array1,array2,array3,...)\n      //as (x1,x2,x3,...)\n      //needs to be (1,x1,x2,x3,...)\n      var matrixRows = new Array(arguments.length);\n      for (var i = 0; i < arguments.length; i++) {\n        var array = [1];\n        matrixRows[i] = array.concat(arguments[i]);\n      }\n      return jStat(matrixRows);\n    },\n    builddxmatrix: function builddxmatrix() {\n      //Paramters will be passed in as such\n      //([array1,array2,...]\n      var matrixRows = new Array(arguments[0].length);\n      for (var i = 0; i < arguments[0].length; i++) {\n        var array = [1];\n        matrixRows[i] = array.concat(arguments[0][i]);\n      }\n      return jStat(matrixRows);\n    },\n    buildjxmatrix: function buildjxmatrix(jMat) {\n      //Builds from jStat Matrix\n      var pass = new Array(jMat.length);\n      for (var i = 0; i < jMat.length; i++) {\n        pass[i] = jMat[i];\n      }\n      return jStat.builddxmatrix(pass);\n    },\n    buildymatrix: function buildymatrix(array) {\n      return jStat(array).transpose();\n    },\n    buildjymatrix: function buildjymatrix(jMat) {\n      return jMat.transpose();\n    },\n    matrixmult: function matrixmult(A, B) {\n      var i, j, k, result, sum;\n      if (A.cols() == B.rows()) {\n        if (B.rows() > 1) {\n          result = [];\n          for (i = 0; i < A.rows(); i++) {\n            result[i] = [];\n            for (j = 0; j < B.cols(); j++) {\n              sum = 0;\n              for (k = 0; k < A.cols(); k++) {\n                sum += A.toArray()[i][k] * B.toArray()[k][j];\n              }\n              result[i][j] = sum;\n            }\n          }\n          return jStat(result);\n        }\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n    },\n    //regress and regresst to be fixed\n\n    regress: function regress(jMatX, jMatY) {\n      //print(\"regressin!\");\n      //print(jMatX.toArray());\n      var innerinv = jStat.xtranspxinv(jMatX);\n      //print(innerinv);\n      var xtransp = jMatX.transpose();\n      var next = jStat.matrixmult(jStat(innerinv), xtransp);\n      return jStat.matrixmult(next, jMatY);\n    },\n    regresst: function regresst(jMatX, jMatY, sides) {\n      var beta = jStat.regress(jMatX, jMatY);\n      var compile = {};\n      compile.anova = {};\n      var jMatYBar = jStat.jMatYBar(jMatX, beta);\n      compile.yBar = jMatYBar;\n      var yAverage = jMatY.mean();\n      compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n      compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n      compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n      compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n      compile.anova.mse = compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n      compile.anova.sst = jStat.sst(jMatY, yAverage);\n      compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n      compile.anova.r2 = 1 - compile.anova.sse / compile.anova.sst;\n      if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n      compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n      compile.anova.pvalue = jStat.anovaftest(compile.anova.fratio, jMatX[0].length - 1, jMatY.length - (jMatX[0].length - 1) - 1);\n      compile.anova.rmse = Math.sqrt(compile.anova.mse);\n      compile.anova.r2adj = 1 - compile.anova.mse / compile.anova.mst;\n      if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n      compile.stats = new Array(jMatX[0].length);\n      var covar = jStat.xtranspxinv(jMatX);\n      var sds, ts, ps;\n      for (var i = 0; i < beta.length; i++) {\n        sds = Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n        ts = Math.abs(beta[i] / sds);\n        ps = jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n        compile.stats[i] = [beta[i], sds, ts, ps];\n      }\n      compile.regress = beta;\n      return compile;\n    },\n    xtranspx: function xtranspx(jMatX) {\n      return jStat.matrixmult(jMatX.transpose(), jMatX);\n    },\n    xtranspxinv: function xtranspxinv(jMatX) {\n      var inner = jStat.matrixmult(jMatX.transpose(), jMatX);\n      var innerinv = jStat.inv(inner);\n      return innerinv;\n    },\n    jMatYBar: function jMatYBar(jMatX, beta) {\n      var yBar = jStat.matrixmult(jMatX, beta);\n      return new jStat(yBar);\n    },\n    residuals: function residuals(jMatY, jMatYBar) {\n      return jStat.matrixsubtract(jMatY, jMatYBar);\n    },\n    ssr: function ssr(jMatYBar, yAverage) {\n      var ssr = 0;\n      for (var i = 0; i < jMatYBar.length; i++) {\n        ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n      }\n      return ssr;\n    },\n    sse: function sse(jMatY, jMatYBar) {\n      var sse = 0;\n      for (var i = 0; i < jMatY.length; i++) {\n        sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n      }\n      return sse;\n    },\n    sst: function sst(jMatY, yAverage) {\n      var sst = 0;\n      for (var i = 0; i < jMatY.length; i++) {\n        sst += Math.pow(jMatY[i] - yAverage, 2);\n      }\n      return sst;\n    },\n    matrixsubtract: function matrixsubtract(A, B) {\n      var ans = new Array(A.length);\n      for (var i = 0; i < A.length; i++) {\n        ans[i] = new Array(A[i].length);\n        for (var j = 0; j < A[i].length; j++) {\n          ans[i][j] = A[i][j] - B[i][j];\n        }\n      }\n      return jStat(ans);\n    }\n  });\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n  return jStat;\n});","map":{"version":3,"names":["window","factory","exports","module","define","amd","jStat","Math","undefined","console","warn","concat","Array","prototype","slice","toString","Object","calcRdx","n","m","val","pow","log","LOG10E","isArray","arg","call","isFunction","isNumber","toVector","arr","apply","_init","arguments","fn","args","map","i","length","seq","toArray","constructor","utils","_random_fn","random","setRandom","TypeError","extend","obj","j","rows","cols","dimensions","row","index","rowa","col","submat","arange","forEach","ind","column","cola","a","diag","nrow","res","antidiag","transpose","objArr","push","func","toAlter","ncol","cumreduce","alter","create","retZero","zeros","retOne","ones","rand","retIdent","identity","symmetric","size","clear","min","max","hival","step","current","cnt","start","end","rl","_slice","list","copy","rcSlice","colSlice","rowSlice","sliceAssign","A","B","nl","ml","diagonal","diagArray","mat","t","jProto","sort","splice","funcs","passfunc","self","results","setTimeout","split","ascNum","b","clip","sum","sumsqrd","sumsqerr","mean","tmp","sumrow","product","prod","low","high","unique","hash","_arr","meansqerr","geomean","median","arrlen","cumsum","cumprod","diff","diffs","arrLen","rank","sorted","ranks","first","indexOf","last","lastIndexOf","mode","count","maxCount","numMaxCount","mode_arr","range","variance","flag","pooledvariance","reduce","samples","deviation","dev","stdev","sqrt","pooledstdev","meandev","abs","meddev","coeffvar","quartiles","round","quantiles","quantilesArray","alphap","betap","sortedArray","quantileVals","p","aleph","k","gamma","floor","percentile","exclusive","realIndex","parseInt","frac","percentileOfScore","score","kind","counter","len","strict","value","histogram","binCnt","binWidth","bins","covariance","arr1","arr2","u","v","arr1Len","sq_dev","corrcoeff","spearmancoeff","stanMoment","mu","sigma","skewSum","skewness","kurtosis","fullbool","tmpthis","callbackFunction","argsToPass","curriedFunction","vector","gammaln","x","cof","ser","xx","y","gammafn","q","fact","xden","xnum","z","yi","PI","sin","Infinity","gammap","lowRegGamma","aln","ap","del","c","d","h","ITMAX","an","NaN","exp","factorialln","factorial","combination","combinationln","permutation","betafn","betaln","betacf","fpmin","qab","qap","qam","m2","aa","gammapinv","a1","EPS","gln","err","pp","lna1","afac","erf","isneg","dd","ty","erfc","erfcinv","ibetainv","b1","lna","lnb","al","w","ibeta","bt","randn","randg","shape","oalph","a2","callee","_a","_b","_c","newthis","data","sample","vals","fnfunc","beta","pdf","alpha","cdf","inv","centralF","df1","df2","f","binomial","x1","x2","cauchy","local","scale","atan","tan","chisquare","dof","exponential","rate","invgamma","kumaraswamy","Error","lognormal","noncentralt","ncp","tol","studentt","min_iterations","flip","prob","normal","lastvalue","std","pareto","SQRT2","dof2","weibull","uniform","betinc","eps","a0","b0","m9","c9","betacdf","s","negbin","r","hypgeom","N","scaledPDF","samplesDone","scaledCDF","factor","poisson","l","sumarr","L","triangular","arcsine","asin","cos","laplaceSign","laplace","tukeyWprob","rr","cc","nleg","ihalf","C1","C2","C3","bb","wlar","wincr1","wincr2","xleg","aleg","qsqz","pr_w","wincr","blb","binc","bub","einsum","cc1","wi","elsum","jj","ac","qexpo","pplus","pminus","rinsum","tukeyQinv","p0","q0","p1","q1","p2","q2","p3","q3","p4","q4","c1","c2","c3","c4","c5","vmax","ps","tukey","nmeans","df","nlegq","ihalfq","eps1","eps2","dhaf","dquar","deigh","dlarg","ulen1","ulen2","ulen3","ulen4","xlegq","alegq","Number","isFinite","f2","f2lf","f21","ff4","ulen","ans","otsum","twa1","t1","wprb","rotsum","maxiter","x0","valx0","valx1","iter","xabs","isUsable","add","subtract","divide","multiply","nrescols","rescols","outer","dot","left","right","norm","nnorm","isNaN","angle","acos","aug","newarr","gauss_jordan","result","det","alen","alend","rowshift","colshift","mrow","mcol","gauss_elimination","maug","pivot","temp","y2","maxrow","triaUpSolve","parts","matrix_mode","triaLowSolve","lu","R","cholesky","T","gauss_jacobi","xv","xk","gauss_seidel","SOR","householder","QR","qr2","lstsq","R_I","I","Aj","cAi","Ij","cIi","qr_solve","array_mode","Q","attrs","Q1","R1","RI","Q2","jacobi","condition","e","ev","maxim","theta","rungekutta","t_j","u_j","order","k1","k2","u_j1","k3","k4","romberg","h1","g","richardson","X","pos","h_min","y1","simpson","hermite","F","dF","dl","lagrange","cubic_spline","sq","gauss_quadrature","PCA","temp1","D","temp2","Y","Bt","C","V","Vt","zscore","ztest","sides","tscore","ttest","anovafscore","expVar","sampMean","sampSampMean","tmpargs","unexpVar","anovaftest","ftest","fscore","anovaftes","qscore","mean1","mean2","n1","n2","sd","qtest","tukeyhsd","arrays","means","normalci","change","tci","significant","pvalue","differenceOfProportions","pooled","se","oneSidedDifferenceOfProportions","twoSidedDifferenceOfProportions","models","sub_regress","exog","var_count","modelList","endog_index","exog_index","filter","ols","endog","nobs","df_model","df_resid","coef","predict","resid","ybar","SSE","SSR","SST","R2","t_test","model","subModelList","sigmaHat","seBetaHat","mod","tStatistic","pValue","leftppf","interval95","F_test","F_statistic","fcdf","ols_wrap","adjust_R2","buildxmatrix","matrixRows","array","builddxmatrix","buildjxmatrix","jMat","pass","buildymatrix","buildjymatrix","matrixmult","regress","jMatX","jMatY","innerinv","xtranspxinv","xtransp","next","regresst","compile","anova","jMatYBar","yBar","yAverage","residuals","ssr","msr","sse","mse","sst","mst","r2","fratio","rmse","r2adj","stats","covar","sds","ts","xtranspx","inner","matrixsubtract"],"sources":["C:/xampp/htdocs/pertcpm/client/node_modules/jStat/dist/jstat.js"],"sourcesContent":["(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n})(this, function () {\nvar jStat = (function(Math, undefined) {\n\nconsole.warn('The npm package jStat is no longer maintained. Instead use jstat (lowercase).');\nconsole.warn('Visit https://www.npmjs.com/package/jstat for more information.');\n\n// For quick reference.\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n// Calculate correction for IEEE error\n// TODO: This calculation can be improved.\nfunction calcRdx(n, m) {\n  var val = n > m ? n : m;\n  return Math.pow(10,\n                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));\n}\n\n\nvar isArray = Array.isArray || function isArray(arg) {\n  return toString.call(arg) === '[object Array]';\n};\n\n\nfunction isFunction(arg) {\n  return toString.call(arg) === '[object Function]';\n}\n\n\nfunction isNumber(arg) {\n  return typeof arg === 'number' && arg === arg;\n}\n\n\n// Converts the jStat matrix to vector.\nfunction toVector(arr) {\n  return concat.apply([], arr);\n}\n\n\n// The one and only jStat constructor.\nfunction jStat() {\n  return new jStat._init(arguments);\n}\n\n\n// TODO: Remove after all references in src files have been removed.\njStat.fn = jStat.prototype;\n\n\n// By separating the initializer from the constructor it's easier to handle\n// always returning a new instance whether \"new\" was used or not.\njStat._init = function _init(args) {\n  // If first argument is an array, must be vector or matrix.\n  if (isArray(args[0])) {\n    // Check if matrix.\n    if (isArray(args[0][0])) {\n      // See if a mapping function was also passed.\n      if (isFunction(args[1]))\n        args[0] = jStat.map(args[0], args[1]);\n      // Iterate over each is faster than this.push.apply(this, args[0].\n      for (var i = 0; i < args[0].length; i++)\n        this[i] = args[0][i];\n      this.length = args[0].length;\n\n    // Otherwise must be a vector.\n    } else {\n      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n      this.length = 1;\n    }\n\n  // If first argument is number, assume creation of sequence.\n  } else if (isNumber(args[0])) {\n    this[0] = jStat.seq.apply(null, args);\n    this.length = 1;\n\n  // Handle case when jStat object is passed to jStat.\n  } else if (args[0] instanceof jStat) {\n    // Duplicate the object and pass it back.\n    return jStat(args[0].toArray());\n\n  // Unexpected argument value, return empty jStat object.\n  // TODO: This is strange behavior. Shouldn't this throw or some such to let\n  // the user know they had bad arguments?\n  } else {\n    this[0] = [];\n    this.length = 1;\n  }\n\n  return this;\n};\njStat._init.prototype = jStat.prototype;\njStat._init.constructor = jStat;\n\n\n// Utility functions.\n// TODO: for internal use only?\njStat.utils = {\n  calcRdx: calcRdx,\n  isArray: isArray,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  toVector: toVector\n};\n\n\njStat._random_fn = Math.random;\njStat.setRandom = function setRandom(fn) {\n  if (typeof fn !== 'function')\n    throw new TypeError('fn is not a function');\n  jStat._random_fn = fn;\n};\n\n\n// Easily extend the jStat object.\n// TODO: is this seriously necessary?\njStat.extend = function extend(obj) {\n  var i, j;\n\n  if (arguments.length === 1) {\n    for (j in obj)\n      jStat[j] = obj[j];\n    return this;\n  }\n\n  for (i = 1; i < arguments.length; i++) {\n    for (j in arguments[i])\n      obj[j] = arguments[i][j];\n  }\n\n  return obj;\n};\n\n\n// Returns the number of rows in the matrix.\njStat.rows = function rows(arr) {\n  return arr.length || 1;\n};\n\n\n// Returns the number of columns in the matrix.\njStat.cols = function cols(arr) {\n  return arr[0].length || 1;\n};\n\n\n// Returns the dimensions of the object { rows: i, cols: j }\njStat.dimensions = function dimensions(arr) {\n  return {\n    rows: jStat.rows(arr),\n    cols: jStat.cols(arr)\n  };\n};\n\n\n// Returns a specified row as a vector or return a sub matrix by pick some rows\njStat.row = function row(arr, index) {\n  if (isArray(index)) {\n    return index.map(function(i) {\n      return jStat.row(arr, i);\n    })\n  }\n  return arr[index];\n};\n\n\n// return row as array\n// rowa([[1,2],[3,4]],0) -> [1,2]\njStat.rowa = function rowa(arr, i) {\n  return jStat.row(arr, i);\n};\n\n\n// Returns the specified column as a vector or return a sub matrix by pick some\n// columns\njStat.col = function col(arr, index) {\n  if (isArray(index)) {\n    var submat = jStat.arange(arr.length).map(function() {\n      return new Array(index.length);\n    });\n    index.forEach(function(ind, i){\n      jStat.arange(arr.length).forEach(function(j) {\n        submat[j][i] = arr[j][ind];\n      });\n    });\n    return submat;\n  }\n  var column = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++)\n    column[i] = [arr[i][index]];\n  return column;\n};\n\n\n// return column as array\n// cola([[1,2],[3,4]],0) -> [1,3]\njStat.cola = function cola(arr, i) {\n  return jStat.col(arr, i).map(function(a){ return a[0] });\n};\n\n\n// Returns the diagonal of the matrix\njStat.diag = function diag(arr) {\n  var nrow = jStat.rows(arr);\n  var res = new Array(nrow);\n  for (var row = 0; row < nrow; row++)\n    res[row] = [arr[row][row]];\n  return res;\n};\n\n\n// Returns the anti-diagonal of the matrix\njStat.antidiag = function antidiag(arr) {\n  var nrow = jStat.rows(arr) - 1;\n  var res = new Array(nrow);\n  for (var i = 0; nrow >= 0; nrow--, i++)\n    res[i] = [arr[i][nrow]];\n  return res;\n};\n\n// Transpose a matrix or array.\njStat.transpose = function transpose(arr) {\n  var obj = [];\n  var objArr, rows, cols, j, i;\n\n  // Make sure arr is in matrix format.\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  rows = arr.length;\n  cols = arr[0].length;\n\n  for (i = 0; i < cols; i++) {\n    objArr = new Array(rows);\n    for (j = 0; j < rows; j++)\n      objArr[j] = arr[j][i];\n    obj.push(objArr);\n  }\n\n  // If obj is vector, return only single array.\n  return obj.length === 1 ? obj[0] : obj;\n};\n\n\n// Map a function to an array or array of arrays.\n// \"toAlter\" is an internal variable.\njStat.map = function map(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    for (col = 0; col < ncol; col++)\n      res[row][col] = func(arr[row][col], row, col);\n  }\n\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Cumulatively combine the elements of an array or array of arrays using a function.\njStat.cumreduce = function cumreduce(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    if (ncol > 0)\n      res[row][0] = arr[row][0];\n    for (col = 1; col < ncol; col++)\n      res[row][col] = func(res[row][col-1], arr[row][col]);\n  }\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Destructively alter an array.\njStat.alter = function alter(arr, func) {\n  return jStat.map(arr, func, true);\n};\n\n\n// Generate a rows x cols matrix according to the supplied function.\njStat.create = function  create(rows, cols, func) {\n  var res = new Array(rows);\n  var i, j;\n\n  if (isFunction(cols)) {\n    func = cols;\n    cols = rows;\n  }\n\n  for (i = 0; i < rows; i++) {\n    res[i] = new Array(cols);\n    for (j = 0; j < cols; j++)\n      res[i][j] = func(i, j);\n  }\n\n  return res;\n};\n\n\nfunction retZero() { return 0; }\n\n\n// Generate a rows x cols matrix of zeros.\njStat.zeros = function zeros(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retZero);\n};\n\n\nfunction retOne() { return 1; }\n\n\n// Generate a rows x cols matrix of ones.\njStat.ones = function ones(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retOne);\n};\n\n\n// Generate a rows x cols matrix of uniformly random numbers.\njStat.rand = function rand(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, jStat._random_fn);\n};\n\n\nfunction retIdent(i, j) { return i === j ? 1 : 0; }\n\n\n// Generate an identity matrix of size row x cols.\njStat.identity = function identity(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retIdent);\n};\n\n\n// Tests whether a matrix is symmetric\njStat.symmetric = function symmetric(arr) {\n  var size = arr.length;\n  var row, col;\n\n  if (arr.length !== arr[0].length)\n    return false;\n\n  for (row = 0; row < size; row++) {\n    for (col = 0; col < size; col++)\n      if (arr[col][row] !== arr[row][col])\n        return false;\n  }\n\n  return true;\n};\n\n\n// Set all values to zero.\njStat.clear = function clear(arr) {\n  return jStat.alter(arr, retZero);\n};\n\n\n// Generate sequence.\njStat.seq = function seq(min, max, length, func) {\n  if (!isFunction(func))\n    func = false;\n\n  var arr = [];\n  var hival = calcRdx(min, max);\n  var step = (max * hival - min * hival) / ((length - 1) * hival);\n  var current = min;\n  var cnt;\n\n  // Current is assigned using a technique to compensate for IEEE error.\n  // TODO: Needs better implementation.\n  for (cnt = 0;\n       current <= max && cnt < length;\n       cnt++, current = (min * hival + step * hival * cnt) / hival) {\n    arr.push((func ? func(current, cnt) : current));\n  }\n\n  return arr;\n};\n\n\n// arange(5) -> [0,1,2,3,4]\n// arange(1,5) -> [1,2,3,4]\n// arange(5,1,-1) -> [5,4,3,2]\njStat.arange = function arange(start, end, step) {\n  var rl = [];\n  var i;\n  step = step || 1;\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  if (start === end || step === 0) {\n    return [];\n  }\n  if (start < end && step < 0) {\n    return [];\n  }\n  if (start > end && step > 0) {\n    return [];\n  }\n  if (step > 0) {\n    for (i = start; i < end; i += step) {\n      rl.push(i);\n    }\n  } else {\n    for (i = start; i > end; i += step) {\n      rl.push(i);\n    }\n  }\n  return rl;\n};\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n// slice(A,1,{start:1}) -> [5,6]\n// as numpy code A[:2,1:]\njStat.slice = (function(){\n  function _slice(list, start, end, step) {\n    // note it's not equal to range.map mode it's a bug\n    var i;\n    var rl = [];\n    var length = list.length;\n    if (start === undefined && end === undefined && step === undefined) {\n      return jStat.copy(list);\n    }\n\n    start = start || 0;\n    end = end || list.length;\n    start = start >= 0 ? start : length + start;\n    end = end >= 0 ? end : length + end;\n    step = step || 1;\n    if (start === end || step === 0) {\n      return [];\n    }\n    if (start < end && step < 0) {\n      return [];\n    }\n    if (start > end && step > 0) {\n      return [];\n    }\n    if (step > 0) {\n      for (i = start; i < end; i += step) {\n        rl.push(list[i]);\n      }\n    } else {\n      for (i = start; i > end;i += step) {\n        rl.push(list[i]);\n      }\n    }\n    return rl;\n  }\n\n  function slice(list, rcSlice) {\n    var colSlice, rowSlice;\n    rcSlice = rcSlice || {};\n    if (isNumber(rcSlice.row)) {\n      if (isNumber(rcSlice.col))\n        return list[rcSlice.row][rcSlice.col];\n      var row = jStat.rowa(list, rcSlice.row);\n      colSlice = rcSlice.col || {};\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    }\n\n    if (isNumber(rcSlice.col)) {\n      var col = jStat.cola(list, rcSlice.col);\n      rowSlice = rcSlice.row || {};\n      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n    }\n\n    rowSlice = rcSlice.row || {};\n    colSlice = rcSlice.col || {};\n    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n    return rows.map(function(row) {\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    });\n  }\n\n  return slice;\n}());\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n// A=[[1,2,3],[4,0,0],[7,0,0]]\njStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n  var nl, ml;\n  if (isNumber(rcSlice.row)) {\n    if (isNumber(rcSlice.col))\n      return A[rcSlice.row][rcSlice.col] = B;\n    rcSlice.col = rcSlice.col || {};\n    rcSlice.col.start = rcSlice.col.start || 0;\n    rcSlice.col.end = rcSlice.col.end || A[0].length;\n    rcSlice.col.step = rcSlice.col.step || 1;\n    nl = jStat.arange(rcSlice.col.start,\n                          Math.min(A.length, rcSlice.col.end),\n                          rcSlice.col.step);\n    var m = rcSlice.row;\n    nl.forEach(function(n, i) {\n      A[m][n] = B[i];\n    });\n    return A;\n  }\n\n  if (isNumber(rcSlice.col)) {\n    rcSlice.row = rcSlice.row || {};\n    rcSlice.row.start = rcSlice.row.start || 0;\n    rcSlice.row.end = rcSlice.row.end || A.length;\n    rcSlice.row.step = rcSlice.row.step || 1;\n    ml = jStat.arange(rcSlice.row.start,\n                          Math.min(A[0].length, rcSlice.row.end),\n                          rcSlice.row.step);\n    var n = rcSlice.col;\n    ml.forEach(function(m, j) {\n      A[m][n] = B[j];\n    });\n    return A;\n  }\n\n  if (B[0].length === undefined) {\n    B = [B];\n  }\n  rcSlice.row.start = rcSlice.row.start || 0;\n  rcSlice.row.end = rcSlice.row.end || A.length;\n  rcSlice.row.step = rcSlice.row.step || 1;\n  rcSlice.col.start = rcSlice.col.start || 0;\n  rcSlice.col.end = rcSlice.col.end || A[0].length;\n  rcSlice.col.step = rcSlice.col.step || 1;\n  ml = jStat.arange(rcSlice.row.start,\n                        Math.min(A.length, rcSlice.row.end),\n                        rcSlice.row.step);\n  nl = jStat.arange(rcSlice.col.start,\n                        Math.min(A[0].length, rcSlice.col.end),\n                        rcSlice.col.step);\n  ml.forEach(function(m, i) {\n    nl.forEach(function(n, j) {\n      A[m][n] = B[i][j];\n    });\n  });\n  return A;\n};\n\n\n// [1,2,3] ->\n// [[1,0,0],[0,2,0],[0,0,3]]\njStat.diagonal = function diagonal(diagArray) {\n  var mat = jStat.zeros(diagArray.length, diagArray.length);\n  diagArray.forEach(function(t, i) {\n    mat[i][i] = t;\n  });\n  return mat;\n};\n\n\n// return copy of A\njStat.copy = function copy(A) {\n  return A.map(function(row) {\n    if (isNumber(row))\n      return row;\n    return row.map(function(t) {\n      return t;\n    });\n  });\n};\n\n\n// TODO: Go over this entire implementation. Seems a tragic waste of resources\n// doing all this work. Instead, and while ugly, use new Function() to generate\n// a custom function for each static method.\n\n// Quick reference.\nvar jProto = jStat.prototype;\n\n// Default length.\njProto.length = 0;\n\n// For internal use only.\n// TODO: Check if they're actually used, and if they are then rename them\n// to _*\njProto.push = Array.prototype.push;\njProto.sort = Array.prototype.sort;\njProto.splice = Array.prototype.splice;\njProto.slice = Array.prototype.slice;\n\n\n// Return a clean array.\njProto.toArray = function toArray() {\n  return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n};\n\n\n// Map a function to a matrix or vector.\njProto.map = function map(func, toAlter) {\n  return jStat(jStat.map(this, func, toAlter));\n};\n\n\n// Cumulatively combine the elements of a matrix or vector using a function.\njProto.cumreduce = function cumreduce(func, toAlter) {\n  return jStat(jStat.cumreduce(this, func, toAlter));\n};\n\n\n// Destructively alter an array.\njProto.alter = function alter(func) {\n  jStat.alter(this, func);\n  return this;\n};\n\n\n// Extend prototype with methods that have no argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(func) {\n      var self = this,\n      results;\n      // Check for callback.\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self));\n        });\n        return this;\n      }\n      results = jStat[passfunc](this);\n      return isArray(results) ? jStat(results) : results;\n    };\n  })(funcs[i]);\n})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n\n// Extend prototype with methods that have one argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(index, func) {\n      var self = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self, index));\n        });\n        return this;\n      }\n      return jStat(jStat[passfunc](this, index));\n    };\n  })(funcs[i]);\n})('row col'.split(' '));\n\n\n// Extend prototype with simple shortcut methods.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('create zeros ones rand identity'.split(' '));\n\n\n// Exposing jStat.\nreturn jStat;\n\n}(Math));\n(function(jStat, Math) {\n\nvar isFunction = jStat.utils.isFunction;\n\n// Ascending functions for sort\nfunction ascNum(a, b) { return a - b; }\n\nfunction clip(arg, min, max) {\n  return Math.max(min, Math.min(arg, max));\n}\n\n\n// sum of an array\njStat.sum = function sum(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n\n// sum squared\njStat.sumsqrd = function sumsqrd(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i] * arr[i];\n  return sum;\n};\n\n\n// sum of squared errors of prediction (SSE)\njStat.sumsqerr = function sumsqerr(arr) {\n  var mean = jStat.mean(arr);\n  var sum = 0;\n  var i = arr.length;\n  var tmp;\n  while (--i >= 0) {\n    tmp = arr[i] - mean;\n    sum += tmp * tmp;\n  }\n  return sum;\n};\n\n// sum of an array in each row\njStat.sumrow = function sumrow(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n// product of an array\njStat.product = function product(arr) {\n  var prod = 1;\n  var i = arr.length;\n  while (--i >= 0)\n    prod *= arr[i];\n  return prod;\n};\n\n\n// minimum value of an array\njStat.min = function min(arr) {\n  var low = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] < low)\n      low = arr[i];\n  return low;\n};\n\n\n// maximum value of an array\njStat.max = function max(arr) {\n  var high = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] > high)\n      high = arr[i];\n  return high;\n};\n\n\n// unique values of an array\njStat.unique = function unique(arr) {\n  var hash = {}, _arr = [];\n  for(var i = 0; i < arr.length; i++) {\n    if (!hash[arr[i]]) {\n      hash[arr[i]] = true;\n      _arr.push(arr[i]);\n    }\n  }\n  return _arr;\n};\n\n\n// mean value of an array\njStat.mean = function mean(arr) {\n  return jStat.sum(arr) / arr.length;\n};\n\n\n// mean squared error (MSE)\njStat.meansqerr = function meansqerr(arr) {\n  return jStat.sumsqerr(arr) / arr.length;\n};\n\n\n// geometric mean of an array\njStat.geomean = function geomean(arr) {\n  return Math.pow(jStat.product(arr), 1 / arr.length);\n};\n\n\n// median of an array\njStat.median = function median(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  // check if array is even or odd, then return the appropriate\n  return !(arrlen & 1)\n    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2\n    : _arr[(arrlen / 2) | 0 ];\n};\n\n\n// cumulative sum of an array\njStat.cumsum = function cumsum(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a + b; });\n};\n\n\n// cumulative product of an array\njStat.cumprod = function cumprod(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a * b; });\n};\n\n\n// successive differences of a sequence\njStat.diff = function diff(arr) {\n  var diffs = [];\n  var arrLen = arr.length;\n  var i;\n  for (i = 1; i < arrLen; i++)\n    diffs.push(arr[i] - arr[i - 1]);\n  return diffs;\n};\n\n\n// ranks of an array\njStat.rank = function (arr) {\n  var arrlen = arr.length;\n  var sorted = arr.slice().sort(ascNum);\n  var ranks = new Array(arrlen);\n  var val;\n  for (var i = 0; i < arrlen; i++) {\n    var first = sorted.indexOf(arr[i]);\n    var last = sorted.lastIndexOf(arr[i]);\n    if (first === last) {\n      val = first;\n    } else {\n      val = (first + last) / 2;\n    }\n    ranks[i] = val + 1;\n  }\n  return ranks;\n};\n\n\n// mode of an array\n// if there are multiple modes of an array, return all of them\n// is this the appropriate way of handling it?\njStat.mode = function mode(arr) {\n  var arrLen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  var count = 1;\n  var maxCount = 0;\n  var numMaxCount = 0;\n  var mode_arr = [];\n  var i;\n\n  for (i = 0; i < arrLen; i++) {\n    if (_arr[i] === _arr[i + 1]) {\n      count++;\n    } else {\n      if (count > maxCount) {\n        mode_arr = [_arr[i]];\n        maxCount = count;\n        numMaxCount = 0;\n      }\n      // are there multiple max counts\n      else if (count === maxCount) {\n        mode_arr.push(_arr[i]);\n        numMaxCount++;\n      }\n      // resetting count for new value in array\n      count = 1;\n    }\n  }\n\n  return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n};\n\n\n// range of an array\njStat.range = function range(arr) {\n  return jStat.max(arr) - jStat.min(arr);\n};\n\n// variance of an array\n// flag = true indicates sample instead of population\njStat.variance = function variance(arr, flag) {\n  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n};\n\n// pooled variance of an array of arrays\njStat.pooledvariance = function pooledvariance(arr) {\n  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);\n  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);\n  return sumsqerr / (count - arr.length);\n};\n\n// deviation of an array\njStat.deviation = function (arr) {\n  var mean = jStat.mean(arr);\n  var arrlen = arr.length;\n  var dev = new Array(arrlen);\n  for (var i = 0; i < arrlen; i++) {\n    dev[i] = arr[i] - mean;\n  }\n  return dev;\n};\n\n// standard deviation of an array\n// flag = true indicates sample instead of population\njStat.stdev = function stdev(arr, flag) {\n  return Math.sqrt(jStat.variance(arr, flag));\n};\n\n// pooled standard deviation of an array of arrays\njStat.pooledstdev = function pooledstdev(arr) {\n  return Math.sqrt(jStat.pooledvariance(arr));\n};\n\n// mean deviation (mean absolute deviation) of an array\njStat.meandev = function meandev(arr) {\n  var mean = jStat.mean(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - mean));\n  }\n  return jStat.mean(a);\n};\n\n\n// median deviation (median absolute deviation) of an array\njStat.meddev = function meddev(arr) {\n  var median = jStat.median(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - median));\n  }\n  return jStat.median(a);\n};\n\n\n// coefficient of variation\njStat.coeffvar = function coeffvar(arr) {\n  return jStat.stdev(arr) / jStat.mean(arr);\n};\n\n\n// quartiles of an array\njStat.quartiles = function quartiles(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  return [\n    _arr[ Math.round((arrlen) / 4) - 1 ],\n    _arr[ Math.round((arrlen) / 2) - 1 ],\n    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]\n  ];\n};\n\n\n// Arbitary quantiles of an array. Direct port of the scipy.stats\n// implementation by Pierre GF Gerard-Marchant.\njStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n  var sortedArray = arr.slice().sort(ascNum);\n  var quantileVals = [quantilesArray.length];\n  var n = arr.length;\n  var i, p, m, aleph, k, gamma;\n\n  if (typeof alphap === 'undefined')\n    alphap = 3 / 8;\n  if (typeof betap === 'undefined')\n    betap = 3 / 8;\n\n  for (i = 0; i < quantilesArray.length; i++) {\n    p = quantilesArray[i];\n    m = alphap + p * (1 - alphap - betap);\n    aleph = n * p + m;\n    k = Math.floor(clip(aleph, 1, n - 1));\n    gamma = clip(aleph - k, 0, 1);\n    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n  }\n\n  return quantileVals;\n};\n\n// Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n// Passing true for the exclusive parameter excludes both endpoints of the range.\njStat.percentile = function percentile(arr, k, exclusive) {\n  var _arr = arr.slice().sort(ascNum);\n  var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n  var index = parseInt(realIndex);\n  var frac = realIndex - index;\n  if (index + 1 < _arr.length) {\n    return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n  } else {\n    return _arr[index - 1];\n  }\n}\n\n// The percentile rank of score in a given array. Returns the percentage\n// of all values in the input array that are less than (kind='strict') or\n// less or equal than (kind='weak') score. Default is weak.\njStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n  var counter = 0;\n  var len = arr.length;\n  var strict = false;\n  var value, i;\n\n  if (kind === 'strict')\n    strict = true;\n\n  for (i = 0; i < len; i++) {\n    value = arr[i];\n    if ((strict && value < score) ||\n        (!strict && value <= score)) {\n      counter++;\n    }\n  }\n\n  return counter / len;\n};\n\n\n// Histogram (bin count) data\njStat.histogram = function histogram(arr, binCnt) {\n  binCnt = binCnt || 4;\n  var first = jStat.min(arr);\n  var binWidth = (jStat.max(arr) - first) / binCnt;\n  var len = arr.length;\n  var bins = [];\n  var i;\n\n  for (i = 0; i < binCnt; i++)\n    bins[i] = 0;\n  for (i = 0; i < len; i++)\n    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;\n\n  return bins;\n};\n\n\n// covariance of two arrays\njStat.covariance = function covariance(arr1, arr2) {\n  var u = jStat.mean(arr1);\n  var v = jStat.mean(arr2);\n  var arr1Len = arr1.length;\n  var sq_dev = new Array(arr1Len);\n  var i;\n\n  for (i = 0; i < arr1Len; i++)\n    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n  return jStat.sum(sq_dev) / (arr1Len - 1);\n};\n\n\n// (pearson's) population correlation coefficient, rho\njStat.corrcoeff = function corrcoeff(arr1, arr2) {\n  return jStat.covariance(arr1, arr2) /\n      jStat.stdev(arr1, 1) /\n      jStat.stdev(arr2, 1);\n};\n\n  // (spearman's) rank correlation coefficient, sp\njStat.spearmancoeff =  function (arr1, arr2) {\n  arr1 = jStat.rank(arr1);\n  arr2 = jStat.rank(arr2);\n  //return pearson's correlation of the ranks:\n  return jStat.corrcoeff(arr1, arr2);\n}\n\n\n// statistical standardized moments (general form of skew/kurt)\njStat.stanMoment = function stanMoment(arr, n) {\n  var mu = jStat.mean(arr);\n  var sigma = jStat.stdev(arr);\n  var len = arr.length;\n  var skewSum = 0;\n\n  for (var i = 0; i < len; i++)\n    skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n  return skewSum / arr.length;\n};\n\n// (pearson's) moment coefficient of skewness\njStat.skewness = function skewness(arr) {\n  return jStat.stanMoment(arr, 3);\n};\n\n// (pearson's) (excess) kurtosis\njStat.kurtosis = function kurtosis(arr) {\n  return jStat.stanMoment(arr, 4) - 3;\n};\n\n\nvar jProto = jStat.prototype;\n\n\n// Extend jProto with method for calculating cumulative sums and products.\n// This differs from the similar extension below as cumsum and cumprod should\n// not be run again in the case fullbool === true.\n// If a matrix is passed, automatically assume operation should be done on the\n// columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('cumsum cumprod').split(' '));\n\n\n// Extend jProto with methods which don't require arguments and work on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        if (passfunc !== 'sumrow')\n          tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return fullbool === true\n            ? jStat[passfunc](jStat.utils.toVector(arr))\n            : arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +\n    'geomean median diff rank mode range variance deviation stdev meandev ' +\n    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n\n// Extend jProto with functions that take arguments. Operations on matrices are\n// done on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callbackFunction;\n\n      // If the last argument is a function, we assume it's a callback; we\n      // strip the callback out and call the function again.\n      if (isFunction(args[args.length - 1])) {\n        callbackFunction = args[args.length - 1];\n        var argsToPass = args.slice(0, args.length - 1);\n\n        setTimeout(function() {\n          callbackFunction.call(tmpthis,\n                                jProto[passfunc].apply(tmpthis, argsToPass));\n        });\n        return this;\n\n      // Otherwise we curry the function args and call normally.\n      } else {\n        callbackFunction = undefined;\n        var curriedFunction = function curriedFunction(vector) {\n          return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n        }\n      }\n\n      // If this is a matrix, run column-by-column.\n      if (this.length > 1) {\n        tmpthis = tmpthis.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = curriedFunction(tmpthis[i]);\n        return arr;\n      }\n\n      // Otherwise run on the vector.\n      return curriedFunction(this[0]);\n    };\n  })(funcs[i]);\n})('quantiles percentileOfScore'.split(' '));\n\n}(jStat, Math));\n// Special functions //\n(function(jStat, Math) {\n\n// Log-gamma function\njStat.gammaln = function gammaln(x) {\n  var j = 0;\n  var cof = [\n    76.18009172947146, -86.50532032941677, 24.01409824083091,\n    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n  ];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++)\n    ser += cof[j] / ++y;\n  return Math.log(2.5066282746310005 * ser / xx) - tmp;\n};\n\n\n// gamma of x\njStat.gammafn = function gammafn(x) {\n  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n           629.3311553128184, 866.9662027904133, -31451.272968848367,\n           -36144.413418691176, 66456.14382024054\n  ];\n  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n           -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n           -134659.9598649693, -115132.2596755535];\n  var fact = false;\n  var n = 0;\n  var xden = 0;\n  var xnum = 0;\n  var y = x;\n  var i, z, yi, res;\n  if (y <= 0) {\n    res = y % 1 + 3.6e-16;\n    if (res) {\n      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n      y = 1 - y;\n    } else {\n      return Infinity;\n    }\n  }\n  yi = y;\n  if (y < 1) {\n    z = y++;\n  } else {\n    z = (y -= n = (y | 0) - 1) - 1;\n  }\n  for (i = 0; i < 8; ++i) {\n    xnum = (xnum + p[i]) * z;\n    xden = xden * z + q[i];\n  }\n  res = xnum / xden + 1;\n  if (yi < y) {\n    res /= yi;\n  } else if (yi > y) {\n    for (i = 0; i < n; ++i) {\n      res *= y;\n      y++;\n    }\n  }\n  if (fact) {\n    res = fact / res;\n  }\n  return res;\n};\n\n\n// lower incomplete gamma function, which is usually typeset with a\n// lower-case greek gamma as the function symbol\njStat.gammap = function gammap(a, x) {\n  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n};\n\n\n// The lower regularized incomplete gamma function, usually written P(a,x)\njStat.lowRegGamma = function lowRegGamma(a, x) {\n  var aln = jStat.gammaln(a);\n  var ap = a;\n  var sum = 1 / a;\n  var del = sum;\n  var b = x + 1 - a;\n  var c = 1 / 1.0e-30;\n  var d = 1 / b;\n  var h = d;\n  var i = 1;\n  // calculate maximum number of itterations required for a\n  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n  var an;\n\n  if (x < 0 || a <= 0) {\n    return NaN;\n  } else if (x < a + 1) {\n    for (; i <= ITMAX; i++) {\n      sum += del *= x / ++ap;\n    }\n    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n  }\n\n  for (; i <= ITMAX; i++) {\n    an = -i * (i - a);\n    b += 2;\n    d = an * d + b;\n    c = b + an / c;\n    d = 1 / d;\n    h *= d * c;\n  }\n\n  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n};\n\n// natural log factorial of n\njStat.factorialln = function factorialln(n) {\n  return n < 0 ? NaN : jStat.gammaln(n + 1);\n};\n\n// factorial of n\njStat.factorial = function factorial(n) {\n  return n < 0 ? NaN : jStat.gammafn(n + 1);\n};\n\n// combinations of n, m\njStat.combination = function combination(n, m) {\n  // make sure n or m don't exceed the upper limit of usable values\n  return (n > 170 || m > 170)\n      ? Math.exp(jStat.combinationln(n, m))\n      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);\n};\n\n\njStat.combinationln = function combinationln(n, m){\n  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n};\n\n\n// permutations of n, m\njStat.permutation = function permutation(n, m) {\n  return jStat.factorial(n) / jStat.factorial(n - m);\n};\n\n\n// beta function\njStat.betafn = function betafn(x, y) {\n  // ensure arguments are positive\n  if (x <= 0 || y <= 0)\n    return undefined;\n  // make sure x + y doesn't exceed the upper limit of usable values\n  return (x + y > 170)\n      ? Math.exp(jStat.betaln(x, y))\n      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n};\n\n\n// natural logarithm of beta function\njStat.betaln = function betaln(x, y) {\n  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n};\n\n\n// Evaluates the continued fraction for incomplete beta function by modified\n// Lentz's method.\njStat.betacf = function betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q's will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin)\n    d = fpmin;\n  d = 1 / d;\n  h = d;\n\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7)\n      break;\n  }\n\n  return h;\n};\n\n\n// Returns the inverse of the lower regularized inomplete gamma function\njStat.gammapinv = function gammapinv(p, a) {\n  var j = 0;\n  var a1 = a - 1;\n  var EPS = 1e-8;\n  var gln = jStat.gammaln(a);\n  var x, err, t, u, pp, lna1, afac;\n\n  if (p >= 1)\n    return Math.max(100, a + 100 * Math.sqrt(a));\n  if (p <= 0)\n    return 0;\n  if (a > 1) {\n    lna1 = Math.log(a1);\n    afac = Math.exp(a1 * (lna1 - 1) - gln);\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    x = Math.max(1e-3,\n                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n  } else {\n    t = 1 - a * (0.253 + a * 0.12);\n    if (p < t)\n      x = Math.pow(p / t, 1 / a);\n    else\n      x = 1 - Math.log(1 - (p - t) / (1 - t));\n  }\n\n  for(; j < 12; j++) {\n    if (x <= 0)\n      return 0;\n    err = jStat.lowRegGamma(a, x) - p;\n    if (a > 1)\n      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n    else\n      t = Math.exp(-x + a1 * Math.log(x) - gln);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (Math.abs(t) < EPS * x)\n      break;\n  }\n\n  return x;\n};\n\n\n// Returns the error function erf(x)\njStat.erf = function erf(x) {\n  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n             -6.886027e-12, 8.94487e-13, 3.13092e-13,\n             -1.12708e-13, 3.81e-16, 7.106e-15,\n             -1.523e-15, -9.4e-17, 1.21e-16,\n             -2.8e-17];\n  var j = cof.length - 1;\n  var isneg = false;\n  var d = 0;\n  var dd = 0;\n  var t, ty, tmp, res;\n\n  if (x < 0) {\n    x = -x;\n    isneg = true;\n  }\n\n  t = 2 / (2 + x);\n  ty = 4 * t - 2;\n\n  for(; j > 0; j--) {\n    tmp = d;\n    d = ty * d - dd + cof[j];\n    dd = tmp;\n  }\n\n  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n  return isneg ? res - 1 : 1 - res;\n};\n\n\n// Returns the complmentary error function erfc(x)\njStat.erfc = function erfc(x) {\n  return 1 - jStat.erf(x);\n};\n\n\n// Returns the inverse of the complementary error function\njStat.erfcinv = function erfcinv(p) {\n  var j = 0;\n  var x, err, t, pp;\n  if (p >= 2)\n    return -100;\n  if (p <= 0)\n    return 100;\n  pp = (p < 1) ? p : 2 - p;\n  t = Math.sqrt(-2 * Math.log(pp / 2));\n  x = -0.70711 * ((2.30753 + t * 0.27061) /\n                  (1 + t * (0.99229 + t * 0.04481)) - t);\n  for (; j < 2; j++) {\n    err = jStat.erfc(x) - pp;\n    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n  }\n  return (p < 1) ? x : -x;\n};\n\n\n// Returns the inverse of the incomplete beta function\njStat.ibetainv = function ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0)\n    return 0;\n  if (p >= 1)\n    return 1;\n  if (a >= 1 && b >= 1) {\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));\n    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n        (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w)\n      x = Math.pow(a * w * p, 1 / a);\n    else\n      x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n  for(; j < 10; j++) {\n    if (x === 0 || x === 1)\n      return x;\n    err = jStat.ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (x >= 1)\n      x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0)\n      break;\n  }\n  return x;\n};\n\n\n// Returns the incomplete beta function I_x(a,b)\njStat.ibeta = function ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = (x === 0 || x === 1) ?  0 :\n    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -\n             jStat.gammaln(b) + a * Math.log(x) + b *\n             Math.log(1 - x));\n  if (x < 0 || x > 1)\n    return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * jStat.betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n};\n\n\n// Returns a normal deviate (mu=0, sigma=1).\n// If n and m are specified it returns a object of normal deviates.\njStat.randn = function randn(n, m) {\n  var u, v, x, y, q;\n  if (!m)\n    m = n;\n  if (n)\n    return jStat.create(n, m, function() { return jStat.randn(); });\n  do {\n    u = jStat._random_fn();\n    v = 1.7156 * (jStat._random_fn() - 0.5);\n    x = u - 0.449871;\n    y = Math.abs(v) + 0.386595;\n    q = x * x + y * (0.19600 * y - 0.25472 * x);\n  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n  return v / u;\n};\n\n\n// Returns a gamma deviate by the method of Marsaglia and Tsang.\njStat.randg = function randg(shape, n, m) {\n  var oalph = shape;\n  var a1, a2, u, v, x, mat;\n  if (!m)\n    m = n;\n  if (!shape)\n    shape = 1;\n  if (n) {\n    mat = jStat.zeros(n,m);\n    mat.alter(function() { return jStat.randg(shape); });\n    return mat;\n  }\n  if (shape < 1)\n    shape += 1;\n  a1 = shape - 1 / 3;\n  a2 = 1 / Math.sqrt(9 * a1);\n  do {\n    do {\n      x = jStat.randn();\n      v = 1 + a2 * x;\n    } while(v <= 0);\n    v = v * v * v;\n    u = jStat._random_fn();\n  } while(u > 1 - 0.331 * Math.pow(x, 4) &&\n          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));\n  // alpha > 1\n  if (shape == oalph)\n    return a1 * v;\n  // alpha < 1\n  do {\n    u = jStat._random_fn();\n  } while(u === 0);\n  return Math.pow(u, 1 / oalph) * a1 * v;\n};\n\n\n// making use of static methods on the instance\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(\n          jStat.map(this, function(value) { return jStat[passfunc](value); }));\n    }\n  })(funcs[i]);\n})('gammaln gammafn factorial factorialln'.split(' '));\n\n\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('randn'.split(' '));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\n// generate all distribution instance methods\n(function(list) {\n  for (var i = 0; i < list.length; i++) (function(func) {\n    // distribution instance method\n    jStat[func] = function(a, b, c) {\n      if (!(this instanceof arguments.callee))\n        return new arguments.callee(a, b, c);\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      return this;\n    };\n    // distribution method to be used on a jStat instance\n    jStat.fn[func] = function(a, b, c) {\n      var newthis = jStat[func](a, b, c);\n      newthis.data = this;\n      return newthis;\n    };\n    // sample instance method\n    jStat[func].prototype.sample = function(arr) {\n      var a = this._a;\n      var b = this._b;\n      var c = this._c;\n      if (arr)\n        return jStat.alter(arr, function() {\n          return jStat[func].sample(a, b, c);\n        });\n      else\n        return jStat[func].sample(a, b, c);\n    };\n    // generate the pdf, cdf and inv instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function(x) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (!x && x !== 0)\n            x = this.data;\n          if (typeof x !== 'number') {\n            return jStat.fn.map.call(x, function(x) {\n              return jStat[func][fnfunc](x, a, b, c);\n            });\n          }\n          return jStat[func][fnfunc](x, a, b, c);\n        };\n      })(vals[i]);\n    })('pdf cdf inv'.split(' '));\n    // generate the mean, median, mode and variance instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function() {\n          return jStat[func][fnfunc](this._a, this._b, this._c);\n        };\n      })(vals[i]);\n    })('mean median mode variance'.split(' '));\n  })(list[i]);\n})((\n  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +\n  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +\n  'binomial negbin hypgeom poisson triangular tukey arcsine'\n).split(' '));\n\n\n\n// extend beta function with static methods\njStat.extend(jStat.beta, {\n  pdf: function pdf(x, alpha, beta) {\n    // PDF is zero outside the support\n    if (x > 1 || x < 0)\n      return 0;\n    // PDF is one for the uniform case\n    if (alpha == 1 && beta == 1)\n      return 1;\n\n    if (alpha < 512 && beta < 512) {\n      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n          jStat.betafn(alpha, beta);\n    } else {\n      return Math.exp((alpha - 1) * Math.log(x) +\n                      (beta - 1) * Math.log(1 - x) -\n                      jStat.betaln(alpha, beta));\n    }\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n  },\n\n  inv: function inv(x, alpha, beta) {\n    return jStat.ibetainv(x, alpha, beta);\n  },\n\n  mean: function mean(alpha, beta) {\n    return alpha / (alpha + beta);\n  },\n\n  median: function median(alpha, beta) {\n    return jStat.ibetainv(0.5, alpha, beta);\n  },\n\n  mode: function mode(alpha, beta) {\n    return (alpha - 1 ) / ( alpha + beta - 2);\n  },\n\n  // return a random sample\n  sample: function sample(alpha, beta) {\n    var u = jStat.randg(alpha);\n    return u / (u + jStat.randg(beta));\n  },\n\n  variance: function variance(alpha, beta) {\n    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n  }\n});\n\n// extend F function with static methods\njStat.extend(jStat.centralF, {\n  // This implementation of the pdf function avoids float overflow\n  // See the way that R calculates this value:\n  // https://svn.r-project.org/R/trunk/src/nmath/df.c\n  pdf: function pdf(x, df1, df2) {\n    var p, q, f;\n\n    if (x < 0)\n      return 0;\n\n    if (df1 <= 2) {\n      if (x === 0 && df1 < 2) {\n        return Infinity;\n      }\n      if (x === 0 && df1 === 2) {\n        return 1;\n      }\n      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *\n              Math.pow(df1 / df2, df1 / 2) *\n              Math.pow(x, (df1/2) - 1) *\n              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n    }\n\n    p = (df1 * x) / (df2 + x * df1);\n    q = df2 / (df2 + x * df1);\n    f = df1 * q / 2.0;\n    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n  },\n\n  cdf: function cdf(x, df1, df2) {\n    if (x < 0)\n      return 0;\n    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n  },\n\n  inv: function inv(x, df1, df2) {\n    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n  },\n\n  mean: function mean(df1, df2) {\n    return (df2 > 2) ? df2 / (df2 - 2) : undefined;\n  },\n\n  mode: function mode(df1, df2) {\n    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;\n  },\n\n  // return a random sample\n  sample: function sample(df1, df2) {\n    var x1 = jStat.randg(df1 / 2) * 2;\n    var x2 = jStat.randg(df2 / 2) * 2;\n    return (x1 / df1) / (x2 / df2);\n  },\n\n  variance: function variance(df1, df2) {\n    if (df2 <= 4)\n      return undefined;\n    return 2 * df2 * df2 * (df1 + df2 - 2) /\n        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n  }\n});\n\n\n// extend cauchy function with static methods\njStat.extend(jStat.cauchy, {\n  pdf: function pdf(x, local, scale) {\n    if (scale < 0) { return 0; }\n\n    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;\n  },\n\n  cdf: function cdf(x, local, scale) {\n    return Math.atan((x - local) / scale) / Math.PI + 0.5;\n  },\n\n  inv: function(p, local, scale) {\n    return local + scale * Math.tan(Math.PI * (p - 0.5));\n  },\n\n  median: function median(local/*, scale*/) {\n    return local;\n  },\n\n  mode: function mode(local/*, scale*/) {\n    return local;\n  },\n\n  sample: function sample(local, scale) {\n    return jStat.randn() *\n        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n  }\n});\n\n\n\n// extend chisquare function with static methods\njStat.extend(jStat.chisquare, {\n  pdf: function pdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && dof === 2) ? 0.5 :\n        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                 Math.log(2) - jStat.gammaln(dof / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(dof / 2, x / 2);\n  },\n\n  inv: function(p, dof) {\n    return 2 * jStat.gammapinv(p, 0.5 * dof);\n  },\n\n  mean : function(dof) {\n    return dof;\n  },\n\n  // TODO: this is an approximation (is there a better way?)\n  median: function median(dof) {\n    return dof * Math.pow(1 - (2 / (9 * dof)), 3);\n  },\n\n  mode: function mode(dof) {\n    return (dof - 2 > 0) ? dof - 2 : 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randg(dof / 2) * 2;\n  },\n\n  variance: function variance(dof) {\n    return 2 * dof;\n  }\n});\n\n\n\n// extend exponential function with static methods\njStat.extend(jStat.exponential, {\n  pdf: function pdf(x, rate) {\n    return x < 0 ? 0 : rate * Math.exp(-rate * x);\n  },\n\n  cdf: function cdf(x, rate) {\n    return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n  },\n\n  inv: function(p, rate) {\n    return -Math.log(1 - p) / rate;\n  },\n\n  mean : function(rate) {\n    return 1 / rate;\n  },\n\n  median: function (rate) {\n    return (1 / rate) * Math.log(2);\n  },\n\n  mode: function mode(/*rate*/) {\n    return 0;\n  },\n\n  sample: function sample(rate) {\n    return -1 / rate * Math.log(jStat._random_fn());\n  },\n\n  variance : function(rate) {\n    return Math.pow(rate, -2);\n  }\n});\n\n\n\n// extend gamma function with static methods\njStat.extend(jStat.gamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                    jStat.gammaln(shape) - shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(shape, x / scale);\n  },\n\n  inv: function(p, shape, scale) {\n    return jStat.gammapinv(p, shape) * scale;\n  },\n\n  mean : function(shape, scale) {\n    return shape * scale;\n  },\n\n  mode: function mode(shape, scale) {\n    if(shape > 1) return (shape - 1) * scale;\n    return undefined;\n  },\n\n  sample: function sample(shape, scale) {\n    return jStat.randg(shape) * scale;\n  },\n\n  variance: function variance(shape, scale) {\n    return shape * scale * scale;\n  }\n});\n\n// extend inverse gamma function with static methods\njStat.extend(jStat.invgamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -\n                    jStat.gammaln(shape) + shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return 1 - jStat.lowRegGamma(shape, scale / x);\n  },\n\n  inv: function(p, shape, scale) {\n    return scale / jStat.gammapinv(1 - p, shape);\n  },\n\n  mean : function(shape, scale) {\n    return (shape > 1) ? scale / (shape - 1) : undefined;\n  },\n\n  mode: function mode(shape, scale) {\n    return scale / (shape + 1);\n  },\n\n  sample: function sample(shape, scale) {\n    return scale / jStat.randg(shape);\n  },\n\n  variance: function variance(shape, scale) {\n    if (shape <= 2)\n      return undefined;\n    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n  }\n});\n\n\n// extend kumaraswamy function with static methods\njStat.extend(jStat.kumaraswamy, {\n  pdf: function pdf(x, alpha, beta) {\n    if (x === 0 && alpha === 1)\n      return beta;\n    else if (x === 1 && beta === 1)\n      return alpha;\n    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *\n                    Math.log(x) + (beta - 1) *\n                    Math.log(1 - Math.pow(x, alpha)));\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    if (x < 0)\n      return 0;\n    else if (x > 1)\n      return 1;\n    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));\n  },\n\n  inv: function inv(p, alpha, beta) {\n    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n  },\n\n  mean : function(alpha, beta) {\n    return (beta * jStat.gammafn(1 + 1 / alpha) *\n            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));\n  },\n\n  median: function median(alpha, beta) {\n    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n  },\n\n  mode: function mode(alpha, beta) {\n    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n      return undefined;\n    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n  },\n\n  variance: function variance(/*alpha, beta*/) {\n    throw new Error('variance not yet implemented');\n    // TODO: complete this\n  }\n});\n\n\n\n// extend lognormal function with static methods\njStat.extend(jStat.lognormal, {\n  pdf: function pdf(x, mu, sigma) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n                    (2 * sigma * sigma));\n  },\n\n  cdf: function cdf(x, mu, sigma) {\n    if (x < 0)\n      return 0;\n    return 0.5 +\n        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n  },\n\n  inv: function(p, mu, sigma) {\n    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n  },\n\n  mean: function mean(mu, sigma) {\n    return Math.exp(mu + sigma * sigma / 2);\n  },\n\n  median: function median(mu/*, sigma*/) {\n    return Math.exp(mu);\n  },\n\n  mode: function mode(mu, sigma) {\n    return Math.exp(mu - sigma * sigma);\n  },\n\n  sample: function sample(mu, sigma) {\n    return Math.exp(jStat.randn() * sigma + mu);\n  },\n\n  variance: function variance(mu, sigma) {\n    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n  }\n});\n\n\n\n// extend noncentralt function with static methods\njStat.extend(jStat.noncentralt, {\n  pdf: function pdf(x, dof, ncp) {\n    var tol = 1e-14;\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.pdf(x, dof)\n\n    if (Math.abs(x) < tol) {  // different formula for x == 0\n      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -\n                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n    }\n\n    // formula for x != 0\n    return dof / x *\n        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -\n         jStat.noncentralt.cdf(x, dof, ncp));\n  },\n\n  cdf: function cdf(x, dof, ncp) {\n    var tol = 1e-14;\n    var min_iterations = 200;\n\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.cdf(x, dof);\n\n    // turn negative x into positive and flip result afterwards\n    var flip = false;\n    if (x < 0) {\n      flip = true;\n      ncp = -ncp;\n    }\n\n    var prob = jStat.normal.cdf(-ncp, 0, 1);\n    var value = tol + 1;\n    // use value at last two steps to determine convergence\n    var lastvalue = value;\n    var y = x * x / (x * x + dof);\n    var j = 0;\n    var p = Math.exp(-ncp * ncp / 2);\n    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -\n                     jStat.gammaln(3 / 2)) * ncp;\n    while (j < min_iterations || lastvalue > tol || value > tol) {\n      lastvalue = value;\n      if (j > 0) {\n        p *= (ncp * ncp) / (2 * j);\n        q *= (ncp * ncp) / (2 * (j + 1 / 2));\n      }\n      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +\n          q * jStat.beta.cdf(y, j+1, dof/2);\n      prob += 0.5 * value;\n      j++;\n    }\n\n    return flip ? (1 - prob) : prob;\n  }\n});\n\n\n// extend normal function with static methods\njStat.extend(jStat.normal, {\n  pdf: function pdf(x, mean, std) {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n  },\n\n  cdf: function cdf(x, mean, std) {\n    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n  },\n\n  inv: function(p, mean, std) {\n    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n  },\n\n  mean : function(mean/*, std*/) {\n    return mean;\n  },\n\n  median: function median(mean/*, std*/) {\n    return mean;\n  },\n\n  mode: function (mean/*, std*/) {\n    return mean;\n  },\n\n  sample: function sample(mean, std) {\n    return jStat.randn() * std + mean;\n  },\n\n  variance : function(mean, std) {\n    return std * std;\n  }\n});\n\n\n\n// extend pareto function with static methods\njStat.extend(jStat.pareto, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return 1 - Math.pow(scale / x, shape);\n  },\n\n  inv: function inv(p, scale, shape) {\n    return scale / Math.pow(1 - p, 1 / shape);\n  },\n\n  mean: function mean(scale, shape) {\n    if (shape <= 1)\n      return undefined;\n    return (shape * Math.pow(scale, shape)) / (shape - 1);\n  },\n\n  median: function median(scale, shape) {\n    return scale * (shape * Math.SQRT2);\n  },\n\n  mode: function mode(scale/*, shape*/) {\n    return scale;\n  },\n\n  variance : function(scale, shape) {\n    if (shape <= 2)\n      return undefined;\n    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));\n  }\n});\n\n\n\n// extend studentt function with static methods\njStat.extend(jStat.studentt, {\n  pdf: function pdf(x, dof) {\n    dof = dof > 1e100 ? 1e100 : dof;\n    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *\n        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    var dof2 = dof / 2;\n    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /\n                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n  },\n\n  inv: function(p, dof) {\n    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt(dof * (1 - x) / x);\n    return (p > 0.5) ? x : -x;\n  },\n\n  mean: function mean(dof) {\n    return (dof > 1) ? 0 : undefined;\n  },\n\n  median: function median(/*dof*/) {\n    return 0;\n  },\n\n  mode: function mode(/*dof*/) {\n    return 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n  },\n\n  variance: function variance(dof) {\n    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;\n  }\n});\n\n\n\n// extend weibull function with static methods\njStat.extend(jStat.weibull, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < 0 || scale < 0 || shape < 0)\n      return 0;\n    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n        Math.exp(-(Math.pow((x / scale), shape)));\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n  },\n\n  inv: function(p, scale, shape) {\n    return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n  },\n\n  mean : function(scale, shape) {\n    return scale * jStat.gammafn(1 + 1 / shape);\n  },\n\n  median: function median(scale, shape) {\n    return scale * Math.pow(Math.log(2), 1 / shape);\n  },\n\n  mode: function mode(scale, shape) {\n    if (shape <= 1)\n      return 0;\n    return scale * Math.pow((shape - 1) / shape, 1 / shape);\n  },\n\n  sample: function sample(scale, shape) {\n    return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n  },\n\n  variance: function variance(scale, shape) {\n    return scale * scale * jStat.gammafn(1 + 2 / shape) -\n        Math.pow(jStat.weibull.mean(scale, shape), 2);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.uniform, {\n  pdf: function pdf(x, a, b) {\n    return (x < a || x > b) ? 0 : 1 / (b - a);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (x - a) / (b - a);\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (p * (b - a));\n  },\n\n  mean: function mean(a, b) {\n    return 0.5 * (a + b);\n  },\n\n  median: function median(a, b) {\n    return jStat.mean(a, b);\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n  },\n\n  variance: function variance(a, b) {\n    return Math.pow(b - a, 2) / 12;\n  }\n});\n\n\n// Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\nfunction betinc(x, a, b, eps) {\n  var a0 = 0;\n  var b0 = 1;\n  var a1 = 1;\n  var b1 = 1;\n  var m9 = 0;\n  var a2 = 0;\n  var c9;\n\n  while (Math.abs((a1 - a2) / a1) > eps) {\n    a2 = a1;\n    c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n    a0 = a1 + c9 * a0;\n    b0 = b1 + c9 * b0;\n    m9 = m9 + 1;\n    c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n    a1 = a0 + c9 * a1;\n    b1 = b0 + c9 * b1;\n    a0 = a0 / b1;\n    b0 = b0 / b1;\n    a1 = a1 / b1;\n    b1 = 1;\n  }\n\n  return a1 / a;\n}\n\n\n// extend uniform function with static methods\njStat.extend(jStat.binomial, {\n  pdf: function pdf(k, n, p) {\n    return (p === 0 || p === 1) ?\n      ((n * p) === k ? 1 : 0) :\n      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n  },\n\n  cdf: function cdf(x, n, p) {\n    var betacdf;\n    var eps = 1e-10;\n\n    if (x < 0)\n      return 0;\n    if (x >= n)\n      return 1;\n    if (p < 0 || p > 1 || n <= 0)\n      return NaN;\n\n    x = Math.floor(x);\n    var z = p;\n    var a = x + 1;\n    var b = n - x;\n    var s = a + b;\n    var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) -\n                      jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n\n    if (z < (a + 1) / (s + 2))\n      betacdf = bt * betinc(z, a, b, eps);\n    else\n      betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n\n    return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.negbin, {\n  pdf: function pdf(k, r, p) {\n    if (k !== k >>> 0)\n      return false;\n    if (k < 0)\n      return 0;\n    return jStat.combination(k + r - 1, r - 1) *\n        Math.pow(1 - p, k) * Math.pow(p, r);\n  },\n\n  cdf: function cdf(x, r, p) {\n    var sum = 0,\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sum += jStat.negbin.pdf(k, r, p);\n    }\n    return sum;\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.hypgeom, {\n  pdf: function pdf(k, N, m, n) {\n    // Hypergeometric PDF.\n\n    // A simplification of the CDF algorithm below.\n\n    // k = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(k !== k | 0) {\n      return false;\n    } else if(k < 0 || k < m - (N - n)) {\n      // It's impossible to have this few successes drawn.\n      return 0;\n    } else if(k > n || k > m) {\n      // It's impossible to have this many successes drawn.\n      return 0;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return jStat.hypgeom.pdf(m - k, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.pdf(k, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate product to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < k; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledPDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          scaledPDF *= 1 - (m / (N - samplesDone));\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledPDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledPDF));\n    }\n  },\n\n  cdf: function cdf(x, N, m, n) {\n    // Hypergeometric CDF.\n\n    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n    // and comes from his hypergeometric test calculator at\n    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n    // x = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(x < 0 || x < m - (N - n)) {\n      // It's impossible to have this few successes drawn or fewer.\n      return 0;\n    } else if(x >= n || x >= m) {\n      // We will always have this many successes or fewer.\n      return 1;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.cdf(x, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate sum to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // Holds the intermediate, scaled total CDF.\n      var scaledCDF = 1;\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < x; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledCDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          var factor = 1 - (m / (N - samplesDone));\n\n          scaledPDF *= factor;\n          scaledCDF *= factor;\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n        // Add to the CDF answer.\n        scaledCDF += scaledPDF;\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledCDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledCDF));\n    }\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.poisson, {\n  pdf: function pdf(k, l) {\n    if (l < 0 || (k % 1) !== 0 || k < 0) {\n      return 0;\n    }\n\n    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n  },\n\n  cdf: function cdf(x, l) {\n    var sumarr = [],\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sumarr.push(jStat.poisson.pdf(k, l));\n    }\n    return jStat.sum(sumarr);\n  },\n\n  mean : function(l) {\n    return l;\n  },\n\n  variance : function(l) {\n    return l;\n  },\n\n  sample: function sample(l) {\n    var p = 1, k = 0, L = Math.exp(-l);\n    do {\n      k++;\n      p *= jStat._random_fn();\n    } while (p > L);\n    return k - 1;\n  }\n});\n\n// extend triangular function with static methods\njStat.extend(jStat.triangular, {\n  pdf: function pdf(x, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (x < a || x > b) {\n        return 0;\n      } else if (x < c) {\n          return (2 * (x - a)) / ((b - a) * (c - a));\n      } else if (x === c) {\n          return (2 / (b - a));\n      } else { // x > c\n          return (2 * (b - x)) / ((b - a) * (b - c));\n      }\n    }\n  },\n\n  cdf: function cdf(x, a, b, c) {\n    if (b <= a || c < a || c > b)\n      return NaN;\n    if (x <= a)\n      return 0;\n    else if (x >= b)\n      return 1;\n    if (x <= c)\n      return Math.pow(x - a, 2) / ((b - a) * (c - a));\n    else // x > c\n      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n  },\n\n  inv: function inv(p, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (p <= ((c - a) / (b - a))) {\n        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n      } else { // p > ((c - a) / (b - a))\n        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));\n      }\n    }\n  },\n\n  mean: function mean(a, b, c) {\n    return (a + b + c) / 3;\n  },\n\n  median: function median(a, b, c) {\n    if (c <= (a + b) / 2) {\n      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n    } else if (c > (a + b) / 2) {\n      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n    }\n  },\n\n  mode: function mode(a, b, c) {\n    return c;\n  },\n\n  sample: function sample(a, b, c) {\n    var u = jStat._random_fn();\n    if (u < ((c - a) / (b - a)))\n      return a + Math.sqrt(u * (b - a) * (c - a))\n    return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n  },\n\n  variance: function variance(a, b, c) {\n    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n  }\n});\n\n\n// extend arcsine function with static methods\njStat.extend(jStat.arcsine, {\n  pdf: function pdf(x, a, b) {\n    if (b <= a) return NaN;\n\n    return (x <= a || x >= b) ? 0 :\n      (2 / Math.PI) *\n        Math.pow(Math.pow(b - a, 2) -\n                  Math.pow(2 * x - a - b, 2), -0.5);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n  },\n\n  mean: function mean(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  median: function median(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return ((a + b) / 2) + ((b - a) / 2) *\n      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n  },\n\n  variance: function variance(a, b) {\n    if (b <= a) return NaN;\n    return Math.pow(b - a, 2) / 8;\n  }\n});\n\n\nfunction laplaceSign(x) { return x / Math.abs(x); }\n\njStat.extend(jStat.laplace, {\n  pdf: function pdf(x, mu, b) {\n    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);\n  },\n\n  cdf: function cdf(x, mu, b) {\n    if (b <= 0) { return 0; }\n\n    if(x < mu) {\n      return 0.5 * Math.exp((x - mu) / b);\n    } else {\n      return 1 - 0.5 * Math.exp(- (x - mu) / b);\n    }\n  },\n\n  mean: function(mu/*, b*/) {\n    return mu;\n  },\n\n  median: function(mu/*, b*/) {\n    return mu;\n  },\n\n  mode: function(mu/*, b*/) {\n    return mu;\n  },\n\n  variance: function(mu, b) {\n    return 2 * b * b;\n  },\n\n  sample: function sample(mu, b) {\n    var u = jStat._random_fn() - 0.5;\n\n    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));\n  }\n});\n\nfunction tukeyWprob(w, rr, cc) {\n  var nleg = 12;\n  var ihalf = 6;\n\n  var C1 = -30;\n  var C2 = -50;\n  var C3 = 60;\n  var bb   = 8;\n  var wlar = 3;\n  var wincr1 = 2;\n  var wincr2 = 3;\n  var xleg = [\n    0.981560634246719250690549090149,\n    0.904117256370474856678465866119,\n    0.769902674194304687036893833213,\n    0.587317954286617447296702418941,\n    0.367831498998180193752691536644,\n    0.125233408511468915472441369464\n  ];\n  var aleg = [\n    0.047175336386511827194615961485,\n    0.106939325995318430960254718194,\n    0.160078328543346226334652529543,\n    0.203167426723065921749064455810,\n    0.233492536538354808760849898925,\n    0.249147045813402785000562436043\n  ];\n\n  var qsqz = w * 0.5;\n\n  // if w >= 16 then the integral lower bound (occurs for c=20)\n  // is 0.99999999999995 so return a value of 1.\n\n  if (qsqz >= bb)\n    return 1.0;\n\n  // find (f(w/2) - 1) ^ cc\n  // (first term in integral of hartley's form).\n\n  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n  // if pr_w ^ cc < 2e-22 then set pr_w = 0\n  if (pr_w >= Math.exp(C2 / cc))\n    pr_w = Math.pow(pr_w, cc);\n  else\n    pr_w = 0.0;\n\n  // if w is large then the second component of the\n  // integral is small, so fewer intervals are needed.\n\n  var wincr;\n  if (w > wlar)\n    wincr = wincr1;\n  else\n    wincr = wincr2;\n\n  // find the integral of second term of hartley's form\n  // for the integral of the range for equal-length\n  // intervals using legendre quadrature.  limits of\n  // integration are from (w/2, 8).  two or three\n  // equal-length intervals are used.\n\n  // blb and bub are lower and upper limits of integration.\n\n  var blb = qsqz;\n  var binc = (bb - qsqz) / wincr;\n  var bub = blb + binc;\n  var einsum = 0.0;\n\n  // integrate over each interval\n\n  var cc1 = cc - 1.0;\n  for (var wi = 1; wi <= wincr; wi++) {\n    var elsum = 0.0;\n    var a = 0.5 * (bub + blb);\n\n    // legendre quadrature with order = nleg\n\n    var b = 0.5 * (bub - blb);\n\n    for (var jj = 1; jj <= nleg; jj++) {\n      var j, xx;\n      if (ihalf < jj) {\n        j = (nleg - jj) + 1;\n        xx = xleg[j-1];\n      } else {\n        j = jj;\n        xx = -xleg[j-1];\n      }\n      var c = b * xx;\n      var ac = a + c;\n\n      // if exp(-qexpo/2) < 9e-14,\n      // then doesn't contribute to integral\n\n      var qexpo = ac * ac;\n      if (qexpo > C3)\n        break;\n\n      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n      // if rinsum ^ (cc-1) < 9e-14,\n      // then doesn't contribute to integral\n\n      var rinsum = (pplus * 0.5) - (pminus * 0.5);\n      if (rinsum >= Math.exp(C1 / cc1)) {\n        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  // if pr_w ^ rr < 9e-14, then return 0\n  pr_w += einsum;\n  if (pr_w <= Math.exp(C1 / rr))\n    return 0;\n\n  pr_w = Math.pow(pr_w, rr);\n  if (pr_w >= 1) // 1 was iMax was eps\n    return 1;\n  return pr_w;\n}\n\nfunction tukeyQinv(p, c, v) {\n  var p0 = 0.322232421088;\n  var q0 = 0.993484626060e-01;\n  var p1 = -1.0;\n  var q1 = 0.588581570495;\n  var p2 = -0.342242088547;\n  var q2 = 0.531103462366;\n  var p3 = -0.204231210125;\n  var q3 = 0.103537752850;\n  var p4 = -0.453642210148e-04;\n  var q4 = 0.38560700634e-02;\n  var c1 = 0.8832;\n  var c2 = 0.2368;\n  var c3 = 1.214;\n  var c4 = 1.208;\n  var c5 = 1.4142;\n  var vmax = 120.0;\n\n  var ps = 0.5 - 0.5 * p;\n  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)\n     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  var q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * Math.log(c - 1.0) + c5);\n}\n\njStat.extend(jStat.tukey, {\n  cdf: function cdf(q, nmeans, df) {\n    // Identical implementation as the R ptukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var nlegq = 16;\n    var ihalfq = 8;\n\n    var eps1 = -30.0;\n    var eps2 = 1.0e-14;\n    var dhaf  = 100.0;\n    var dquar = 800.0;\n    var deigh = 5000.0;\n    var dlarg = 25000.0;\n    var ulen1 = 1.0;\n    var ulen2 = 0.5;\n    var ulen3 = 0.25;\n    var ulen4 = 0.125;\n    var xlegq = [\n      0.989400934991649932596154173450,\n      0.944575023073232576077988415535,\n      0.865631202387831743880467897712,\n      0.755404408355003033895101194847,\n      0.617876244402643748446671764049,\n      0.458016777657227386342419442984,\n      0.281603550779258913230460501460,\n      0.950125098376374401853193354250e-1\n    ];\n    var alegq = [\n      0.271524594117540948517805724560e-1,\n      0.622535239386478928628438369944e-1,\n      0.951585116824927848099251076022e-1,\n      0.124628971255533872052476282192,\n      0.149595988816576732081501730547,\n      0.169156519395002538189312079030,\n      0.182603415044923588866763667969,\n      0.189450610455068496285396723208\n    ];\n\n    if (q <= 0)\n      return 0;\n\n    // df must be > 1\n    // there must be at least two values\n\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (!Number.isFinite(q))\n      return 1;\n\n    if (df > dlarg)\n      return tukeyWprob(q, rr, cc);\n\n    // calculate leading constant\n\n    var f2 = df * 0.5;\n    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);\n    var f21 = f2 - 1.0;\n\n    // integral is divided into unit, half-unit, quarter-unit, or\n    // eighth-unit length intervals depending on the value of the\n    // degrees of freedom.\n\n    var ff4 = df * 0.25;\n    var ulen;\n    if      (df <= dhaf)  ulen = ulen1;\n    else if (df <= dquar) ulen = ulen2;\n    else if (df <= deigh) ulen = ulen3;\n    else                  ulen = ulen4;\n\n    f2lf += Math.log(ulen);\n\n    // integrate over each subinterval\n\n    var ans = 0.0;\n\n    for (var i = 1; i <= 50; i++) {\n      var otsum = 0.0;\n\n      // legendre quadrature with order = nlegq\n      // nodes (stored in xlegq) are symmetric around zero.\n\n      var twa1 = (2 * i - 1) * ulen;\n\n      for (var jj = 1; jj <= nlegq; jj++) {\n        var j, t1;\n        if (ihalfq < jj) {\n          j = jj - ihalfq - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))\n              - (((xlegq[j] * ulen) + twa1) * ff4);\n        } else {\n          j = jj - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))\n              + (((xlegq[j] * ulen) - twa1) * ff4);\n        }\n\n        // if exp(t1) < 9e-14, then doesn't contribute to integral\n        var qsqz;\n        if (t1 >= eps1) {\n          if (ihalfq < jj) {\n            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);\n          } else {\n            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);\n          }\n\n          // call wprob to find integral of range portion\n\n          var wprb = tukeyWprob(qsqz, rr, cc);\n          var rotsum = (wprb * alegq[j]) * Math.exp(t1);\n          otsum += rotsum;\n        }\n        // end legendre integral for interval i\n        // L200:\n      }\n\n      // if integral for interval i < 1e-14, then stop.\n      // However, in order to avoid small area under left tail,\n      // at least  1 / ulen  intervals are calculated.\n      if (i * ulen >= 1.0 && otsum <= eps2)\n        break;\n\n      // end of interval i\n      // L330:\n\n      ans += otsum;\n    }\n\n    if (otsum > eps2) { // not converged\n      throw new Error('tukey.cdf failed to converge');\n    }\n    if (ans > 1)\n      ans = 1;\n    return ans;\n  },\n\n  inv: function(p, nmeans, df) {\n    // Identical implementation as the R qtukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var eps = 0.0001;\n    var maxiter = 50;\n\n    // df must be > 1 ; there must be at least two values\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (p < 0 || p > 1) return NaN;\n    if (p === 0) return 0;\n    if (p === 1) return Infinity;\n\n    // Initial value\n\n    var x0 = tukeyQinv(p, cc, df);\n\n    // Find prob(value < x0)\n\n    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n    // Find the second iterate and prob(value < x1).\n    // If the first iterate has probability value\n    // exceeding p then second iterate is 1 less than\n    // first iterate; otherwise it is 1 greater.\n\n    var x1;\n    if (valx0 > 0.0)\n      x1 = Math.max(0.0, x0 - 1.0);\n    else\n      x1 = x0 + 1.0;\n    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n    // Find new iterate\n\n    var ans;\n    for(var iter = 1; iter < maxiter; iter++) {\n      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));\n      valx0 = valx1;\n\n      // New iterate must be >= 0\n\n      x0 = x1;\n      if (ans < 0.0) {\n        ans = 0.0;\n        valx1 = -p;\n      }\n      // Find prob(value < new iterate)\n\n      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n      x1 = ans;\n\n      // If the difference between two successive\n      // iterates is less than eps, stop\n\n      var xabs = Math.abs(x1 - x0);\n      if (xabs < eps)\n        return ans;\n    }\n\n    throw new Error('tukey.inv failed to converge');\n  }\n});\n\n}(jStat, Math));\n/* Provides functions for the solution of linear system of equations, integration, extrapolation,\n * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n(function(jStat, Math) {\n\nvar push = Array.prototype.push;\nvar isArray = jStat.utils.isArray;\n\nfunction isUsable(arg) {\n  return isArray(arg) || arg instanceof jStat;\n}\n\njStat.extend({\n\n  // add a vector/matrix to a vector/matrix or scalar\n  add: function add(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value + arg[row][col];\n      });\n    }\n    return jStat.map(arr, function(value) { return value + arg; });\n  },\n\n  // subtract a vector or scalar from the vector\n  subtract: function subtract(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value - arg[row][col] || 0;\n      });\n    }\n    return jStat.map(arr, function(value) { return value - arg; });\n  },\n\n  // matrix division\n  divide: function divide(arr, arg) {\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.multiply(arr, jStat.inv(arg));\n    }\n    return jStat.map(arr, function(value) { return value / arg; });\n  },\n\n  // matrix multiplication\n  multiply: function multiply(arr, arg) {\n    var row, col, nrescols, sum, nrow, ncol, res, rescols;\n    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n    if (arr.length === undefined && arg.length === undefined) {\n      return arr * arg;\n    }\n    nrow = arr.length,\n    ncol = arr[0].length,\n    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),\n    rescols = 0;\n    if (isUsable(arg)) {\n      for (; rescols < nrescols; rescols++) {\n        for (row = 0; row < nrow; row++) {\n          sum = 0;\n          for (col = 0; col < ncol; col++)\n          sum += arr[row][col] * arg[col][rescols];\n          res[row][rescols] = sum;\n        }\n      }\n      return (nrow === 1 && rescols === 1) ? res[0][0] : res;\n    }\n    return jStat.map(arr, function(value) { return value * arg; });\n  },\n\n  // outer([1,2,3],[4,5,6])\n  // ===\n  // [[1],[2],[3]] times [[4,5,6]]\n  // ->\n  // [[4,5,6],[8,10,12],[12,15,18]]\n  outer:function outer(A, B) {\n    return jStat.multiply(A.map(function(t){ return [t] }), [B]);\n  },\n\n\n  // Returns the dot product of two matricies\n  dot: function dot(arr, arg) {\n    if (!isUsable(arr[0])) arr = [ arr ];\n    if (!isUsable(arg[0])) arg = [ arg ];\n    // convert column to row vector\n    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,\n    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,\n    res = [],\n    row = 0,\n    nrow = left.length,\n    ncol = left[0].length,\n    sum, col;\n    for (; row < nrow; row++) {\n      res[row] = [];\n      sum = 0;\n      for (col = 0; col < ncol; col++)\n      sum += left[row][col] * right[row][col];\n      res[row] = sum;\n    }\n    return (res.length === 1) ? res[0] : res;\n  },\n\n  // raise every element by a scalar\n  pow: function pow(arr, arg) {\n    return jStat.map(arr, function(value) { return Math.pow(value, arg); });\n  },\n\n  // exponentiate every element\n  exp: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.exp(value); });\n  },\n\n  // generate the natural log of every element\n  log: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.log(value); });\n  },\n\n  // generate the absolute values of the vector\n  abs: function abs(arr) {\n    return jStat.map(arr, function(value) { return Math.abs(value); });\n  },\n\n  // computes the p-norm of the vector\n  // In the case that a matrix is passed, uses the first row as the vector\n  norm: function norm(arr, p) {\n    var nnorm = 0,\n    i = 0;\n    // check the p-value of the norm, and set for most common case\n    if (isNaN(p)) p = 2;\n    // check if multi-dimensional array, and make vector correction\n    if (isUsable(arr[0])) arr = arr[0];\n    // vector norm\n    for (; i < arr.length; i++) {\n      nnorm += Math.pow(Math.abs(arr[i]), p);\n    }\n    return Math.pow(nnorm, 1 / p);\n  },\n\n  // computes the angle between two vectors in rads\n  // In case a matrix is passed, this uses the first row as the vector\n  angle: function angle(arr, arg) {\n    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n  },\n\n  // augment one matrix by another\n  // Note: this function returns a matrix, not a jStat object\n  aug: function aug(a, b) {\n    var newarr = [];\n    var i;\n    for (i = 0; i < a.length; i++) {\n      newarr.push(a[i].slice());\n    }\n    for (i = 0; i < newarr.length; i++) {\n      push.apply(newarr[i], b[i]);\n    }\n    return newarr;\n  },\n\n  // The inv() function calculates the inverse of a matrix\n  // Create the inverse by augmenting the matrix by the identity matrix of the\n  // appropriate size, and then use G-J elimination on the augmented matrix.\n  inv: function inv(a) {\n    var rows = a.length;\n    var cols = a[0].length;\n    var b = jStat.identity(rows, cols);\n    var c = jStat.gauss_jordan(a, b);\n    var result = [];\n    var i = 0;\n    var j;\n\n    //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n    for (; i < rows; i++) {\n      result[i] = [];\n      for (j = cols; j < c[0].length; j++)\n        result[i][j - cols] = c[i][j];\n    }\n    return result;\n  },\n\n  // calculate the determinant of a matrix\n  det: function det(a) {\n    var alen = a.length,\n    alend = alen * 2,\n    vals = new Array(alend),\n    rowshift = alen - 1,\n    colshift = alend - 1,\n    mrow = rowshift - alen + 1,\n    mcol = colshift,\n    i = 0,\n    result = 0,\n    j;\n    // check for special 2x2 case\n    if (alen === 2) {\n      return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n    }\n    for (; i < alend; i++) {\n      vals[i] = 1;\n    }\n    for (i = 0; i < alen; i++) {\n      for (j = 0; j < alen; j++) {\n        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];\n        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];\n        mrow++;\n        mcol--;\n      }\n      mrow = --rowshift - alen + 1;\n      mcol = --colshift;\n    }\n    for (i = 0; i < alen; i++) {\n      result += vals[i];\n    }\n    for (; i < alend; i++) {\n      result -= vals[i];\n    }\n    return result;\n  },\n\n  gauss_elimination: function gauss_elimination(a, b) {\n    var i = 0,\n    j = 0,\n    n = a.length,\n    m = a[0].length,\n    factor = 1,\n    sum = 0,\n    x = [],\n    maug, pivot, temp, k;\n    a = jStat.aug(a, b);\n    maug = a[0].length;\n    for(i = 0; i < n; i++) {\n      pivot = a[i][i];\n      j = i;\n      for (k = i + 1; k < m; k++) {\n        if (pivot < Math.abs(a[k][i])) {\n          pivot = a[k][i];\n          j = k;\n        }\n      }\n      if (j != i) {\n        for(k = 0; k < maug; k++) {\n          temp = a[i][k];\n          a[i][k] = a[j][k];\n          a[j][k] = temp;\n        }\n      }\n      for (j = i + 1; j < n; j++) {\n        factor = a[j][i] / a[i][i];\n        for(k = i; k < maug; k++) {\n          a[j][k] = a[j][k] - factor * a[i][k];\n        }\n      }\n    }\n    for (i = n - 1; i >= 0; i--) {\n      sum = 0;\n      for (j = i + 1; j<= n - 1; j++) {\n        sum = sum + x[j] * a[i][j];\n      }\n      x[i] =(a[i][maug - 1] - sum) / a[i][i];\n    }\n    return x;\n  },\n\n  gauss_jordan: function gauss_jordan(a, b) {\n    var m = jStat.aug(a, b);\n    var h = m.length;\n    var w = m[0].length;\n    var c = 0;\n    var x, y, y2;\n    // find max pivot\n    for (y = 0; y < h; y++) {\n      var maxrow = y;\n      for (y2 = y+1; y2 < h; y2++) {\n        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n          maxrow = y2;\n      }\n      var tmp = m[y];\n      m[y] = m[maxrow];\n      m[maxrow] = tmp\n      for (y2 = y+1; y2 < h; y2++) {\n        c = m[y2][y] / m[y][y];\n        for (x = y; x < w; x++) {\n          m[y2][x] -= m[y][x] * c;\n        }\n      }\n    }\n    // backsubstitute\n    for (y = h-1; y >= 0; y--) {\n      c = m[y][y];\n      for (y2 = 0; y2 < y; y2++) {\n        for (x = w-1; x > y-1; x--) {\n          m[y2][x] -= m[y][x] * m[y2][y] / c;\n        }\n      }\n      m[y][y] /= c;\n      for (x = h; x < w; x++) {\n        m[y][x] /= c;\n      }\n    }\n    return m;\n  },\n\n  // solve equation\n  // Ax=b\n  // A is upper triangular matrix\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[1,2,3]\n  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n  // if you use matrix style\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[[1],[2],[3]]\n  // will return [[2.666],[0.1666],[1.666]]\n  triaUpSolve: function triaUpSolve(A, b) {\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n    var matrix_mode = false;\n\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size - 1, -1, -1).forEach(function(i) {\n      parts = jStat.arange(i + 1, size).map(function(j) {\n        return x[j] * A[i][j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    });\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n  triaLowSolve: function triaLowSolve(A, b) {\n    // like to triaUpSolve but A is lower triangular matrix\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n\n    var matrix_mode=false;\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(j) {\n        return A[i][j] * x[j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    })\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n\n  // A -> [L,U]\n  // A=LU\n  // L is lower triangular matrix\n  // U is upper triangular matrix\n  lu: function lu(A) {\n    var size = A.length;\n    //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n    var L = jStat.identity(size);\n    var R = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(t) {\n      R[0][t] = A[0][t];\n    });\n    jStat.arange(1, size).forEach(function(l) {\n      jStat.arange(l).forEach(function(i) {\n        parts = jStat.arange(i).map(function(jj) {\n          return L[l][jj] * R[jj][i];\n        });\n        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n      });\n      jStat.arange(l, size).forEach(function(j) {\n        parts = jStat.arange(l).map(function(jj) {\n          return L[l][jj] * R[jj][j];\n        });\n        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n      });\n    });\n    return [L, R];\n  },\n\n  // A -> T\n  // A=TT'\n  // T is lower triangular matrix\n  cholesky: function cholesky(A) {\n    var size = A.length;\n    var T = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(t) {\n        return Math.pow(T[i][t],2);\n      });\n      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n      jStat.arange(i + 1, size).forEach(function(j) {\n        parts = jStat.arange(i).map(function(t) {\n          return T[i][t] * T[j][t];\n        });\n        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n      });\n    });\n    return T;\n  },\n\n\n  gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n    var i = 0;\n    var j = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n    c = jStat.multiply(jStat.inv(d), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  gauss_seidel: function gauss_seidel(a, b, x, r) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i = i + 1;\n    }\n    return xk;\n  },\n\n  SOR: function SOR(a, b, x, r, w) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),\n                       jStat.subtract(jStat.multiply(d, 1 - w),\n                                      jStat.multiply(u, w)));\n    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,\n        jStat.multiply(l, w))), b), w);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  householder: function householder(a) {\n    var m = a.length;\n    var n = a[0].length;\n    var i = 0;\n    var w = [];\n    var p = [];\n    var alpha, r, k, j, factor;\n    for (; i < m - 1; i++) {\n      alpha = 0;\n      for (j = i + 1; j < n; j++)\n      alpha += (a[j][i] * a[j][i]);\n      factor = (a[i + 1][i] > 0) ? -1 : 1;\n      alpha = factor * Math.sqrt(alpha);\n      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));\n      w = jStat.zeros(m, 1);\n      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n      p = jStat.subtract(jStat.identity(m, n),\n          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n      a = jStat.multiply(p, jStat.multiply(a, p));\n    }\n    return a;\n  },\n\n  // A -> [Q,R]\n  // Q is orthogonal matrix\n  // R is upper triangular\n  QR: (function() {\n    // x -> Q\n    // find a orthogonal matrix Q st.\n    // Qx=y\n    // y is [||x||,0,0,...]\n\n    // quick ref\n    var sum   = jStat.sum;\n    var range = jStat.arange;\n\n    function qr2(x) {\n      // quick impletation\n      // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n      var n = x.length;\n      var p = x[0].length;\n\n      var r = jStat.zeros(p, p);\n      x = jStat.copy(x);\n\n      var i,j,k;\n      for(j = 0; j < p; j++){\n        r[j][j] = Math.sqrt(sum(range(n).map(function(i){\n          return x[i][j] * x[i][j];\n        })));\n        for(i = 0; i < n; i++){\n          x[i][j] = x[i][j] / r[j][j];\n        }\n        for(k = j+1; k < p; k++){\n          r[j][k] = sum(range(n).map(function(i){\n            return x[i][j] * x[i][k];\n          }));\n          for(i = 0; i < n; i++){\n            x[i][k] = x[i][k] - x[i][j]*r[j][k];\n          }\n        }\n      }\n      return [x, r];\n    }\n\n    return qr2;\n  }()),\n\n  lstsq: (function() {\n    // solve least squard problem for Ax=b as QR decomposition way if b is\n    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n    function R_I(A) {\n      A = jStat.copy(A);\n      var size = A.length;\n      var I = jStat.identity(size);\n      jStat.arange(size - 1, -1, -1).forEach(function(i) {\n        jStat.sliceAssign(\n            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n        jStat.sliceAssign(\n            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n        jStat.arange(i).forEach(function(j) {\n          var c = jStat.multiply(A[j][i], -1);\n          var Aj = jStat.slice(A, { row: j });\n          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n          var Ij = jStat.slice(I, { row: j });\n          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n        })\n      });\n      return I;\n    }\n\n    function qr_solve(A, b){\n      var array_mode = false;\n      if (b[0].length === undefined) {\n        // [c1,c2,c3] mode\n        b = b.map(function(x){ return [x] });\n        array_mode = true;\n      }\n      var QR = jStat.QR(A);\n      var Q = QR[0];\n      var R = QR[1];\n      var attrs = A[0].length;\n      var Q1 = jStat.slice(Q,{col:{end:attrs}});\n      var R1 = jStat.slice(R,{row:{end:attrs}});\n      var RI = R_I(R1);\n      var Q2 = jStat.transpose(Q1);\n\n      if(Q2[0].length === undefined){\n        Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n      var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n      if(x.length === undefined){\n        x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n\n      if (array_mode)\n        return x.map(function(i){ return i[0] });\n      return x;\n    }\n\n    return qr_solve;\n  }()),\n\n  jacobi: function jacobi(a) {\n    var condition = 1;\n    var n = a.length;\n    var e = jStat.identity(n, n);\n    var ev = [];\n    var b, i, j, p, q, maxim, theta, s;\n    // condition === 1 only if tolerance is not reached\n    while (condition === 1) {\n      maxim = a[0][1];\n      p = 0;\n      q = 1;\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i != j) {\n            if (maxim < Math.abs(a[i][j])) {\n              maxim = Math.abs(a[i][j]);\n              p = i;\n              q = j;\n            }\n          }\n        }\n      }\n      if (a[p][p] === a[q][q])\n        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;\n      else\n        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n      s = jStat.identity(n, n);\n      s[p][p] = Math.cos(theta);\n      s[p][q] = -Math.sin(theta);\n      s[q][p] = Math.sin(theta);\n      s[q][q] = Math.cos(theta);\n      // eigen vector matrix\n      e = jStat.multiply(e, s);\n      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n      a = b;\n      condition = 0;\n      for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n          if (i != j && Math.abs(a[i][j]) > 0.001) {\n            condition = 1;\n          }\n        }\n      }\n    }\n    for (i = 0; i < n; i++) ev.push(a[i][i]);\n    //returns both the eigenvalue and eigenmatrix\n    return [e, ev];\n  },\n\n  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n    var k1, k2, u_j1, k3, k4;\n    if (order === 2) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h, u_j + k1);\n        u_j1 = u_j + (k1 + k2) / 2;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    if (order === 4) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n        k4 = h * f(t_j +h, u_j + k3);\n        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    return u_j;\n  },\n\n  romberg: function romberg(f, a, b, order) {\n    var i = 0;\n    var h = (b - a) / 2;\n    var x = [];\n    var h1 = [];\n    var g = [];\n    var m, a1, j, k, I;\n    while (i < order / 2) {\n      I = f(a);\n      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n      m = x.length;\n      for (j = 1; j < m - 1; j++) {\n        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);\n      }\n      I = (h / 3) * (I + f(b));\n      g[i] = I;\n      h /= 2;\n      i++;\n    }\n    a1 = g.length;\n    m = 1;\n    while (a1 !== 1) {\n      for (j = 0; j < a1 - 1; j++)\n      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a1 = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  richardson: function richardson(X, f, x, h) {\n    function pos(X, x) {\n      var i = 0;\n      var n = X.length;\n      var p;\n      for (; i < n; i++)\n        if (X[i] === x) p = i;\n      return p;\n    }\n    var h_min = Math.abs(x - X[pos(X, x) + 1]);\n    var i = 0;\n    var g = [];\n    var h1 = [];\n    var y1, y2, m, a, j;\n    while (h >= h_min) {\n      y1 = pos(X, x + h);\n      y2 = pos(X, x);\n      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n      h /= 2;\n      i++;\n    }\n    a = g.length;\n    m = 1;\n    while (a != 1) {\n      for (j = 0; j < a - 1; j++)\n        h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  simpson: function simpson(f, a, b, n) {\n    var h = (b - a) / n;\n    var I = f(a);\n    var x = [];\n    var j = a;\n    var k = 0;\n    var i = 1;\n    var m;\n    for (; j <= b; j = j + h, k++)\n      x[k] = j;\n    m = x.length;\n    for (; i < m - 1; i++) {\n      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);\n    }\n    return (h / 3) * (I + f(b));\n  },\n\n  hermite: function hermite(X, F, dF, value) {\n    var n = X.length;\n    var p = 0;\n    var i = 0;\n    var l = [];\n    var dl = [];\n    var A = [];\n    var B = [];\n    var j;\n    for (; i < n; i++) {\n      l[i] = 1;\n      for (j = 0; j < n; j++) {\n        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n      }\n      dl[i] = 0;\n      for (j = 0; j < n; j++) {\n        if (i != j) dl[i] += 1 / (X [i] - X[j]);\n      }\n      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n      B[i] = (value - X[i]) * (l[i] * l[i]);\n      p += (A[i] * F[i] + B[i] * dF[i]);\n    }\n    return p;\n  },\n\n  lagrange: function lagrange(X, F, value) {\n    var p = 0;\n    var i = 0;\n    var j, l;\n    var n = X.length;\n    for (; i < n; i++) {\n      l = F[i];\n      for (j = 0; j < n; j++) {\n        // calculating the lagrange polynomial L_i\n        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n      }\n      // adding the lagrange polynomials found above\n      p += l;\n    }\n    return p;\n  },\n\n  cubic_spline: function cubic_spline(X, F, value) {\n    var n = X.length;\n    var i = 0, j;\n    var A = [];\n    var B = [];\n    var alpha = [];\n    var c = [];\n    var h = [];\n    var b = [];\n    var d = [];\n    for (; i < n - 1; i++)\n      h[i] = X[i + 1] - X[i];\n    alpha[0] = 0;\n    for (i = 1; i < n - 1; i++) {\n      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -\n          (3 / h[i-1]) * (F[i] - F[i-1]);\n    }\n    for (i = 1; i < n - 1; i++) {\n      A[i] = [];\n      B[i] = [];\n      A[i][i-1] = h[i-1];\n      A[i][i] = 2 * (h[i - 1] + h[i]);\n      A[i][i+1] = h[i];\n      B[i][0] = alpha[i];\n    }\n    c = jStat.multiply(jStat.inv(A), B);\n    for (j = 0; j < n - 1; j++) {\n      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n    }\n    for (j = 0; j < n; j++) {\n      if (X[j] > value) break;\n    }\n    j -= 1;\n    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *\n        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n  },\n\n  gauss_quadrature: function gauss_quadrature() {\n    throw new Error('gauss_quadrature not yet implemented');\n  },\n\n  PCA: function PCA(X) {\n    var m = X.length;\n    var n = X[0].length;\n    var i = 0;\n    var j, temp1;\n    var u = [];\n    var D = [];\n    var result = [];\n    var temp2 = [];\n    var Y = [];\n    var Bt = [];\n    var B = [];\n    var C = [];\n    var V = [];\n    var Vt = [];\n    for (i = 0; i < m; i++) {\n      u[i] = jStat.sum(X[i]) / n;\n    }\n    for (i = 0; i < n; i++) {\n      B[i] = [];\n      for(j = 0; j < m; j++) {\n        B[i][j] = X[j][i] - u[j];\n      }\n    }\n    B = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      C[i] = [];\n      for (j = 0; j < m; j++) {\n        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);\n      }\n    }\n    result = jStat.jacobi(C);\n    V = result[0];\n    D = result[1];\n    Vt = jStat.transpose(V);\n    for (i = 0; i < D.length; i++) {\n      for (j = i; j < D.length; j++) {\n        if(D[i] < D[j])  {\n          temp1 = D[i];\n          D[i] = D[j];\n          D[j] = temp1;\n          temp2 = Vt[i];\n          Vt[i] = Vt[j];\n          Vt[j] = temp2;\n        }\n      }\n    }\n    Bt = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      Y[i] = [];\n      for (j = 0; j < Bt.length; j++) {\n        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n      }\n    }\n    return [X, D, Vt, Y];\n  }\n});\n\n// extend jStat.fn with methods that require one argument\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function(arg, func) {\n      var tmpthis = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n        }, 15);\n        return this;\n      }\n      if (typeof jStat[passfunc](this, arg) === 'number')\n        return jStat[passfunc](this, arg);\n      else\n        return jStat(jStat[passfunc](this, arg));\n    };\n  }(funcs[i]));\n}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\nvar slice = [].slice;\nvar isNumber = jStat.utils.isNumber;\nvar isArray = jStat.utils.isArray;\n\n// flag==true denotes use of sample standard deviation\n// Z Statistics\njStat.extend({\n  // 2 different parameter lists:\n  // (value, mean, sd)\n  // (value, array, flag)\n  zscore: function zscore() {\n    var args = slice.call(arguments);\n    if (isNumber(args[1])) {\n      return (args[0] - args[1]) / args[2];\n    }\n    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, sides)\n  // (zscore, sides)\n  // (value, array, sides, flag)\n  ztest: function ztest() {\n    var args = slice.call(arguments);\n    var z;\n    if (isArray(args[1])) {\n      // (value, array, sides, flag)\n      z = jStat.zscore(args[0],args[1],args[3]);\n      return (args[2] === 1) ?\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);\n    } else {\n      if (args.length > 2) {\n        // (value, mean, sd, sides)\n        z = jStat.zscore(args[0],args[1],args[2]);\n        return (args[3] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);\n      } else {\n        // (zscore, sides)\n        z = args[0];\n        return (args[1] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)*2);\n      }\n    }\n  }\n});\n\njStat.extend(jStat.fn, {\n  zscore: function zscore(value, flag) {\n    return (value - this.mean()) / this.stdev(flag);\n  },\n\n  ztest: function ztest(value, sides, flag) {\n    var zscore = Math.abs(this.zscore(value, flag));\n    return (sides === 1) ?\n      (jStat.normal.cdf(-zscore, 0, 1)) :\n      (jStat.normal.cdf(-zscore, 0, 1) * 2);\n  }\n});\n\n// T Statistics\njStat.extend({\n  // 2 parameter lists\n  // (value, mean, sd, n)\n  // (value, array)\n  tscore: function tscore() {\n    var args = slice.call(arguments);\n    return (args.length === 4) ?\n      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :\n      ((args[0] - jStat.mean(args[1])) /\n       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, n, sides)\n  // (tscore, n, sides)\n  // (value, array, sides)\n  ttest: function ttest() {\n    var args = slice.call(arguments);\n    var tscore;\n    if (args.length === 5) {\n      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n      return (args[4] === 1) ?\n        (jStat.studentt.cdf(-tscore, args[3]-1)) :\n        (jStat.studentt.cdf(-tscore, args[3]-1)*2);\n    }\n    if (isNumber(args[1])) {\n      tscore = Math.abs(args[0])\n      return (args[2] == 1) ?\n        (jStat.studentt.cdf(-tscore, args[1]-1)) :\n        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);\n    }\n    tscore = Math.abs(jStat.tscore(args[0], args[1]))\n    return (args[2] == 1) ?\n      (jStat.studentt.cdf(-tscore, args[1].length-1)) :\n      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  tscore: function tscore(value) {\n    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n  },\n\n  ttest: function ttest(value, sides) {\n    return (sides === 1) ?\n      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :\n      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);\n  }\n});\n\n// F Statistics\njStat.extend({\n  // Paramter list is as follows:\n  // (array1, array2, array3, ...)\n  // or it is an array of arrays\n  // array of arrays conversion\n  anovafscore: function anovafscore() {\n    var args = slice.call(arguments),\n    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n    if (args.length === 1) {\n      tmpargs = new Array(args[0].length);\n      for (i = 0; i < args[0].length; i++) {\n        tmpargs[i] = args[0][i];\n      }\n      args = tmpargs;\n    }\n    // Builds sample array\n    sample = new Array();\n    for (i = 0; i < args.length; i++) {\n      sample = sample.concat(args[i]);\n    }\n    sampMean = jStat.mean(sample);\n    // Computes the explained variance\n    expVar = 0;\n    for (i = 0; i < args.length; i++) {\n      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n    }\n    expVar /= (args.length - 1);\n    // Computes unexplained variance\n    unexpVar = 0;\n    for (i = 0; i < args.length; i++) {\n      sampSampMean = jStat.mean(args[i]);\n      for (j = 0; j < args[i].length; j++) {\n        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n      }\n    }\n    unexpVar /= (sample.length - args.length);\n    return expVar / unexpVar;\n  },\n\n  // 2 different paramter setups\n  // (array1, array2, array3, ...)\n  // (anovafscore, df1, df2)\n  anovaftest: function anovaftest() {\n    var args = slice.call(arguments),\n    df1, df2, n, i;\n    if (isNumber(args[0])) {\n      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n    }\n    var anovafscore = jStat.anovafscore(args);\n    df1 = args.length - 1;\n    n = 0;\n    for (i = 0; i < args.length; i++) {\n      n = n + args[i].length;\n    }\n    df2 = n - df1 - 1;\n    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n  },\n\n  ftest: function ftest(fscore, df1, df2) {\n    return 1 - jStat.centralF.cdf(fscore, df1, df2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  anovafscore: function anovafscore() {\n    return jStat.anovafscore(this.toArray());\n  },\n\n  anovaftes: function anovaftes() {\n    var n = 0;\n    var i;\n    for (i = 0; i < this.length; i++) {\n      n = n + this[i].length;\n    }\n    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n  }\n});\n\n// Tukey's range test\njStat.extend({\n  // 2 parameter lists\n  // (mean1, mean2, n1, n2, sd)\n  // (array1, array2, sd)\n  qscore: function qscore() {\n    var args = slice.call(arguments);\n    var mean1, mean2, n1, n2, sd;\n    if (isNumber(args[0])) {\n        mean1 = args[0];\n        mean2 = args[1];\n        n1 = args[2];\n        n2 = args[3];\n        sd = args[4];\n    } else {\n        mean1 = jStat.mean(args[0]);\n        mean2 = jStat.mean(args[1]);\n        n1 = args[0].length;\n        n2 = args[1].length;\n        sd = args[2];\n    }\n    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n  },\n\n  // 3 different parameter lists:\n  // (qscore, n, k)\n  // (mean1, mean2, n1, n2, sd, n, k)\n  // (array1, array2, sd, n, k)\n  qtest: function qtest() {\n    var args = slice.call(arguments);\n\n    var qscore;\n    if (args.length === 3) {\n      qscore = args[0];\n      args = args.slice(1);\n    } else if (args.length === 7) {\n      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n      args = args.slice(5);\n    } else {\n      qscore = jStat.qscore(args[0], args[1], args[2]);\n      args = args.slice(3);\n    }\n\n    var n = args[0];\n    var k = args[1];\n\n    return 1 - jStat.tukey.cdf(qscore, k, n - k);\n  },\n\n  tukeyhsd: function tukeyhsd(arrays) {\n    var sd = jStat.pooledstdev(arrays);\n    var means = arrays.map(function (arr) {return jStat.mean(arr);});\n    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);\n\n    var results = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n        }\n    }\n\n    return results;\n  }\n});\n\n// Error Bounds\njStat.extend({\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  normalci: function normalci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  tci: function tci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *\n                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  significant: function significant(pvalue, alpha) {\n    return pvalue < alpha;\n  }\n});\n\njStat.extend(jStat.fn, {\n  normalci: function normalci(value, alpha) {\n    return jStat.normalci(value, alpha, this.toArray());\n  },\n\n  tci: function tci(value, alpha) {\n    return jStat.tci(value, alpha, this.toArray());\n  }\n});\n\n// internal method for calculating the z-score for a difference of proportions test\nfunction differenceOfProportions(p1, n1, p2, n2) {\n  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n    throw new Error(\"Proportions should be greater than 0 and less than 1\")\n  }\n  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));\n  return (p1 - p2) / se;\n}\n\n// Difference of Proportions\njStat.extend(jStat.fn, {\n  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 1);\n  },\n\n  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 2);\n  }\n});\n\n}(jStat, Math));\njStat.models = (function(){\n  function sub_regress(exog) {\n    var var_count = exog[0].length;\n    var modelList = jStat.arange(var_count).map(function(endog_index) {\n      var exog_index =\n          jStat.arange(var_count).filter(function(i){return i!==endog_index});\n      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),\n                 jStat.col(exog, exog_index))\n    });\n    return modelList;\n  }\n\n  // do OLS model regress\n  // exog have include const columns ,it will not generate it .In fact, exog is\n  // \"design matrix\" look at\n  //https://en.wikipedia.org/wiki/Design_matrix\n  function ols(endog, exog) {\n    var nobs = endog.length;\n    var df_model = exog[0].length - 1;\n    var df_resid = nobs-df_model - 1;\n    var coef = jStat.lstsq(exog, endog);\n    var predict =\n        jStat.multiply(exog, coef.map(function(x) { return [x] }))\n            .map(function(p) { return p[0] });\n    var resid = jStat.subtract(endog, predict);\n    var ybar = jStat.mean(endog);\n    // constant cause problem\n    // var SST = jStat.sum(endog.map(function(y) {\n    //   return Math.pow(y-ybar,2);\n    // }));\n    var SSE = jStat.sum(predict.map(function(f) {\n      return Math.pow(f - ybar, 2);\n    }));\n    var SSR = jStat.sum(endog.map(function(y, i) {\n      return Math.pow(y - predict[i], 2);\n    }));\n    var SST = SSE + SSR;\n    var R2 = (SSE / SST);\n    return {\n        exog:exog,\n        endog:endog,\n        nobs:nobs,\n        df_model:df_model,\n        df_resid:df_resid,\n        coef:coef,\n        predict:predict,\n        resid:resid,\n        ybar:ybar,\n        SST:SST,\n        SSE:SSE,\n        SSR:SSR,\n        R2:R2\n    };\n  }\n\n  // H0: b_I=0\n  // H1: b_I!=0\n  function t_test(model) {\n    var subModelList = sub_regress(model.exog);\n    //var sigmaHat=jStat.stdev(model.resid);\n    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));\n    var seBetaHat = subModelList.map(function(mod) {\n      var SST = mod.SST;\n      var R2 = mod.R2;\n      return sigmaHat / Math.sqrt(SST * (1 - R2));\n    });\n    var tStatistic = model.coef.map(function(coef, i) {\n      return (coef - 0) / seBetaHat[i];\n    });\n    var pValue = tStatistic.map(function(t) {\n      var leftppf = jStat.studentt.cdf(t, model.df_resid);\n      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n    });\n    var c = jStat.studentt.inv(0.975, model.df_resid);\n    var interval95 = model.coef.map(function(coef, i) {\n      var d = c * seBetaHat[i];\n      return [coef - d, coef + d];\n    })\n    return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n    };\n  }\n\n  function F_test(model) {\n    var F_statistic =\n        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);\n    var fcdf = function(x, n1, n2) {\n      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)\n    }\n    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n    return { F_statistic: F_statistic, pvalue: pvalue };\n  }\n\n  function ols_wrap(endog, exog) {\n    var model = ols(endog,exog);\n    var ttest = t_test(model);\n    var ftest = F_test(model);\n    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n    // Which matches the 'adjusted R^2' provided by R's lm package\n    var adjust_R2 =\n        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));\n    model.t = ttest;\n    model.f = ftest;\n    model.adjust_R2 = adjust_R2;\n    return model;\n  }\n\n  return { ols: ols_wrap };\n})();\n//To regress, simply build X matrix\n//(append column of 1's) using\n//buildxmatrix and build the Y\n//matrix using buildymatrix\n//(simply the transpose)\n//and run regress.\n\n\n\n//Regressions\n\njStat.extend({\n  buildxmatrix: function buildxmatrix(){\n    //Parameters will be passed in as such\n    //(array1,array2,array3,...)\n    //as (x1,x2,x3,...)\n    //needs to be (1,x1,x2,x3,...)\n    var matrixRows = new Array(arguments.length);\n    for(var i=0;i<arguments.length;i++){\n      var array = [1];\n      matrixRows[i]= array.concat(arguments[i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  builddxmatrix: function builddxmatrix() {\n    //Paramters will be passed in as such\n    //([array1,array2,...]\n    var matrixRows = new Array(arguments[0].length);\n    for(var i=0;i<arguments[0].length;i++){\n      var array = [1]\n      matrixRows[i]= array.concat(arguments[0][i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  buildjxmatrix: function buildjxmatrix(jMat) {\n    //Builds from jStat Matrix\n    var pass = new Array(jMat.length)\n    for(var i=0;i<jMat.length;i++){\n      pass[i] = jMat[i];\n    }\n    return jStat.builddxmatrix(pass);\n\n  },\n\n  buildymatrix: function buildymatrix(array){\n    return jStat(array).transpose();\n  },\n\n  buildjymatrix: function buildjymatrix(jMat){\n    return jMat.transpose();\n  },\n\n  matrixmult: function matrixmult(A,B){\n    var i, j, k, result, sum;\n    if (A.cols() == B.rows()) {\n      if(B.rows()>1){\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[k][j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n      result = [];\n      for (i = 0; i < A.rows(); i++) {\n        result[i] = [];\n        for (j = 0; j < B.cols(); j++) {\n          sum = 0;\n          for (k = 0; k < A.cols(); k++) {\n            sum += A.toArray()[i][k] * B.toArray()[j];\n          }\n          result[i][j] = sum;\n        }\n      }\n      return jStat(result);\n    }\n  },\n\n  //regress and regresst to be fixed\n\n  regress: function regress(jMatX,jMatY){\n    //print(\"regressin!\");\n    //print(jMatX.toArray());\n    var innerinv = jStat.xtranspxinv(jMatX);\n    //print(innerinv);\n    var xtransp = jMatX.transpose();\n    var next = jStat.matrixmult(jStat(innerinv),xtransp);\n    return jStat.matrixmult(next,jMatY);\n\n  },\n\n  regresst: function regresst(jMatX,jMatY,sides){\n    var beta = jStat.regress(jMatX,jMatY);\n\n    var compile = {};\n    compile.anova = {};\n    var jMatYBar = jStat.jMatYBar(jMatX, beta);\n    compile.yBar = jMatYBar;\n    var yAverage = jMatY.mean();\n    compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n\n    compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n    compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n\n    compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n    compile.anova.mse =\n        compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.sst = jStat.sst(jMatY, yAverage);\n    compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n\n    compile.anova.r2 = 1 - (compile.anova.sse / compile.anova.sst);\n    if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n\n    compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n    compile.anova.pvalue =\n        jStat.anovaftest(compile.anova.fratio,\n                         jMatX[0].length - 1,\n                         jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.rmse = Math.sqrt(compile.anova.mse);\n\n    compile.anova.r2adj = 1 - (compile.anova.mse / compile.anova.mst);\n    if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n\n    compile.stats = new Array(jMatX[0].length);\n    var covar = jStat.xtranspxinv(jMatX);\n    var sds, ts, ps;\n\n    for(var i=0; i<beta.length;i++){\n      sds=Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n      ts= Math.abs(beta[i] / sds);\n      ps= jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n\n      compile.stats[i]=[beta[i], sds, ts, ps];\n    }\n\n    compile.regress = beta;\n    return compile;\n  },\n\n  xtranspx: function xtranspx(jMatX){\n    return jStat.matrixmult(jMatX.transpose(),jMatX);\n  },\n\n\n  xtranspxinv: function xtranspxinv(jMatX){\n    var inner = jStat.matrixmult(jMatX.transpose(),jMatX);\n    var innerinv = jStat.inv(inner);\n    return innerinv;\n  },\n\n  jMatYBar: function jMatYBar(jMatX, beta) {\n    var yBar = jStat.matrixmult(jMatX, beta);\n    return new jStat(yBar);\n  },\n\n  residuals: function residuals(jMatY, jMatYBar) {\n    return jStat.matrixsubtract(jMatY, jMatYBar);\n  },\n\n  ssr: function ssr(jMatYBar, yAverage) {\n    var ssr = 0;\n    for(var i = 0; i < jMatYBar.length; i++) {\n      ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n    }\n    return ssr;\n  },\n\n  sse: function sse(jMatY, jMatYBar) {\n    var sse = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n    }\n    return sse;\n  },\n\n  sst: function sst(jMatY, yAverage) {\n    var sst = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sst += Math.pow(jMatY[i] - yAverage, 2);\n    }\n    return sst;\n  },\n\n  matrixsubtract: function matrixsubtract(A,B){\n    var ans = new Array(A.length);\n    for(var i=0;i<A.length;i++){\n      ans[i] = new Array(A[i].length);\n      for(var j=0;j<A[i].length;j++){\n        ans[i][j]=A[i][j]-B[i][j];\n      }\n    }\n    return jStat(ans);\n  }\n});\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n\n  return jStat;\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}